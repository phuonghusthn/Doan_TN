{"ast":null,"code":"var _jsxFileName = \"F:\\\\Doan_TN\\\\src\\\\components\\\\content\\\\home.js\";\nimport React, { Fragment } from 'react';\nimport DonutChart from '../common/donutchart';\nimport BarChart from '../common/barchart';\nimport { green, red, blue } from '@material-ui/core/colors';\nimport LockerReport from '../../core/report';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {\n      dataState: [],\n      totalFree: 0,\n      totalUsing: 0,\n      totalDisable: 0\n    };\n    this.donutChartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    LockerReport.getStatusReport(0, 0, '', '', 1, 1).then(value => {\n      if (value) {\n        this.setState({\n          totalFree: value.total\n        }); // this.totalFree = value.total;\n        // this.data[0] = this.totalFree\n      } // console.log(value)\n      // console.log(this.totalFree);\n\n    });\n    LockerReport.getStatusReport(0, 0, '', '', 2, 1).then(value => {\n      if (value) {\n        this.setState({\n          totalUsing: value.total\n        }); // this.totalUsing = value.total;\n        // this.data[1] = this.totalUsing\n        //this.data.push(this.totalUsing)\n      }\n    });\n    LockerReport.getStatusReport(0, 0, '', '', 3, 1).then(value => {\n      if (value) {\n        if (value.items) {\n          this.setState({\n            totalDisable: value.total\n          }); // this.totalDisable = value.total;\n          // this.data[2] = this.totalDisable\n          //this.data.push(this.totalDisable)\n        }\n      }\n    });\n    this.donutChartRef.current && this.donutChartRef.current.onCreateChart();\n    console.log(this.data);\n    this.setState({\n      dataState: this.data\n    });\n  }\n\n  render() {\n    // console.log(this.data);\n    // this.data.map((item, index) => {\n    //     console.log(item);\n    // })\n    console.log(this.state.totalDisable);\n    console.log(this.state.totalFree);\n    console.log(this.state.totalUsing);\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(DonutChart, {\n      ref: this.donutChartRef,\n      title: 'hello',\n      data: [this.state.totalFree, this.state.totalUsing, this.state.totalDisable],\n      backgroundColor: [green[500], red[500], blue[500]],\n      labels: ['trống', 'đang được sử dụng', 'vô hiệu hóa'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["F:/Doan_TN/src/components/content/home.js"],"names":["React","Fragment","DonutChart","BarChart","green","red","blue","LockerReport","Home","Component","constructor","props","data","state","dataState","totalFree","totalUsing","totalDisable","donutChartRef","createRef","componentDidMount","getStatusReport","then","value","setState","total","items","current","onCreateChart","console","log","render"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react'\r\nimport DonutChart from '../common/donutchart'\r\nimport BarChart from '../common/barchart'\r\nimport {green, red, blue} from '@material-ui/core/colors'\r\nimport LockerReport from '../../core/report'\r\n\r\n\r\nexport default class Home extends React.Component {\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            dataState: [], \r\n            totalFree: 0,\r\n            totalUsing: 0,\r\n            totalDisable: 0,\r\n        };\r\n        this.donutChartRef = React.createRef()\r\n      \r\n    }\r\n    data=[];\r\n\r\n   \r\n\r\n    componentDidMount() {\r\n      LockerReport.getStatusReport(0, 0, '', '', 1, 1)\r\n        .then(value => {\r\n             if(value){\r\n                 this.setState({\r\n                    totalFree:  value.total\r\n                 });\r\n                // this.totalFree = value.total;\r\n                // this.data[0] = this.totalFree\r\n             } \r\n            // console.log(value)\r\n            // console.log(this.totalFree);\r\n        });\r\n        LockerReport.getStatusReport(0, 0, '', '', 2, 1)\r\n        .then(value => {\r\n             if(value){\r\n                this.setState({\r\n                    totalUsing:  value.total\r\n                 });\r\n                // this.totalUsing = value.total;\r\n                // this.data[1] = this.totalUsing\r\n\r\n                //this.data.push(this.totalUsing)\r\n\r\n             } \r\n        });\r\n        LockerReport.getStatusReport(0, 0, '', '', 3, 1)\r\n        .then(value => {\r\n             if(value){\r\n                if(value.items){\r\n                    this.setState({\r\n                        totalDisable:  value.total\r\n                     });\r\n                    // this.totalDisable = value.total;\r\n                    // this.data[2] = this.totalDisable\r\n\r\n                    //this.data.push(this.totalDisable)\r\n\r\n                }\r\n             } \r\n        });\r\n\r\n        this.donutChartRef.current && this.donutChartRef.current.onCreateChart();\r\n        console.log(this.data);\r\n        this.setState({\r\n            dataState: this.data,\r\n        })\r\n        \r\n    }\r\n\r\n    render() {\r\n        // console.log(this.data);\r\n        // this.data.map((item, index) => {\r\n        //     console.log(item);\r\n        // })\r\n        console.log(this.state.totalDisable)\r\n        console.log(this.state.totalFree)\r\n        console.log(this.state.totalUsing)\r\n\r\n        return(\r\n            <Fragment> \r\n                 <div>\r\n                    <DonutChart ref={this.donutChartRef} title={'hello'} data={[this.state.totalFree, this.state.totalUsing, this.state.totalDisable]}  backgroundColor={[green[500], red[500], blue[500]]} labels={['trống', 'đang được sử dụng', 'vô hiệu hóa']}/>\r\n                </div>\r\n            </Fragment>\r\n           \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}