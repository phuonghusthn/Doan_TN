{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Levels {\n  constructor() {\n    this.getLevel = async (bId = 0, page = 0) => {\n      try {\n        let url = ApiUri.level.getLevel.uri;\n        url += '?bId=' + bId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.level.getLevel.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.editLevel = async (lId = 0, lDes = '') => {\n      try {\n        let url = ApiUri.level.editLevel.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId,\n          'lDes': lDes\n        };\n        return await fetch(url, {\n          method: ApiUri.level.editLevel.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.removeLevel = async (lId = 0) => {\n      try {\n        let url = ApiUri.level.removeLevel.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.level.removeLevel.method,\n          // mode: 'cors',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': '*',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Level = new Levels();\nexport default Level;","map":{"version":3,"sources":["E:/DATN_2020/src/core/level.js"],"names":["ApiUri","server","Levels","getLevel","bId","page","url","level","uri","localStorage","getItem","fetch","method","headers","then","response","json","catch","console","error","editLevel","lId","lDes","form","mode","cache","referrerPolicy","body","JSON","stringify","removeLevel","Level"],"mappings":"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","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Levels {\r\n    getLevel = async (bId = 0, page = 0) => {\r\n        try {\r\n            let url = ApiUri.level.getLevel.uri;\r\n            url += '?bId=' + bId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.level.getLevel.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    editLevel = async (lId = 0, lDes ='') => {\r\n        try {\r\n            let url = ApiUri.level.editLevel.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n                'lDes': lDes,\r\n\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.level.editLevel.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    removeLevel = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.level.removeLevel.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n            return await fetch(url, {\r\n                method: ApiUri.level.removeLevel.method,\r\n                // mode: 'cors',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': '*',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error)\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nvar Level = new Levels();\r\nexport default Level;"]},"metadata":{},"sourceType":"module"}