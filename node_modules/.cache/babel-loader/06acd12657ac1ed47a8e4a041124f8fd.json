{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usingmanagement\\\\mangeuserlockermanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport UserLoker from '../../../core/user';\nimport TableIcons from '../../common/materialicon';\nimport Department from '../../../core/department';\nexport default class ManageUserLockerManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dictDev = {};\n    this.ENameInput = '';\n    this.ECodeInput = '';\n    this.LabelInput = '';\n    this.optionsTable = {\n      search: false,\n      showTitle: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n    this.columnsTable1 = [{\n      title: 'Họ và tên',\n      field: 'eName'\n    }, {\n      title: 'ID nhân sụ',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }\n        }, this.dictDev[rowData.dId]);\n      }\n    }, {\n      title: 'Số tủ được phép sử dụng',\n      field: 'lNum'\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        UserLoker.getUsage(this.ENameInput, this.ECodeInput, this.LabelInput, 0, 0, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onENameChange = value => {\n      this.ENameInput = value;\n    };\n\n    this.onECodeChange = value => {\n      this.ECodeInput = value;\n    };\n\n    this.onLabelChange = value => {\n      this.LabelInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.state = {};\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 13\n      }\n    }, \"ManageUserLockerManagement\", /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onENameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onECodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(MaterialTable, {\n      options: this.optionsTable,\n      columns: this.columnsTable1,\n      data: this.getDataFromServer,\n      icons: TableIcons,\n      title: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usingmanagement/mangeuserlockermanagement.js"],"names":["React","Fragment","MaterialTable","UserLoker","TableIcons","Department","ManageUserLockerManagement","Component","constructor","props","dictDev","ENameInput","ECodeInput","LabelInput","optionsTable","search","showTitle","pageSize","pageSizeOptions","columnsTable1","title","field","render","rowData","dId","onSearchClick","tableRef","current","onQueryChange","getDataFromServer","query","Promise","resolve","reject","getUsage","page","then","value","data","items","currentPage","totalCount","total","onENameChange","onECodeChange","onLabelChange","state","createRef","modalRef","componentDidMount","getDepartment","length","map","item","index","dName","setState","isUpdateView","display","margin"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport UserLoker from '../../../core/user';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Department from '../../../core/department';\r\n\r\n\r\nexport default class ManageUserLockerManagement extends React.Component {\r\n    dictDev ={};\r\n    ENameInput = '';\r\n    ECodeInput = '';\r\n    LabelInput = '';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        \r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n    \r\n    }\r\n\r\n    optionsTable = {\r\n        search: false,\r\n        showTitle: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n\r\n    }\r\n\r\n    columnsTable1 = [\r\n        {\r\n             title: 'Họ và tên', \r\n             field: 'eName'\r\n        },\r\n        {\r\n             title: 'ID nhân sụ', \r\n             field: 'eCode'\r\n         },\r\n        { \r\n            title: 'Bộ phận làm việc',\r\n            field: 'dId', \r\n            render: rowData => {\r\n                return(\r\n                    <span>\r\n                        {this.dictDev[rowData.dId]}\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Số tủ được phép sử dụng', \r\n            field:'lNum'\r\n        },\r\n        {\r\n            title: 'Action', \r\n            field: ''\r\n        }\r\n    ]\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            UserLoker.getUsage(this.ENameInput, this.ECodeInput, this.LabelInput, 0, 0, query.page +1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })   \r\n                })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n  \r\n    }\r\n\r\n    onENameChange = (value) => {\r\n        this.ENameInput = value;\r\n    }\r\n\r\n    onECodeChange = (value) => {\r\n        this.ECodeInput = value;\r\n    } \r\n\r\n    onLabelChange = (value) => {\r\n        this.LabelInput = value;\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n \r\n  \r\n    render() {\r\n        \r\n        return(\r\n            <Fragment>\r\n                ManageUserLockerManagement\r\n                <div style={{display: 'flex', margin: '10px' }}>\r\n                    <Input \r\n                        title={'Tên nhân viên'} \r\n                        onChange = {this.onENameChange}\r\n                    />\r\n\r\n                    <Input \r\n                        title={'ID nhân sự'} \r\n                        onChange = {this.onECodeChange}\r\n                    />\r\n\r\n                    <Combobox\r\n                     title={'Bộ phận làm việc'} \r\n                     />\r\n\r\n                    <Combobox\r\n                     title={'Tòa nhà'} \r\n                     />\r\n\r\n                    <Input \r\n                        title={'Nhãn tủ'} \r\n                        onChange = {this.onLabelChange\r\n                    }\r\n                    />\r\n\r\n                    <Button title={'Tìm kiếm'}\r\n                        onClick={this.onSearchClick} />\r\n                </div>\r\n                <MaterialTable\r\n                options={this.optionsTable}\r\n                columns={this.columnsTable1}\r\n                data={this.getDataFromServer}\r\n                icons= {TableIcons}\r\n                title=\"Danh sách người dùng hiện tại\"/>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}