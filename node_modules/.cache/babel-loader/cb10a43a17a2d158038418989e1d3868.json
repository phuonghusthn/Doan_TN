{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usermanagement\\\\usermanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nexport default class UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.EmailInput = '';\n    this.RcodeInput = '';\n    this.dictDev = {};\n    this.isGroup = 0;\n    this.isPIN = 0;\n    this.isTag = 0;\n    this.Dep = '';\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Email',\n      field: 'email'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gStatus',\n      render: rowData => {\n        if (rowData.gStatus === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n    this.options1 = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onIdNSChange = value => {\n      this.IdNSInput = value;\n    };\n\n    this.onEmailChange = value => {\n      this.EmailInput = value;\n    };\n\n    this.onRcodeChange = value => {\n      this.RcodeInput = value;\n    };\n\n    this.onChangeIsPIN = value => {\n      if (value === 'Đã có PINCode') {\n        this.isPIN = 2;\n      } else {\n        this.isPIN = 1;\n      }\n    };\n\n    this.onChangeIsGroup = value => {\n      if (value === 'Chưa được phân tủ') {\n        this.isGroup = 1;\n      } else {\n        this.isGroup = 2;\n      }\n    };\n\n    this.onChangeIsTag = value => {\n      if (value === 'Chưa có thẻ') {\n        this.isTag = 1;\n      } else {\n        this.isTag = 2;\n      }\n    };\n\n    this.onChangeDep = value => {\n      this.Dep = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.getDepartmentOption = query => {\n      return new Promise((resolve, reject) => {\n        Department.getDepartment().then(value => {\n          resolve({\n            data: value.items.dName\n          });\n        });\n      });\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(0, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, this.isGroup, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componenWillMount() {}\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n    console.log(this.dictDev);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, \" Qu\\u1EA3n l\\xFD ng\\u01B0\\u1EDDi d\\xF9ng\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onIdNSChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      data: this.dictDev,\n      onChange: this.onChangeDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      onChange: this.onEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      onChange: this.onRcodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      data: ['Chưa có thẻ', 'Đã có thẻ'],\n      onChange: this.onChangeIsTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      onChange: this.onChangeIsGroup,\n      data: ['Chưa được phân tủ', 'Đã được phân tủ'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 257,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      data: ['Đã có PINCode', 'Chưa có PINCode'],\n      onChange: this.onChangeIsPIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      options: this.options1,\n      icons: TableIcons,\n      columns: this.columns,\n      data: this.getDataFromServer,\n      title: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usermanagement/usermanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","UserManagement","Component","constructor","props","NameInput","IdNSInput","EmailInput","RcodeInput","dictDev","isGroup","isPIN","isTag","Dep","columns","title","field","render","rowData","dId","color","pCode","gStatus","options1","search","pageSize","pageSizeOptions","onNameChange","value","onIdNSChange","onEmailChange","onRcodeChange","onChangeIsPIN","onChangeIsGroup","onChangeIsTag","onChangeDep","onSearchClick","tableRef","current","onQueryChange","getDepartmentOption","query","Promise","resolve","reject","getDepartment","then","data","items","dName","getDataFromServer","getUser","page","currentPage","totalCount","total","state","isUpdateView","createRef","modalRef","componenWillMount","componentDidMount","length","map","item","index","setState","console","log","padding","display","width","maxWidth"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user'\r\nimport MaterialTable from 'material-table'\r\nimport TableIcons from '../../common/materialicon'\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\n\r\nexport default class UserManagement extends React.Component {\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    EmailInput = '';\r\n    RcodeInput = '';\r\n    dictDev = {};\r\n    isGroup =0;\r\n    isPIN = 0;\r\n    isTag = 0;\r\n    Dep = '';\r\n\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode'\r\n        },\r\n        { \r\n            title: 'Email',\r\n             field: 'email' },\r\n        { \r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n          },\r\n        {\r\n            title: 'Tình trạng PINCode', \r\n            field:'pCode',\r\n            render: rowData => \r\n            {\r\n                if(rowData.pCode === 0) {\r\n                    return(\r\n                        <span syle={{color: 'red'}}>\r\n                            Chưa có\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span syle={{color: 'green'}}>\r\n                            Đã có\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode'\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ',\r\n            field: 'gStatus',\r\n            render: rowData =>\r\n            {\r\n                if (rowData.gStatus === 0) {\r\n                    return(\r\n                        <span style={{color: 'red'}}>\r\n                            Chưa được phân tủ\r\n                        </span> \r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Đã được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Action', \r\n            field: ''\r\n        },\r\n    ]\r\n\r\n    options1 = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n    }\r\n    componenWillMount() {\r\n    }\r\n\r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n\r\n    onIdNSChange = (value) => {\r\n        this.IdNSInput = value;\r\n    }\r\n\r\n    onEmailChange = (value) => {\r\n        this.EmailInput = value;\r\n    }\r\n\r\n    onRcodeChange = (value) => {\r\n        this.RcodeInput = value;\r\n    }\r\n\r\n    onChangeIsPIN = (value) => {\r\n        if (value === 'Đã có PINCode') {\r\n            this.isPIN = 2;\r\n        }\r\n        else {\r\n            this.isPIN = 1;\r\n        }\r\n    }\r\n\r\n    onChangeIsGroup = (value) => {\r\n        if (value === 'Chưa được phân tủ') {\r\n            this.isGroup= 1;\r\n        }\r\n        else {\r\n            this.isGroup = 2;\r\n        }\r\n    } \r\n\r\n    onChangeIsTag = (value) => {\r\n        if (value === 'Chưa có thẻ') {\r\n            this.isTag= 1;\r\n        }\r\n        else {\r\n            this.isTag = 2;\r\n        }\r\n    }\r\n\r\n    onChangeDep = (value) => {\r\n        this.Dep = value;\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n       console.log(this.dictDev);\r\n    }\r\n\r\n    getDepartmentOption =(query) => {\r\n        return new Promise((resolve, reject) => {\r\n            Department.getDepartment()                \r\n            .then(value => {\r\n                    resolve({\r\n                        data: value.items.dName,\r\n                    })               \r\n                 })\r\n        })\r\n    }\r\n\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(0, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, this.isGroup, query.page + 1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })               \r\n                 })\r\n        })\r\n    }\r\n\r\n   \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div style={{padding: '10px'}}>\r\n                    <h2> Quản lý người dùng</h2>\r\n                </div>\r\n                <div style={{display: 'flex' }}>\r\n                    <Input \r\n                        title={'Tên nhân viên'}\r\n                        onChange={this.onNameChange} \r\n                    />\r\n                    <Input \r\n                        title={'ID nhân sự'} \r\n                        onChange={this.onIdNSChange} \r\n                    />\r\n                    <Combobox\r\n                     title={'Bộ phận làm việc'} \r\n                     data = {this.dictDev}\r\n                     onChange = {this.onChangeDep}\r\n                     />\r\n                    <Input \r\n                        title={'Email'} \r\n                        onChange={this.onEmailChange} \r\n                    />\r\n                    <Input \r\n                        title={'Mã thẻ từ'} \r\n                        onChange = {this.onRcodeChange\r\n                    }\r\n                    />\r\n                    <Combobox \r\n                        title={'Tình trạng sử dụng thẻ'}\r\n                        data={[\r\n                            'Chưa có thẻ',\r\n                            'Đã có thẻ',\r\n                        ]}\r\n                        onChange = {this.onChangeIsTag}\r\n                    />                   \r\n                </div>\r\n                <div  style={{display: 'flex', width: '50%'}}>\r\n                <Combobox \r\n                 title={'Tình trạng phân tủ'}\r\n                 onChange={this.onChangeIsGroup}\r\n                 data = {[\r\n                    'Chưa được phân tủ',\r\n                    'Đã được phân tủ',\r\n                ] }\r\n                 />\r\n                <Combobox \r\n                title={'Tình trạng PINCode'}\r\n                data = { [\r\n                        'Đã có PINCode',\r\n                        'Chưa có PINCode',\r\n                    ] }\r\n                onChange = {this.onChangeIsPIN}\r\n                />\r\n                <Button title={'Tìm kiếm'}\r\n                        onClick={this.onSearchClick} />\r\n                </div>\r\n            \r\n                <div style={{ maxWidth: '100%' }}>\r\n                    <MaterialTable\r\n                        tableRef={this.tableRef}\r\n                        options={this.options1}\r\n                        icons={TableIcons}\r\n                        columns={this.columns}\r\n                        data={this.getDataFromServer}\r\n                        title='Danh sách người dùng hiện tại'\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}