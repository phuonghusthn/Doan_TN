{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\home.js\";\nimport React, { Fragment } from 'react';\nimport DonutChart from '../common/donutchart';\nimport BarChart from '../common/barchart';\nimport { green, red, blue } from '@material-ui/core/colors';\nimport LockerReport from '../../core/report';\nexport default class Home extends React.Component {\n  constructor(props) {\n    super(props);\n    this.data = [];\n    this.state = {};\n    this.donutChartRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.donutChartRef.current && this.donutChartRef.current.onCreateChart();\n    LockerReport.getStatusReport(0, 0, '', '', 1, 1).then(value => {\n      if (value) {\n        let lengthFree = value.items.length;\n        this.data.push(lengthFree);\n      }\n    });\n    LockerReport.getStatusReport(0, 0, '', '', 2, 1).then(value => {\n      if (value) {\n        let lengthUsing = value.items.length;\n        this.data.push(lengthUsing);\n      }\n    });\n    LockerReport.getStatusReport(0, 0, '', '', 3, 1).then(value => {\n      if (value) {\n        if (value.items) {\n          let lengthDisable = value.items.length;\n          this.data.push(lengthDisable);\n        } else {\n          this.data.push(0);\n        }\n      }\n    });\n    console.log(this.data);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 18\n      }\n    }, /*#__PURE__*/React.createElement(DonutChart, {\n      ref: this.donutChartRef,\n      title: 'hello',\n      data: this.data,\n      backgroundColor: ([green[500], red[500]], blue[500]),\n      labels: ['trống', 'đang được sử dụng', 'vô hiệu hóa'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/home.js"],"names":["React","Fragment","DonutChart","BarChart","green","red","blue","LockerReport","Home","Component","constructor","props","data","state","donutChartRef","createRef","componentDidMount","current","onCreateChart","getStatusReport","then","value","lengthFree","items","length","push","lengthUsing","lengthDisable","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,QAAP,MAAqB,oBAArB;AACA,SAAQC,KAAR,EAAeC,GAAf,EAAoBC,IAApB,QAA+B,0BAA/B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AAGA,eAAe,MAAMC,IAAN,SAAmBR,KAAK,CAACS,SAAzB,CAAmC;AAE9CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SASnBC,IATmB,GASZ,EATY;AAEf,SAAKC,KAAL,GAAa,EAAb;AAGA,SAAKC,aAAL,GAAqBd,KAAK,CAACe,SAAN,EAArB;AAEH;;AAIDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKF,aAAL,CAAmBG,OAAnB,IAA8B,KAAKH,aAAL,CAAmBG,OAAnB,CAA2BC,aAA3B,EAA9B;AACAX,IAAAA,YAAY,CAACY,eAAb,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,CAA3C,EAA8C,CAA9C,EACGC,IADH,CACQC,KAAK,IAAI;AACV,UAAGA,KAAH,EAAS;AACN,YAAIC,UAAU,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAA7B;AACA,aAAKZ,IAAL,CAAUa,IAAV,CAAeH,UAAf;AACF;AACL,KANH;AAOEf,IAAAA,YAAY,CAACY,eAAb,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,CAA3C,EAA8C,CAA9C,EACCC,IADD,CACMC,KAAK,IAAI;AACV,UAAGA,KAAH,EAAS;AACN,YAAIK,WAAW,GAAGL,KAAK,CAACE,KAAN,CAAYC,MAA9B;AACA,aAAKZ,IAAL,CAAUa,IAAV,CAAeC,WAAf;AACF;AACL,KAND;AAOAnB,IAAAA,YAAY,CAACY,eAAb,CAA6B,CAA7B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,EAAvC,EAA2C,CAA3C,EAA8C,CAA9C,EACCC,IADD,CACMC,KAAK,IAAI;AACV,UAAGA,KAAH,EAAS;AACN,YAAGA,KAAK,CAACE,KAAT,EAAe;AACX,cAAII,aAAa,GAAGN,KAAK,CAACE,KAAN,CAAYC,MAAhC;AACA,eAAKZ,IAAL,CAAUa,IAAV,CAAeE,aAAf;AACH,SAHD,MAIK;AACD,eAAKf,IAAL,CAAUa,IAAV,CAAe,CAAf;AACH;AAEH;AACL,KAZD;AAaAG,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,IAAjB;AACH;;AAEDkB,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACG,oBAAC,UAAD;AAAY,MAAA,GAAG,EAAE,KAAKhB,aAAtB;AAAqC,MAAA,KAAK,EAAE,OAA5C;AAAqD,MAAA,IAAI,EAAE,KAAKF,IAAhE;AAAuE,MAAA,eAAe,GAAE,CAACR,KAAK,CAAC,GAAD,CAAN,EAAaC,GAAG,CAAC,GAAD,CAAhB,GAAwBC,IAAI,CAAC,GAAD,CAA9B,CAAtF;AAA2H,MAAA,MAAM,EAAE,CAAC,OAAD,EAAU,mBAAV,EAA+B,aAA/B,CAAnI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CADJ;AAQH;;AAtD6C","sourcesContent":["import React, { Fragment } from 'react'\r\nimport DonutChart from '../common/donutchart'\r\nimport BarChart from '../common/barchart'\r\nimport {green, red, blue} from '@material-ui/core/colors'\r\nimport LockerReport from '../../core/report'\r\n\r\n\r\nexport default class Home extends React.Component {\r\n \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n        this.donutChartRef = React.createRef()\r\n      \r\n    }\r\n\r\n    data = []\r\n\r\n    componentDidMount() {\r\n      this.donutChartRef.current && this.donutChartRef.current.onCreateChart();\r\n      LockerReport.getStatusReport(0, 0, '', '', 1, 1)\r\n        .then(value => {\r\n             if(value){\r\n                let lengthFree = value.items.length;\r\n                this.data.push(lengthFree)\r\n             } \r\n        });\r\n        LockerReport.getStatusReport(0, 0, '', '', 2, 1)\r\n        .then(value => {\r\n             if(value){\r\n                let lengthUsing = value.items.length;\r\n                this.data.push(lengthUsing)\r\n             } \r\n        });\r\n        LockerReport.getStatusReport(0, 0, '', '', 3, 1)\r\n        .then(value => {\r\n             if(value){\r\n                if(value.items){\r\n                    let lengthDisable = value.items.length;\r\n                    this.data.push(lengthDisable);\r\n                }\r\n                else {\r\n                    this.data.push(0);\r\n                }\r\n               \r\n             } \r\n        });\r\n        console.log(this.data);\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment> \r\n                 <div>\r\n                    <DonutChart ref={this.donutChartRef} title={'hello'} data={this.data}  backgroundColor={[green[500], red[500]], blue[500]} labels={['trống', 'đang được sử dụng', 'vô hiệu hóa']}/>\r\n                </div>\r\n            </Fragment>\r\n           \r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}