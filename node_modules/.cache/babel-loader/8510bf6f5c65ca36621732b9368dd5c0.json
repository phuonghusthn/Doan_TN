{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Controllers {\n  constructor() {\n    this.createController = async (bId = 0, des = '', imei = '', lId = 0, mac = '', zone = '') => {\n      try {\n        let url = ApiUri.controller.createController.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'bId': bId,\n          'des': des,\n          'imei': imei,\n          'lId': lId,\n          'mac': mac,\n          'zone': zone\n        };\n        return await fetch(url, {\n          method: ApiUri.controller.createController.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getController = async (bId = 0, lId = 0, imei = '', mac = '', zone = '', page = 0) => {\n      try {\n        let url = ApiUri.controller.getController.uri;\n        url += '?lId=' + lId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&bId=' + bId;\n        url += '&imei=' + imei;\n        url += '&mac=' + mac;\n        url += '&zone=' + zone;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.controller.getController.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.editController = async (cId = 0, des = '', bId = 0, lId = 0, imei = '', mac = '', zone = '') => {\n      try {\n        let url = ApiUri.controller.editController.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'bId': bId,\n          'cId': cId,\n          'des': des,\n          'imei': imei,\n          'lId': lId,\n          'mac': mac,\n          'zone': zone\n        };\n        return await fetch(url, {\n          method: ApiUri.controller.editController.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.removeController = async (cId = 0) => {\n      try {\n        let url = ApiUri.controller.removeController.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'cId': cId\n        };\n        return await fetch(url, {\n          method: ApiUri.controller.removeController.method,\n          // mode: 'cors',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': '*',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Controller = new Controllers();\nexport default Controller;","map":{"version":3,"sources":["E:/DATN_2020/src/core/controller.js"],"names":["ApiUri","server","Controllers","createController","bId","des","imei","lId","mac","zone","url","controller","uri","form","localStorage","getItem","fetch","method","mode","cache","headers","referrerPolicy","body","JSON","stringify","then","response","json","catch","console","error","getController","page","editController","cId","removeController","Controller"],"mappings":"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","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Controllers {\r\n\r\n    createController = async (bId= 0, des = '', imei = '', lId = 0, mac = '', zone = '') => {\r\n        try {\r\n            let url = ApiUri.controller.createController.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'bId': bId,\r\n                'des': des,\r\n                'imei': imei,\r\n                'lId': lId,\r\n                'mac': mac,\r\n                'zone': zone,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.controller.createController.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    getController = async (bId = 0, lId = 0, imei = '', mac = '', zone = '', page = 0) => {\r\n        try {\r\n            let url = ApiUri.controller.getController.uri;\r\n            url += '?lId=' + lId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&bId=' + bId;\r\n            url += '&imei=' + imei;\r\n            url += '&mac=' + mac;\r\n            url += '&zone=' + zone;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.controller.getController.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n    }\r\n\r\n    editController = async (cId=0, des = '', bId = 0, lId = 0, imei = '', mac = '', zone = '') => {\r\n        try {\r\n            let url = ApiUri.controller.editController.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'bId': bId,\r\n                'cId': cId,\r\n                'des': des,\r\n                'imei': imei,\r\n                'lId': lId,\r\n                'mac': mac,\r\n                'zone': zone\r\n\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.controller.editController.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    removeController = async (cId = 0) => {\r\n        try {\r\n            let url = ApiUri.controller.removeController.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'cId': cId,\r\n            }\r\n            return await fetch(url, {\r\n                method: ApiUri.controller.removeController.method,\r\n                // mode: 'cors',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': '*',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error)\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n}\r\n\r\nvar Controller = new Controllers();\r\nexport default Controller;"]},"metadata":{},"sourceType":"module"}