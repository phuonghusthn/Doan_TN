{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usermanagement\\\\usermanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nexport default class UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.dictDev = {};\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Email',\n      field: 'email'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gStatus',\n      render: rowData => {\n        if (rowData.gStatus === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n    this.options = {\n      search: false,\n      showTitle: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(0, this.NameInput, this.IdNSInput, '', '', 0, 0, 0, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onIdNSChange = value => {\n      this.IdNSInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componenWillMount() {}\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onIdNSChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      options: this.options,\n      icons: TableIcons,\n      columns: this.columns,\n      data: this.getDataFromServer,\n      title: \"Demo Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usermanagement/usermanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","UserManagement","Component","constructor","props","NameInput","IdNSInput","dictDev","columns","title","field","render","rowData","dId","color","pCode","gStatus","options","search","showTitle","pageSize","pageSizeOptions","getDataFromServer","query","Promise","resolve","reject","getUser","page","then","value","data","items","currentPage","totalCount","total","onNameChange","onIdNSChange","onSearchClick","tableRef","current","onQueryChange","state","isUpdateView","createRef","modalRef","componenWillMount","componentDidMount","getDepartment","length","map","item","index","dName","setState","display","width","maxWidth"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user'\r\nimport MaterialTable from 'material-table'\r\nimport TableIcons from '../../common/materialicon'\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\n\r\nexport default class UserManagement extends React.Component {\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    dictDev = {};\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode'\r\n        },\r\n        { \r\n            title: 'Email',\r\n             field: 'email' },\r\n        { \r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n          },\r\n        {\r\n            title: 'Tình trạng PINCode', \r\n            field:'pCode',\r\n            render: rowData => \r\n            {\r\n                if(rowData.pCode === 0) {\r\n                    return(\r\n                        <span syle={{color: 'red'}}>\r\n                            Chưa có\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span syle={{color: 'green'}}>\r\n                            Đã có\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode'\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ',\r\n            field: 'gStatus',\r\n            render: rowData =>\r\n            {\r\n                if (rowData.gStatus === 0) {\r\n                    return(\r\n                        <span style={{color: 'red'}}>\r\n                            Chưa được phân tủ\r\n                        </span> \r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Đã được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Action', \r\n            field: ''\r\n        },\r\n    ]\r\n\r\n    options = {\r\n        search: false,\r\n        showTitle: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n    }\r\n    componenWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(0, this.NameInput, this.IdNSInput, '', '', 0, 0, 0, query.page + 1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })               \r\n                 })\r\n        })\r\n    }\r\n\r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n    onIdNSChange = (value) => {\r\n        this.IdNSInput = value;\r\n    }\r\n\r\n   \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div style={{display: 'flex' }}>\r\n                    <Input title={'Tên nhân viên'}\r\n                        onChange={this.onNameChange} \r\n                        />\r\n                    <Input title={'ID nhân sự'} \r\n                    onChange={this.onIdNSChange} \r\n                    />\r\n                    <Combobox title={'Bộ phận làm việc'} />\r\n                    <Input title={'Email'} />\r\n                    <Input title={'Mã thẻ từ'} />\r\n                    <Combobox title={'Tình trạng sử dụng thẻ'} />                   \r\n                </div>\r\n                <div  style={{display: 'flex', width: '50%'}}>\r\n                <Combobox title={'Tình trạng phân tủ'}/>\r\n                <Combobox title={'Tình trạng PINCode'} />\r\n                <Button title={'Tìm kiếm'}\r\n                        onClick={this.onSearchClick} />\r\n                </div>\r\n            \r\n                <div style={{ maxWidth: '100%' }}>\r\n                    <MaterialTable\r\n                        tableRef={this.tableRef}\r\n                        options={this.options}\r\n                        icons={TableIcons}\r\n                        columns={this.columns}\r\n                        data={this.getDataFromServer}\r\n                        title=\"Demo Title\"\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}