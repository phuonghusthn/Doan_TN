{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usingmanagement\\\\mapuserlockermanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport UserLoker from '../../../core/user';\nimport ManageLoker from '../../../core/locker';\nimport TableIcons from '../../common/materialicon';\nimport Department from '../../../core/department';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nexport default class MapUserLockerManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dictDev = {};\n    this.Dep = [];\n    this.dictDid = {};\n    this.DidInput = 0;\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.BIdInput = 0;\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.LvIdInput = 0;\n    this.ENameInput = '';\n    this.ECodeInput = '';\n    this.LabelInput = '';\n    this.LabelInputTable2 = '';\n    this.IsGroupInput1 = 0;\n    this.IsGroupInput2 = 0;\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n    this.columnsTable1 = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sụ',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 21\n          }\n        }, this.dictDev[rowData.dId]);\n      }\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gStatus',\n      render: rowData => {\n        if (rowData.gStatus === 1) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n    this.columnsTable2 = [{\n      title: 'Tòa',\n      field: 'bName'\n    }, {\n      title: 'Tầng',\n      field: 'lLv',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 21\n          }\n        }, \" T\\u1EA7ng \", rowData.lLv, \" \");\n      }\n    }, {\n      title: 'Tủ',\n      field: 'lLb'\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gName',\n      render: rowData => {\n        if (rowData.gName === 'Đã được phân nhóm') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 21\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }];\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        UserLoker.getUser(this.DidInput, this.ENameInput, this.ECodeInput, '', '', 0, 0, this.IsGroupInput1, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.getLokerDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        ManageLoker.getLocker(this.BIdInput, this.LvIdInput, '', this.LabelInputTable2, 0, this.IsGroupInput2, query.page + 1).then(value => {\n          if (value) {\n            resolve({\n              data: value.items,\n              page: value.currentPage - 1,\n              totalCount: value.total\n            });\n          } else {\n            resolve({\n              data: value.items,\n              page: 0,\n              totalCount: 0\n            });\n          }\n        });\n      });\n    };\n\n    this.onENameChange = value => {\n      this.ENameInput = value;\n    };\n\n    this.onECodeChange = value => {\n      this.ECodeInput = value;\n    };\n\n    this.onLabelChange = value => {\n      this.LabelInput = value;\n    };\n\n    this.onLabelChange2 = value => {\n      this.LabelInputTable2 = value;\n    };\n\n    this.onChangeGroup1 = value => {\n      if (value === 'Đã được phân tủ') {\n        this.IsGroupInput1 = 2;\n      } else {\n        this.IsGroupInput1 = 1;\n      }\n    };\n\n    this.onChangeDep = value => {\n      this.DidInput = this.dictDid[value];\n    };\n\n    this.onChangeBLevel = value => {\n      this.LvIdInput = this.DictLvId[value];\n    };\n\n    this.onChangeBuild = value => {\n      this.BIdInput = this.DictBId[value];\n    };\n\n    this.onChangeGroup2 = value => {\n      if (value === 'Đã được phân tủ') {\n        this.IsGroupInput2 = 2;\n      } else {\n        this.IsGroupInput2 = 1;\n      }\n    };\n\n    this.onSearchClick1 = () => {\n      this.tableRef1.current && this.tableRef1.current.onQueryChange();\n    };\n\n    this.onSearchClick2 = () => {\n      this.tableRef2.current && this.tableRef2.current.onQueryChange();\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef1 = React.createRef();\n    this.tableRef2 = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n            {\n              this.Dep[index] = item.dName;\n            }\n            {\n              this.dictDid[item.dName] = item.dId;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n          });\n        }\n      }\n    });\n    Controller.getController().then(value => {\n      console.log(value);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 21\n      }\n    }, \"\\u0110\\u0103ng k\\xFD s\\u1EED d\\u1EE5ng t\\u1EE7 cho nh\\xE2n vi\\xEAn \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '0px 5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onENameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onECodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      data: this.Dep,\n      onChange: this.onChangeDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      data: ['Đã được phân tủ', 'Chưa được phân tủ'],\n      onChange: this.onChangeGroup1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef1,\n      options: this.optionsTable,\n      columns: this.columnsTable1,\n      data: this.getDataFromServer,\n      icons: TableIcons,\n      title: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      data: ['Đã được phân tủ', 'Chưa được phân tủ'],\n      onChange: this.onChangeGroup2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef2,\n      options: this.optionsTable,\n      columns: this.columnsTable2,\n      data: this.getLokerDataFromServer,\n      icons: TableIcons,\n      title: \"Danh s\\xE1ch t\\u1EE7 hi\\u1EC7n t\\u1EA1i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usingmanagement/mapuserlockermanagement.js"],"names":["React","Fragment","MaterialTable","UserLoker","ManageLoker","TableIcons","Department","Input","Button","Combobox","Building","Level","Controller","MapUserLockerManagement","Component","constructor","props","dictDev","Dep","dictDid","DidInput","DictBName","Build","DictBId","BIdInput","DictLvName","DictLvId","LvIdInput","ENameInput","ECodeInput","LabelInput","LabelInputTable2","IsGroupInput1","IsGroupInput2","optionsTable","search","pageSize","pageSizeOptions","columnsTable1","title","field","render","rowData","dId","gStatus","color","columnsTable2","lLv","gName","onSearchClick","tableRef","current","onQueryChange","getDataFromServer","query","Promise","resolve","reject","getUser","page","then","value","data","items","currentPage","totalCount","total","getLokerDataFromServer","getLocker","onENameChange","onECodeChange","onLabelChange","onLabelChange2","onChangeGroup1","onChangeDep","onChangeBLevel","onChangeBuild","onChangeGroup2","onSearchClick1","tableRef1","onSearchClick2","tableRef2","state","isUpdateView","createRef","modalRef","componentDidMount","getDepartment","length","map","item","index","dName","setState","getBuilding","bId","bName","getLevel","bLv","lId","getController","console","log","padding","display","margin","flex"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport UserLoker from '../../../core/user';\r\nimport ManageLoker from '../../../core/locker';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Department from '../../../core/department';\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Combobox from '../../common/combobox'\r\nimport Building from '../../../core/building'\r\nimport Level from '../../../core/level'\r\nimport Controller from '../../../core/controller'\r\n\r\n\r\nexport default class MapUserLockerManagement extends React.Component {\r\n    dictDev ={};\r\n    Dep = [];\r\n    dictDid = {};\r\n    DidInput = 0;\r\n    \r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    BIdInput = 0;\r\n\r\n    DictLvName = {};\r\n    DictLvId ={};\r\n    Level =[];\r\n    LvIdInput = 0;\r\n\r\n    ENameInput = '';\r\n    ECodeInput = '';\r\n    LabelInput = '';\r\n    LabelInputTable2 = '';\r\n    IsGroupInput1 = 0;\r\n    IsGroupInput2 = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef1 = React.createRef();\r\n        this.tableRef2 = React.createRef();\r\n\r\n        this.modalRef = React.createRef();\r\n    \r\n    }\r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n\r\n    }\r\n\r\n    columnsTable1 = [\r\n        {\r\n             title: 'Họ và tên', \r\n             field: 'name'\r\n        },\r\n        {\r\n             title: 'ID nhân sụ', \r\n             field: 'eCode'\r\n         },\r\n        { \r\n            title: 'Bộ phận làm việc',\r\n            field: 'dId', \r\n            render: rowData => {\r\n                return(\r\n                    <span>\r\n                        {this.dictDev[rowData.dId]}\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ', \r\n            field:'gStatus',\r\n            render: rowData => {\r\n                if(rowData.gStatus === 1) {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Đã được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'red'}}>\r\n                            Chưa được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Action', \r\n            field: ''\r\n        }\r\n    ]\r\n\r\n    columnsTable2 = [\r\n        {\r\n            title: 'Tòa',\r\n            field: 'bName'\r\n        },\r\n        {\r\n            title: 'Tầng',\r\n            field: 'lLv', render: rowData =>\r\n            {\r\n                return(\r\n                    <span> Tầng {rowData.lLv} </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Tủ',\r\n            field: 'lLb'\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ',\r\n            field: 'gName',\r\n            render: rowData => {\r\n                if(rowData.gName === 'Đã được phân nhóm') {\r\n                    return(\r\n                    <span style={{color: 'green'}}> \r\n                        Đã được phân tủ\r\n                    </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'red'}}> \r\n                            Chưa được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            UserLoker.getUser(this.DidInput, this.ENameInput, this.ECodeInput, '', '', 0, 0, this.IsGroupInput1, query.page +1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    }) \r\n                })\r\n        })\r\n    }\r\n\r\n\r\n    getLokerDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            ManageLoker.getLocker(this.BIdInput, this.LvIdInput,'', this.LabelInputTable2, 0, this.IsGroupInput2, query.page +1)\r\n                .then(value => {\r\n                    if(value){\r\n                        resolve({\r\n                            data: value.items,\r\n                            page: value.currentPage - 1,\r\n                            totalCount: value.total,\r\n                        }) \r\n                    }\r\n                    else {\r\n                        resolve({\r\n                            data: value.items,\r\n                            page: 0,\r\n                            totalCount: 0,\r\n                        }) \r\n                    }\r\n                    \r\n                })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                            {this.Dep[index] = item.dName}\r\n                            {this.dictDid[item.dName] = item.dId}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n        })\r\n\r\n        Building.getBuilding()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item,index) => {\r\n                            this.DictBName[item.bId] = item.bName;\r\n                            this.DictBId[item.bName] = item.bId;\r\n                            this.Build[index] = item.bName; \r\n                        })\r\n                    }\r\n                } \r\n        })\r\n        \r\n        Level.getLevel() \r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item,index) => {\r\n                        let bLv = ' Tòa ' + item.bName + ' - Tầng '  + item.lLv;\r\n                        this.DictLvName[item.lId] = bLv;\r\n                        this.DictLvId[bLv] = item.lId;\r\n                        this.Level[index] = bLv ;\r\n                    })\r\n                    \r\n                }\r\n            }\r\n        })\r\n\r\n        Controller.getController()\r\n            .then((value)=> {\r\n                console.log(value)\r\n            })\r\n        \r\n    }\r\n\r\n    onENameChange = (value) => {\r\n        this.ENameInput = value;\r\n    }\r\n\r\n    onECodeChange = (value) => {\r\n        this.ECodeInput = value;\r\n    } \r\n\r\n    onLabelChange = (value) => {\r\n        this.LabelInput = value;\r\n    }\r\n\r\n    onLabelChange2 = (value) => {\r\n        this.LabelInputTable2 = value;\r\n    }\r\n\r\n    onChangeGroup1 = (value) => {\r\n        if( value === 'Đã được phân tủ') {\r\n            this.IsGroupInput1 = 2;\r\n        }\r\n        else {\r\n            this.IsGroupInput1 = 1;\r\n        }\r\n    }\r\n\r\n    onChangeDep = (value) => {\r\n        this.DidInput = this.dictDid[value];\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.LvIdInput = this.DictLvId[value];\r\n    }\r\n\r\n    onChangeBuild = (value) => {\r\n        this.BIdInput = this.DictBId[value];\r\n    }\r\n\r\n    onChangeGroup2 = (value) => {\r\n        if( value === 'Đã được phân tủ') {\r\n            this.IsGroupInput2 = 2;\r\n        }\r\n        else {\r\n            this.IsGroupInput2 = 1;\r\n        }\r\n    }\r\n\r\n    onSearchClick1 = () => {\r\n        this.tableRef1.current && this.tableRef1.current.onQueryChange();\r\n    }\r\n\r\n    onSearchClick2 = () => {\r\n        this.tableRef2.current && this.tableRef2.current.onQueryChange();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div style={{padding: '10px'}}>\r\n                    <h2>Đăng ký sử dụng tủ cho nhân viên </h2>\r\n                </div>\r\n                \r\n                <div style={{display:'flex', margin: '0px 5px'}}>\r\n                    <div style={{flex: '1'}}>\r\n                        <div style={{display: 'flex', margin: '10px' }}>\r\n                            <Input \r\n                                title={'Tên nhân viên'} \r\n                                onChange = {this.onENameChange}\r\n                            />\r\n\r\n                            <Input \r\n                                title={'ID nhân sự'} \r\n                                onChange = {this.onECodeChange}\r\n                            />\r\n\r\n                            <Combobox\r\n                                title={'Bộ phận làm việc'} \r\n                                data = {this.Dep}\r\n                                onChange = {this.onChangeDep}\r\n                            />\r\n\r\n                            <Combobox\r\n                            title={'Tình trạng phân tủ'} \r\n                            data = {[\r\n                                'Đã được phân tủ',\r\n                                'Chưa được phân tủ'\r\n                            ]}\r\n                            onChange = {this.onChangeGroup1}\r\n                            />\r\n\r\n                            <Button title={'Tìm kiếm'}\r\n                                onClick={this.onSearchClick1} />\r\n                        </div>\r\n                        <MaterialTable\r\n                        tableRef={this.tableRef1}\r\n                        options={this.optionsTable}\r\n                        columns={this.columnsTable1}\r\n                        data={this.getDataFromServer}\r\n                        icons= {TableIcons}\r\n                        title=\"Danh sách người dùng hiện tại\"/>\r\n                    </div>\r\n                    <div  style={{flex: '1'}}>\r\n                        <div style={{display: 'flex', margin: '10px' }}>\r\n                            <Combobox\r\n                                title={'Tòa nhà'} \r\n                                data = {this.Build}\r\n                                onChange = {this.onChangeBuild}\r\n                            />\r\n\r\n                            <Combobox\r\n                            title={'Tầng'}\r\n                            data = {this.Level}\r\n                            onChange = {this.onChangeBLevel}\r\n                            \r\n                            />\r\n\r\n                            <Combobox\r\n                            title={'Thiết bị quản lý'} \r\n                            />\r\n\r\n                            <Input \r\n                                title={'Nhãn tủ'} \r\n                                onChange = {this.onLabelChange2\r\n                            }\r\n                            />\r\n                            <Combobox\r\n                                title={'Tình trạng phân tủ'} \r\n                                data = {[\r\n                                    'Đã được phân tủ',\r\n                                    'Chưa được phân tủ'\r\n                                ]}\r\n                                onChange = {this.onChangeGroup2}\r\n                            />\r\n\r\n                            <Button title={'Tìm kiếm'}\r\n                                onClick={this.onSearchClick2} />\r\n                        </div>\r\n                    \r\n                        <MaterialTable\r\n                        tableRef={this.tableRef2}\r\n                        options={this.optionsTable}\r\n                        columns = {this.columnsTable2}\r\n                        data={this.getLokerDataFromServer}\r\n                        icons= {TableIcons}\r\n                        title=\"Danh sách tủ hiện tại\"/>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}