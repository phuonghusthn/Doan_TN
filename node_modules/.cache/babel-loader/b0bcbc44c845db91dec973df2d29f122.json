{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Levels {\n  constructor() {\n    this.getLevel = async (bId = 0, page = 0) => {\n      try {\n        let url = ApiUri.level.getLevel.uri;\n        url += '?bId=' + bId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.level.getLevel.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Level = new Levels();\nexport default Level;","map":{"version":3,"sources":["E:/DATN_2020/src/core/level.js"],"names":["ApiUri","server","Levels","getLevel","bId","page","url","level","uri","localStorage","getItem","fetch","method","headers","then","response","json","catch","console","error","Level"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;;AAEA,MAAMC,MAAN,CAAa;AAAA;AAAA,SACTC,QADS,GACE,OAAOC,GAAG,GAAG,CAAb,EAAgBC,IAAI,GAAG,CAAvB,KAA6B;AACpC,UAAI;AACA,YAAIC,GAAG,GAAGN,MAAM,CAACO,KAAP,CAAaJ,QAAb,CAAsBK,GAAhC;AACAF,QAAAA,GAAG,IAAI,UAAUF,GAAjB;AACAE,QAAAA,GAAG,IAAI,YAAYG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACAJ,QAAAA,GAAG,IAAI,WAAWD,IAAlB;AAEA,eAAO,MAAMM,KAAK,CAACL,GAAD,EAAM;AACpBM,UAAAA,MAAM,EAAEZ,MAAM,CAACO,KAAP,CAAaJ,QAAb,CAAsBS,MADV;AAEpBC,UAAAA,OAAO,EAAE;AACL,6BAAiB,YAAYJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AADxB;AAFW,SAAN,CAAL,CAMRI,IANQ,CAMHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANT,EAORC,KAPQ,CAOFC,OAAO,CAACC,KAPN,CAAb;AAQH,OAdD,CAeA,MAAK,CAAG;AAEX,KAnBQ;AAAA;;AAAA;;AAwBb,IAAIC,KAAK,GAAG,IAAIlB,MAAJ,EAAZ;AACA,eAAekB,KAAf","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Levels {\r\n    getLevel = async (bId = 0, page = 0) => {\r\n        try {\r\n            let url = ApiUri.level.getLevel.uri;\r\n            url += '?bId=' + bId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.level.getLevel.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n\r\n}\r\n\r\nvar Level = new Levels();\r\nexport default Level;"]},"metadata":{},"sourceType":"module"}