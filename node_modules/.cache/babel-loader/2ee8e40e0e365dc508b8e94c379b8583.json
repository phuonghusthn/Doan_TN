{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\tagmanagement\\\\tagmanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nexport default class TagManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isPIN = 0;\n    this.isTag = 0;\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.EmailInput = '';\n    this.RcodeInput = '';\n    this.dictDev = {};\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Email cá nhân',\n      field: 'email'\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 26\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 26\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n    this.options = {\n      pageSize: 20,\n      pageSizeOptions: [20],\n      search: false\n    };\n\n    this.onChangeIsPIN = value => {\n      if (value === 'Đã có PINCode') {\n        this.isPIN = 2;\n      } else {\n        this.isPIN = 1;\n      }\n    };\n\n    this.onChangeIsTag = value => {\n      if (value === 'Chưa có thẻ') {\n        this.isTag = 1;\n      } else {\n        this.isTag = 2;\n      }\n    };\n\n    this.getDataFromUser = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(0, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, 0, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onIdNSChange = value => {\n      this.IdNSInput = value;\n    };\n\n    this.onEmailChange = value => {\n      this.EmailInput = value;\n    };\n\n    this.onRcodeChange = value => {\n      this.RcodeInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.state = {};\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 17\n      }\n    }, \"Qu\\u1EA3n l\\xFD s\\u1EED d\\u1EE5ng PINCode v\\xE0 th\\u1EBB t\\u1EEB\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onIdNSChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      onChange: this.onEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      onChange: this.onRcodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      data: ['Chưa có thẻ', 'Đã có thẻ'],\n      onChange: this.onChangeIsTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '25%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      data: ['Đã có PINCode', 'Chưa có PINCode'],\n      onChange: this.onChangeIsPIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      icons: TableIcons,\n      columns: this.columns,\n      options: this.options,\n      data: this.getDataFromUser,\n      title: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/tagmanagement/tagmanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","TagManagement","Component","constructor","props","isPIN","isTag","NameInput","IdNSInput","EmailInput","RcodeInput","dictDev","columns","title","field","render","rowData","dId","color","pCode","options","pageSize","pageSizeOptions","search","onChangeIsPIN","value","onChangeIsTag","getDataFromUser","query","Promise","resolve","reject","getUser","page","then","data","items","currentPage","totalCount","total","onNameChange","onIdNSChange","onEmailChange","onRcodeChange","onSearchClick","tableRef","current","onQueryChange","state","createRef","modalRef","componentDidMount","getDepartment","length","map","item","index","dName","setState","isUpdateView","padding","display","width"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\n\r\n\r\nexport default class TagManagement extends React.Component {\r\n    isPIN = 0;\r\n    isTag = 0;\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    EmailInput = '';\r\n    RcodeInput = '';\r\n    dictDev = {};\r\n\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode' \r\n        },\r\n        {\r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Email cá nhân', \r\n            field: 'email'\r\n        },\r\n        { \r\n            title: 'Tình trạng PINCode',\r\n             field: 'pCode',\r\n             render: rowData => \r\n             {\r\n                 if(rowData.pCode === 0) {\r\n                     return(\r\n                         <span syle={{color: 'red'}}>\r\n                             Chưa có\r\n                         </span>\r\n                     )\r\n                 }\r\n                 else {\r\n                     return(\r\n                         <span syle={{color: 'green'}}>\r\n                             Đã có\r\n                         </span>\r\n                     )\r\n                 }\r\n             } \r\n        },\r\n        { \r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode' \r\n        },\r\n        { title: 'Action', field: '' },\r\n        \r\n    ] \r\n\r\n    options = {\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        search: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n\r\n    }\r\n\r\n    onChangeIsPIN = (value) => {\r\n        if (value === 'Đã có PINCode') {\r\n            this.isPIN = 2;\r\n        }\r\n        else {\r\n            this.isPIN = 1;\r\n        }\r\n    }\r\n\r\n    onChangeIsTag = (value) => {\r\n        if (value === 'Chưa có thẻ') {\r\n            this.isTag= 1;\r\n        }\r\n        else {\r\n            this.isTag = 2;\r\n        }\r\n    } \r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n    }\r\n\r\n    getDataFromUser = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(0, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, 0, query.page + 1)\r\n            .then(value => {\r\n                resolve({\r\n                    data: value.items,\r\n                    page: value.currentPage - 1,\r\n                    totalCount: value.total,\r\n                })\r\n            })\r\n        })\r\n    }\r\n \r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n\r\n    onIdNSChange = (value) => {\r\n        this.IdNSInput = value;\r\n    }\r\n\r\n    onEmailChange = (value) => {\r\n        this.EmailInput = value;\r\n    }\r\n\r\n    onRcodeChange = (value) => {\r\n        this.RcodeInput = value;\r\n    }\r\n   \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <div style={{padding: '10px'}}>\r\n                <h2>\r\n                    Quản lý sử dụng PINCode và thẻ từ\r\n                </h2>\r\n            </div>\r\n\r\n            <div style={{display: 'flex' }}>\r\n                    <Input \r\n                        title={'Tên nhân viên'}\r\n                        onChange={this.onNameChange} \r\n                    />\r\n                    <Input \r\n                        title={'ID nhân sự'} \r\n                        onChange={this.onIdNSChange} \r\n                    />\r\n                    <Combobox\r\n                     title={'Bộ phận làm việc'} \r\n                     />\r\n                    <Input \r\n                        title={'Email'} \r\n                        onChange={this.onEmailChange} \r\n                    />\r\n                    <Input \r\n                        title={'Mã thẻ từ'} \r\n                        onChange = {this.onRcodeChange\r\n                    }\r\n                    />\r\n                    <Combobox \r\n                        title={'Tình trạng sử dụng thẻ'}\r\n                        data= {[\r\n                            'Chưa có thẻ',\r\n                            'Đã có thẻ',\r\n                        ]}\r\n                        onChange = {this.onChangeIsTag}\r\n                    /> \r\n                </div>\r\n                <div  style={{display: 'flex', width: '25%'}}>\r\n               \r\n                <Combobox \r\n                title={'Tình trạng PINCode'}\r\n                data = { [\r\n                        'Đã có PINCode',\r\n                        'Chưa có PINCode',\r\n                    ] }\r\n                    onChange = {this.onChangeIsPIN}\r\n                />\r\n    \r\n                <Button title={'Tìm kiếm'}\r\n                        onClick={this.onSearchClick} />\r\n                </div>\r\n            \r\n            <div>\r\n             <MaterialTable\r\n             tableRef = {this.tableRef}\r\n             icons = {TableIcons}\r\n             columns= {this.columns}\r\n             options = {this.options}\r\n             data = {this.getDataFromUser}\r\n             title= 'Danh sách người dùng hiện tại' />\r\n            </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}