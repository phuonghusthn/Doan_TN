{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\tagmanagement\\\\tagmanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nimport LabelOff from '@material-ui/icons/LabelOff';\nimport BlurOff from '@material-ui/icons/BlurOff';\nimport BlurOn from '@material-ui/icons/BlurOn';\nimport Email from '@material-ui/icons/Email';\nimport Edit from '@material-ui/icons/Edit';\nexport default class TagManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isPIN = 0;\n    this.isTag = 0;\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.EmailInput = '';\n    this.RcodeInput = '';\n    this.dictDev = {};\n    this.dictDid = {};\n    this.dIdInput = 0;\n    this.Dep = [];\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Email cá nhân',\n      field: 'email'\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 26\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 26\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }];\n    this.optionsTable = {\n      pageSize: 20,\n      pageSizeOptions: [20],\n      search: false,\n      showTitle: false,\n      actionsColumnIndex: -1\n    };\n\n    this.onChangeIsPIN = value => {\n      if (value === 'Đã có PINCode') {\n        this.isPIN = 2;\n      } else {\n        this.isPIN = 1;\n      }\n    };\n\n    this.onChangeIsTag = value => {\n      if (value === 'Chưa có thẻ') {\n        this.isTag = 1;\n      } else {\n        this.isTag = 2;\n      }\n    };\n\n    this.onChangeDep = value => {\n      this.dIdInput = this.dictDid[value];\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onIdNSChange = value => {\n      this.IdNSInput = value;\n    };\n\n    this.onEmailChange = value => {\n      this.EmailInput = value;\n    };\n\n    this.onRcodeChange = value => {\n      this.RcodeInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.getDataFromUser = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(this.dIdInput, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, 0, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.state = {};\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.dictDev[item.dId] = item.dName;\n            this.Dep[index] = item.dName;\n            this.dictDid[item.dName] = item.dId;\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '30px 10px 40px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"Qu\\u1EA3n l\\xFD s\\u1EED d\\u1EE5ng PINCode v\\xE0 th\\u1EBB t\\u1EEB\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onIdNSChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      data: this.Dep,\n      onChange: this.onChangeDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      onChange: this.onEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 26\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      onChange: this.onRcodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      data: ['Chưa có thẻ', 'Đã có thẻ'],\n      onChange: this.onChangeIsTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-control\",\n      style: {\n        width: '25%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      data: ['Đã có PINCode', 'Chưa có PINCode'],\n      onChange: this.onChangeIsPIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      icons: TableIcons,\n      columns: this.columns,\n      options: this.optionsTable,\n      data: this.getDataFromUser,\n      actions: [{\n        icon: () => /*#__PURE__*/React.createElement(Edit, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 47\n          }\n        }),\n        tooltip: 'Chỉnh sửa thông tin thẻ từ',\n        onClick: (event, rowData) => alert(\"You want Edit \")\n      }, rowData => ({\n        icon: () => /*#__PURE__*/React.createElement(Email, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 49\n          }\n        }),\n        tooltip: 'Gửi PINCode',\n        onClick: (event, rowData) => alert(\"You want to send PINCODE \")\n      }), rowData => ({\n        icon: () => /*#__PURE__*/React.createElement(BlurOn, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 49\n          }\n        }),\n        tooltip: 'Tạo mới PINCode',\n        onClick: (event, rowData) => alert(\"You want to delete \")\n      }), rowData => ({\n        icon: () => /*#__PURE__*/React.createElement(BlurOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 47\n          }\n        }),\n        tooltip: 'Xóa PINCode',\n        onClick: (event, rowData) => alert(\"You want to delete PinCode \")\n      }), rowData => ({\n        icon: () => /*#__PURE__*/React.createElement(LabelOff, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 49\n          }\n        }),\n        tooltip: 'Xóa quyền sử dụng thẻ từ',\n        onClick: (event, rowData) => alert(\"You want to delete permission \")\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/tagmanagement/tagmanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","LabelOff","BlurOff","BlurOn","Email","Edit","TagManagement","Component","constructor","props","isPIN","isTag","NameInput","IdNSInput","EmailInput","RcodeInput","dictDev","dictDid","dIdInput","Dep","columns","title","field","render","rowData","dId","color","pCode","optionsTable","pageSize","pageSizeOptions","search","showTitle","actionsColumnIndex","onChangeIsPIN","value","onChangeIsTag","onChangeDep","onNameChange","onIdNSChange","onEmailChange","onRcodeChange","onSearchClick","tableRef","current","onQueryChange","getDataFromUser","query","Promise","resolve","reject","getUser","page","then","data","items","currentPage","totalCount","total","state","createRef","modalRef","componentDidMount","getDepartment","length","map","item","index","dName","setState","isUpdateView","margin","display","width","icon","tooltip","onClick","event","alert"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\nimport LabelOff from '@material-ui/icons/LabelOff'\r\nimport BlurOff from '@material-ui/icons/BlurOff'\r\nimport BlurOn from '@material-ui/icons/BlurOn'\r\nimport Email from '@material-ui/icons/Email'\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\n\r\n\r\nexport default class TagManagement extends React.Component {\r\n    isPIN = 0;\r\n    isTag = 0;\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    EmailInput = '';\r\n    RcodeInput = '';\r\n    dictDev = {};\r\n    dictDid = {};\r\n    dIdInput = 0;\r\n    Dep = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n\r\n    }\r\n\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode' \r\n        },\r\n        {\r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Email cá nhân', \r\n            field: 'email'\r\n        },\r\n        { \r\n            title: 'Tình trạng PINCode',\r\n             field: 'pCode',\r\n             render: rowData => \r\n             {\r\n                 if(rowData.pCode === 0) {\r\n                     return(\r\n                         <span syle={{color: 'red'}}>\r\n                             Chưa có\r\n                         </span>\r\n                     )\r\n                 }\r\n                 else {\r\n                     return(\r\n                         <span syle={{color: 'green'}}>\r\n                             Đã có\r\n                         </span>\r\n                     )\r\n                 }\r\n             } \r\n        },\r\n        { \r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode' \r\n        },\r\n        \r\n    ] \r\n\r\n    optionsTable = {\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        search: false,\r\n        showTitle: false,\r\n        actionsColumnIndex: -1\r\n    }\r\n\r\n    onChangeIsPIN = (value) => {\r\n        if (value === 'Đã có PINCode') {\r\n            this.isPIN = 2;\r\n        }\r\n        else {\r\n            this.isPIN = 1;\r\n        }\r\n    }\r\n\r\n    onChangeIsTag = (value) => {\r\n        if (value === 'Chưa có thẻ') {\r\n            this.isTag= 1;\r\n        }\r\n        else {\r\n            this.isTag = 2;\r\n        }\r\n    } \r\n\r\n    onChangeDep = (value) => {\r\n        this.dIdInput = this.dictDid[value];\r\n    }  \r\n\r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n\r\n    onIdNSChange = (value) => {\r\n        this.IdNSInput = value;\r\n    }\r\n\r\n    onEmailChange = (value) => {\r\n        this.EmailInput = value;\r\n    }\r\n\r\n    onRcodeChange = (value) => {\r\n        this.RcodeInput = value;\r\n    }\r\n   \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }   \r\n\r\n    getDataFromUser = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(this.dIdInput, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, 0, query.page + 1)\r\n            .then(value => {\r\n                resolve({\r\n                    data: value.items,\r\n                    page: value.currentPage - 1,\r\n                    totalCount: value.total,\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            this.dictDev[item.dId] = item.dName;\r\n                            this.Dep[index] = item.dName;\r\n                            this.dictDid[item.dName] = item.dId;\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n    }\r\n\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div style ={{margin: '30px 10px 40px 20px'}}>\r\n                    <h2>\r\n                        Quản lý sử dụng PINCode và thẻ từ\r\n                    </h2>\r\n                </div>\r\n                <div className =\"around\">\r\n                    <div className= \"title-style\">\r\n                        <span> \r\n                            Danh sách người dùng hiện tại \r\n                        </span>\r\n                    </div>\r\n                    \r\n                    <div style={{display: 'flex' }}>\r\n                        <Input \r\n                            title={'Tên nhân viên'}\r\n                            onChange={this.onNameChange} \r\n                        />\r\n                        <div className=\"space-button\"></div>\r\n                        <Input \r\n                            title={'ID nhân sự'} \r\n                            onChange={this.onIdNSChange} \r\n                        />\r\n                        <Combobox\r\n                        title={'Bộ phận làm việc'} \r\n                        data = {this.Dep}\r\n                        onChange = {this.onChangeDep}\r\n                        />\r\n                        <Input \r\n                            title={'Email'} \r\n                            onChange={this.onEmailChange} \r\n                        />\r\n                         <div className=\"space-button\"></div>\r\n                        <Input \r\n                            title={'Mã thẻ từ'} \r\n                            onChange = {this.onRcodeChange\r\n                        }\r\n                        />\r\n                        <Combobox \r\n                            title={'Tình trạng sử dụng thẻ'}\r\n                            data= {[\r\n                                'Chưa có thẻ',\r\n                                'Đã có thẻ',\r\n                            ]}\r\n                            onChange = {this.onChangeIsTag}\r\n                        /> \r\n                    </div>\r\n                    <div className=\"div-control\" style={{width: '25%'}}>\r\n                        <Combobox \r\n                            title={'Tình trạng PINCode'}\r\n                            data = { [\r\n                                    'Đã có PINCode',\r\n                                    'Chưa có PINCode',\r\n                                ] }\r\n                            onChange = {this.onChangeIsPIN}\r\n                        />\r\n            \r\n                        <Button \r\n                            title={'Tìm kiếm'}\r\n                            onClick={this.onSearchClick}\r\n                        />\r\n                    </div>\r\n                    <div>\r\n                        <MaterialTable\r\n                            tableRef = {this.tableRef}\r\n                            icons = {TableIcons}\r\n                            columns= {this.columns}\r\n                            options = {this.optionsTable}\r\n                            data = {this.getDataFromUser}\r\n                            actions={[\r\n                                {\r\n                                  icon: () => <Edit/>,\r\n                                  tooltip: 'Chỉnh sửa thông tin thẻ từ',\r\n                                  onClick: (event, rowData) => alert(\"You want Edit \")\r\n                                },\r\n                                rowData => ({\r\n                                    icon: () => <Email/>,\r\n                                    tooltip: 'Gửi PINCode',\r\n                                    onClick: (event, rowData) => alert(\"You want to send PINCODE \"),\r\n                                }),\r\n                                rowData => ({\r\n                                    icon: () => <BlurOn/>,\r\n                                    tooltip: 'Tạo mới PINCode',\r\n                                    onClick: (event, rowData) => alert(\"You want to delete \" ),\r\n                                }),\r\n                                rowData => ({\r\n                                  icon: () => <BlurOff/>,\r\n                                  tooltip: 'Xóa PINCode',\r\n                                  onClick: (event, rowData) => alert(\"You want to delete PinCode \" ),\r\n                                }),\r\n                                rowData => ({\r\n                                    icon: () => <LabelOff/>,\r\n                                    tooltip: 'Xóa quyền sử dụng thẻ từ',\r\n                                    onClick: (event, rowData) => alert(\"You want to delete permission \" ),\r\n                                  })\r\n                              ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}