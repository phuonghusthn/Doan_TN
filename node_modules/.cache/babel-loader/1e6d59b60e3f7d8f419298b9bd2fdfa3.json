{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\warningmanagement\\\\warningmanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Combobox from '../../common/combobox';\nimport Button from '../../common/button';\nimport DatePickers from '../../common/datepicker';\nimport Warning from '../../../core/warning';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nexport default class WarningManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.DictBuilding = {};\n    this.DictLevel = {};\n    this.LabelInput = '';\n    this.ActInput = '';\n    this.TypeWInput = 0;\n    this.Method = '';\n    this.isRead = 0;\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.BIdInput = 0;\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.LvIdInput = 0;\n    this.DictBLvIName = {};\n    this.DictBLvIId = {};\n    this.Imei = [];\n    this.BLvIInput = '';\n    this.columnsTable = [{\n      title: 'Loại cảnh báo',\n      field: 'tID',\n      render: rowData => {\n        if (rowData.tId === 2) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 21\n            }\n          }, \"Thi\\u1EBFt b\\u1ECB m\\u1EA5t k\\u1EBFt n\\u1ED1i\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }\n          }, \"truy c\\u1EADp t\\u1EE7 tr\\xE1i ph\\xE9p\");\n        }\n      }\n    }, {\n      title: 'Hình thức',\n      field: 'method',\n      render: rowData => {\n        if (rowData.tId === 2) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 21\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }\n          }, \"Kh\\xF4ng r\\xF5\");\n        }\n      }\n    }, {\n      title: 'Tòa nhà',\n      field: 'bId',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 21\n          }\n        }, this.DictBuilding[rowData.bId]);\n      }\n    }, {\n      title: 'Tầng',\n      field: 'lLv',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 21\n          }\n        }, \"T\\u1EA7ng \", this.DictLevel[rowData.lLv]);\n      }\n    }, {\n      title: 'Tủ',\n      field: 'label'\n    }, {\n      title: 'Thiết bị quản lý',\n      field: 'imei'\n    }, {\n      title: 'Thời gian ghi nhận',\n      field: 'wTime'\n    }];\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.onLabelChange = value => {\n      this.LabelInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        Warning.getWarning(this.BIdInput, this.LvIdInput, this.BLvIInput, this.LabelInput, '', this.TypeWInput, this.isRead, '', '', query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onActChange = value => {};\n\n    this.onIsReadChange = value => {\n      if (value === 'Đã đọc') {\n        this.isRead = 2;\n      } else {\n        this.isRead = 1;\n      }\n    };\n\n    this.onTypeWChange = value => {\n      if (value === 'Truy cập trái phép') {\n        this.TypeWInput = 1;\n      } else {\n        this.TypeWInput = 2;\n      }\n    };\n\n    this.onChangeBLvI = value => {\n      this.BLvIInput = this.DictBLvIId[value];\n    };\n\n    this.onChangeBLevel = value => {\n      this.LvIdInput = this.DictLvId[value];\n    };\n\n    this.onChangeBuild = value => {\n      this.BIdInput = this.DictBId[value];\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef = React.createRef();\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n            this.DictLevel[item.lId] = item.lLv;\n          });\n        }\n      }\n    });\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBuilding[item.bId] = item.bName;\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Controller.getController().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLvImei = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' + item.eLabel;\n            this.DictBLvIName[item.imei] = bLvImei;\n            this.DictBLvIId[bLvImei] = item.imei;\n            this.Imei[index] = bLvImei;\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 19\n      }\n    }, \"C\\u1EA3nh b\\xE1o h\\u1EC7 th\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      data: this.Imei,\n      onChange: this.onChangeBLvI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tác nhân',\n      data: ['Ra lệnh mở từ website quản trị', 'Mở trục tiếp bằng thẻ Admin', 'Không rõ'],\n      onChange: this.onActChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Loại cảnh báo',\n      data: ['Truy cập trái phép', 'Thiết bị mất kết nối'],\n      onChange: this.onTypeWChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Trạng thái đọc',\n      data: ['Đã đọc', 'Chưa đọc'],\n      onChange: this.onIsReadChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DatePickers, {\n      title: 'Ngày bắt đầu',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DatePickers, {\n      title: 'Ngày kết thúc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      options: this.optionsTable,\n      title: \"Danh s\\xE1ch c\\xE1c c\\u1EA3nh b\\xE1o h\\u1EC7 th\\u1ED1ng\",\n      icons: TableIcons,\n      data: this.getDataFromServer,\n      columns: this.columnsTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/warningmanagement/warningmanagement.js"],"names":["React","Fragment","MaterialTable","TableIcons","Input","Combobox","Button","DatePickers","Warning","Building","Level","Controller","WarningManagement","Component","constructor","props","DictBuilding","DictLevel","LabelInput","ActInput","TypeWInput","Method","isRead","DictBName","Build","DictBId","BIdInput","DictLvName","DictLvId","LvIdInput","DictBLvIName","DictBLvIId","Imei","BLvIInput","columnsTable","title","field","render","rowData","tId","color","bId","lLv","optionsTable","search","pageSize","pageSizeOptions","onLabelChange","value","onSearchClick","tableRef","current","onQueryChange","getDataFromServer","query","Promise","resolve","reject","getWarning","page","then","data","items","currentPage","totalCount","total","onActChange","onIsReadChange","onTypeWChange","onChangeBLvI","onChangeBLevel","onChangeBuild","state","isUpdateView","createRef","componentWillMount","componentDidMount","getLevel","length","map","item","index","bLv","bName","lId","getBuilding","getController","bLvImei","sLabel","eLabel","imei","padding","display","width"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Combobox from '../../common/combobox';\r\nimport Button from '../../common/button';\r\nimport DatePickers from '../../common/datepicker';\r\nimport Warning from '../../../core/warning';\r\nimport Building from '../../../core/building';\r\nimport Level from '../../../core/level';\r\nimport Controller from '../../../core/controller';\r\n\r\nexport default class WarningManagement extends React.Component {\r\n    DictBuilding = {};\r\n    DictLevel ={};\r\n    LabelInput ='';\r\n    ActInput = '';\r\n    TypeWInput = 0;\r\n    Method ='';\r\n    isRead = 0;\r\n\r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    BIdInput = 0;\r\n\r\n    DictLvName = {};\r\n    DictLvId ={};\r\n    Level =[];\r\n    LvIdInput = 0;\r\n\r\n    DictBLvIName = {};\r\n    DictBLvIId = {};\r\n    Imei = [];\r\n    BLvIInput = '';\r\n\r\n\r\n\r\n    columnsTable = [\r\n        { title: 'Loại cảnh báo', field: 'tID', render: rowData => {\r\n            if (rowData.tId === 2) {\r\n                return(\r\n                    <span style ={{color: 'red'}}>\r\n                        Thiết bị mất kết nối\r\n                    </span>\r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <span style ={{color: 'green'}}>\r\n                        truy cập tủ trái phép\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        } },\r\n        { title: 'Hình thức', field: 'method', render: rowData => {\r\n            if (rowData.tId === 2) {\r\n                return(\r\n                    <span>\r\n                        \r\n                    </span>\r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <span style ={{color: 'green'}}>\r\n                        Không rõ\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        } },\r\n        { \r\n            title: 'Tòa nhà', \r\n            field: 'bId',\r\n            render: rowData => {\r\n                return(\r\n                    <span>{this.DictBuilding[rowData.bId]}</span>\r\n                )\r\n            } \r\n        },\r\n        { \r\n            title: 'Tầng', \r\n            field: 'lLv', \r\n            render: rowData => {\r\n                return(\r\n                    <span>\r\n                        Tầng {this.DictLevel[rowData.lLv]}\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        { \r\n            title: 'Tủ', \r\n            field: 'label' \r\n        },\r\n        { \r\n            title: 'Thiết bị quản lý',\r\n             field: 'imei' \r\n        },\r\n        { \r\n            title: 'Thời gian ghi nhận',\r\n             field: 'wTime' \r\n        },\r\n    ] \r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef = React.createRef();\r\n       \r\n    }\r\n\r\n    onLabelChange = (value) => {\r\n        this.LabelInput = value;\r\n    }\r\n    \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            Warning.getWarning(this.BIdInput, this.LvIdInput, this.BLvIInput, this.LabelInput,'',this.TypeWInput, this.isRead,'','', query.page +1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })  \r\n                })\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        \r\n    }\r\n\r\n    onActChange = (value) => {\r\n        \r\n    }\r\n\r\n    onIsReadChange = (value)=> {\r\n        if (value === 'Đã đọc') {\r\n            this.isRead = 2;\r\n        }\r\n        else {\r\n            this.isRead = 1;\r\n        }\r\n    }\r\n\r\n    onTypeWChange = (value) => {\r\n        if(value === 'Truy cập trái phép') {\r\n            this.TypeWInput = 1;\r\n        }\r\n        else {\r\n            this.TypeWInput = 2;\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        Level.getLevel()\r\n        .then(value => {\r\n            if(value){\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLv = ' Tòa ' + item.bName + ' - Tầng '  + item.lLv;\r\n                        this.DictLvName[item.lId] = bLv;\r\n                        this.DictLvId[bLv] = item.lId;\r\n                        this.Level[index] = bLv ;\r\n                        this.DictLevel[item.lId] = item.lLv;\r\n                    }) \r\n                }\r\n            }\r\n        });\r\n\r\n        Building.getBuilding()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item,index) => {\r\n                            this.DictBuilding[item.bId] = item.bName;\r\n                            this.DictBName[item.bId] = item.bName;\r\n                            this.DictBId[item.bName] = item.bId;\r\n                            this.Build[index] = item.bName; \r\n                        })\r\n                    }\r\n                } \r\n        })\r\n\r\n        Controller.getController()\r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLvImei =' Tòa ' + item.bName + ' - Tầng '  + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' +  item.eLabel;\r\n                        this.DictBLvIName[item.imei] = bLvImei;\r\n                        this.DictBLvIId[bLvImei] = item.imei;\r\n                        this.Imei[index] = bLvImei;\r\n                    })                    \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeBLvI = (value) => {\r\n        this.BLvIInput = this.DictBLvIId[value];\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.LvIdInput = this.DictLvId[value];\r\n    } \r\n\r\n    onChangeBuild = (value) => {\r\n        this.BIdInput = this.DictBId[value];\r\n    }\r\n\r\n    \r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div style={{padding: '10px'}}>\r\n                  <h2>Cảnh báo hệ thống</h2>\r\n                </div>\r\n\r\n                <div style={{display: 'flex' }}>\r\n                    <Combobox\r\n                        title={'Tòa nhà'} \r\n                        data = {this.Build}\r\n                        onChange = {this.onChangeBuild}\r\n                    /> \r\n                    <Combobox\r\n                        title={'Tầng'}\r\n                        data = {this.Level}\r\n                        onChange = {this.onChangeBLevel}\r\n                    />\r\n                    <Combobox\r\n                        title={'Thiết bị quản lý'} \r\n                        data = { this.Imei}\r\n                        onChange = { this.onChangeBLvI }\r\n                    />\r\n                    <Input \r\n                        title={'Nhãn tủ'} \r\n                        onChange = {this.onLabelChange }\r\n                    />\r\n                     <Combobox \r\n                    title={'Tác nhân'} \r\n                    data = {[\r\n                        'Ra lệnh mở từ website quản trị',\r\n                        'Mở trục tiếp bằng thẻ Admin',\r\n                        'Không rõ'\r\n                    ]}\r\n                    onChange = {this.onActChange}\r\n                    />\r\n                    <Combobox \r\n                    title={'Loại cảnh báo'}\r\n                    data ={[\r\n                        'Truy cập trái phép',\r\n                        'Thiết bị mất kết nối'\r\n                    ]}\r\n                    onChange = {this.onTypeWChange}\r\n                    />                   \r\n                </div>\r\n                <div  style={{display: 'flex', width: '70%'}}>\r\n                <Combobox \r\n                title={'Trạng thái đọc'}\r\n                data = {[\r\n                    'Đã đọc',\r\n                    'Chưa đọc'\r\n                ]}\r\n                onChange = {this.onIsReadChange}\r\n\r\n                />\r\n                <DatePickers \r\n                title={'Ngày bắt đầu'}\r\n                \r\n                />\r\n                <DatePickers \r\n                title ={'Ngày kết thúc'}\r\n                />\r\n                <Button \r\n                    title={'Tìm kiếm'}\r\n                    onClick={this.onSearchClick} \r\n                />\r\n                </div>\r\n\r\n                <MaterialTable \r\n                tableRef={this.tableRef}\r\n                options = {this.optionsTable}\r\n                title= 'Danh sách các cảnh báo hệ thống'\r\n                icons= {TableIcons}\r\n                data = {this.getDataFromServer}\r\n                columns = {this.columnsTable}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}