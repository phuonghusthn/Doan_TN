{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usermanagement\\\\usermanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nexport default class UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.EmailInput = '';\n    this.RcodeInput = '';\n    this.dictDev = {};\n    this.isGroup = 0;\n    this.isPIN = 0;\n    this.isTag = 0;\n    this.Dep = [];\n    this.dictDid = {};\n    this.dIdInput = 0;\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Email',\n      field: 'email'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gStatus',\n      render: rowData => {\n        if (rowData.gStatus === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }];\n    this.options1 = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20],\n      showTitle: false,\n      actionsColumnIndex: -1\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onIdNSChange = value => {\n      this.IdNSInput = value;\n    };\n\n    this.onEmailChange = value => {\n      this.EmailInput = value;\n    };\n\n    this.onRcodeChange = value => {\n      this.RcodeInput = value;\n    };\n\n    this.onChangeIsPIN = value => {\n      if (value === 'Đã có PINCode') {\n        this.isPIN = 2;\n      } else {\n        this.isPIN = 1;\n      }\n    };\n\n    this.onChangeIsGroup = value => {\n      if (value === 'Chưa được phân tủ') {\n        this.isGroup = 1;\n      } else {\n        this.isGroup = 2;\n      }\n    };\n\n    this.onChangeIsTag = value => {\n      if (value === 'Chưa có thẻ') {\n        this.isTag = 1;\n      } else {\n        this.isTag = 2;\n      }\n    };\n\n    this.onChangDep = value => {\n      this.dIdInput = this.dictDid[value];\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(this.dIdInput, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, this.isGroup, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n              this.Dep[index] = item.dName;\n              this.dictDid[item.dName] = item.dId;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '30px 10px 40px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, \" Qu\\u1EA3n l\\xFD ng\\u01B0\\u1EDDi d\\xF9ng\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onIdNSChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      data: this.Dep,\n      onChange: this.onChangDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      onChange: this.onEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"space-button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      onChange: this.onRcodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      data: ['Chưa có thẻ', 'Đã có thẻ'],\n      onChange: this.onChangeIsTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-control\",\n      style: {\n        display: 'flex',\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      onChange: this.onChangeIsGroup,\n      data: ['Chưa được phân tủ', 'Đã được phân tủ'],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      data: ['Đã có PINCode', 'Chưa có PINCode'],\n      onChange: this.onChangeIsPIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      options: this.options1,\n      icons: TableIcons,\n      columns: this.columns,\n      data: this.getDataFromServer,\n      actions: [{\n        icon: () => /*#__PURE__*/React.createElement(TableIcons.Edit, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 47\n          }\n        }),\n        tooltip: 'Chỉnh sửa thông tin',\n        onClick: (event, rowData) => alert(\"You want Edit \" + rowData.name)\n      }, rowData => ({\n        icon: () => /*#__PURE__*/React.createElement(TableIcons.DeleteOutline, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 47\n          }\n        }),\n        tooltip: 'Xóa',\n        onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name)\n      })],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usermanagement/usermanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","UserManagement","Component","constructor","props","NameInput","IdNSInput","EmailInput","RcodeInput","dictDev","isGroup","isPIN","isTag","Dep","dictDid","dIdInput","columns","title","field","render","rowData","dId","color","pCode","gStatus","options1","search","pageSize","pageSizeOptions","showTitle","actionsColumnIndex","onNameChange","value","onIdNSChange","onEmailChange","onRcodeChange","onChangeIsPIN","onChangeIsGroup","onChangeIsTag","onChangDep","onSearchClick","tableRef","current","onQueryChange","getDataFromServer","query","Promise","resolve","reject","getUser","page","then","data","items","currentPage","totalCount","total","state","isUpdateView","createRef","modalRef","componentDidMount","getDepartment","length","map","item","index","dName","setState","margin","display","width","maxWidth","icon","tooltip","onClick","event","alert","name"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AAEA,eAAe,MAAMC,cAAN,SAA6BT,KAAK,CAACU,SAAnC,CAA6C;AAaxDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AADe,SAZnBC,SAYmB,GAZP,EAYO;AAAA,SAXnBC,SAWmB,GAXP,EAWO;AAAA,SAVnBC,UAUmB,GAVN,EAUM;AAAA,SATnBC,UASmB,GATN,EASM;AAAA,SARnBC,OAQmB,GART,EAQS;AAAA,SAPnBC,OAOmB,GAPV,CAOU;AAAA,SANnBC,KAMmB,GANX,CAMW;AAAA,SALnBC,KAKmB,GALX,CAKW;AAAA,SAJnBC,GAImB,GAJb,EAIa;AAAA,SAHnBC,OAGmB,GAHT,EAGS;AAAA,SAFnBC,QAEmB,GAFR,CAEQ;AAAA,SAUnBC,OAVmB,GAUT,CACN;AACIC,MAAAA,KAAK,EAAE,WADX;AAEIC,MAAAA,KAAK,EAAE;AAFX,KADM,EAKN;AACID,MAAAA,KAAK,EAAE,YADX;AAEIC,MAAAA,KAAK,EAAE;AAFX,KALM,EASN;AACID,MAAAA,KAAK,EAAE,OADX;AAEKC,MAAAA,KAAK,EAAE;AAFZ,KATM,EAYN;AACID,MAAAA,KAAK,EAAE,kBADX;AAEIC,MAAAA,KAAK,EAAE,KAFX;AAGIC,MAAAA,MAAM,EAAEC,OAAO,IAAG;AACd,YAAGA,OAAO,CAACC,GAAR,GAAc,CAAd,KAAoB,CAAvB,EACA;AACI,8BACI;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKb,OAAL,CAAaW,OAAO,CAACC,GAArB,CADL,CADJ;AAIH,SAND,MAOK;AACD,8BACI;AAAM,YAAA,KAAK,EAAE;AAACC,cAAAA,KAAK,EAAE;AAAR,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACK,KAAKb,OAAL,CAAaW,OAAO,CAACC,GAArB,CADL,CADJ;AAIH;AACJ;AAjBL,KAZM,EA+BN;AACIJ,MAAAA,KAAK,EAAE,oBADX;AAEIC,MAAAA,KAAK,EAAC,OAFV;AAGIC,MAAAA,MAAM,EAAEC,OAAO,IACf;AACI,YAAGA,OAAO,CAACG,KAAR,KAAkB,CAArB,EAAwB;AACpB,8BACI;AAAM,YAAA,IAAI,EAAE;AAACD,cAAAA,KAAK,EAAE;AAAR,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADJ;AAKH,SAND,MAOK;AACD,8BACI;AAAM,YAAA,IAAI,EAAE;AAACA,cAAAA,KAAK,EAAE;AAAR,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADJ;AAKH;AACJ;AAnBL,KA/BM,EAoDN;AACIL,MAAAA,KAAK,EAAE,qBADX;AAEIC,MAAAA,KAAK,EAAE;AAFX,KApDM,EAwDN;AACID,MAAAA,KAAK,EAAE,oBADX;AAEIC,MAAAA,KAAK,EAAE,SAFX;AAGIC,MAAAA,MAAM,EAAEC,OAAO,IACf;AACI,YAAIA,OAAO,CAACI,OAAR,KAAoB,CAAxB,EAA2B;AACvB,8BACI;AAAM,YAAA,KAAK,EAAE;AAACF,cAAAA,KAAK,EAAE;AAAR,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DADJ;AAKH,SAND,MAOK;AACD,8BACI;AAAM,YAAA,KAAK,EAAE;AAACA,cAAAA,KAAK,EAAE;AAAR,aAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8DADJ;AAKH;AACJ;AAnBL,KAxDM,CAVS;AAAA,SA0FnBG,QA1FmB,GA0FR;AACPC,MAAAA,MAAM,EAAE,KADD;AAEPC,MAAAA,QAAQ,EAAE,EAFH;AAGPC,MAAAA,eAAe,EAAE,CAAC,EAAD,CAHV;AAIPC,MAAAA,SAAS,EAAE,KAJJ;AAKPC,MAAAA,kBAAkB,EAAE,CAAC;AALd,KA1FQ;;AAAA,SAkGnBC,YAlGmB,GAkGHC,KAAD,IAAW;AACtB,WAAK3B,SAAL,GAAiB2B,KAAjB;AACH,KApGkB;;AAAA,SAsGnBC,YAtGmB,GAsGHD,KAAD,IAAW;AACtB,WAAK1B,SAAL,GAAiB0B,KAAjB;AACH,KAxGkB;;AAAA,SA0GnBE,aA1GmB,GA0GFF,KAAD,IAAW;AACvB,WAAKzB,UAAL,GAAkByB,KAAlB;AACH,KA5GkB;;AAAA,SA8GnBG,aA9GmB,GA8GFH,KAAD,IAAW;AACvB,WAAKxB,UAAL,GAAkBwB,KAAlB;AACH,KAhHkB;;AAAA,SAkHnBI,aAlHmB,GAkHFJ,KAAD,IAAW;AACvB,UAAIA,KAAK,KAAK,eAAd,EAA+B;AAC3B,aAAKrB,KAAL,GAAa,CAAb;AACH,OAFD,MAGK;AACD,aAAKA,KAAL,GAAa,CAAb;AACH;AACJ,KAzHkB;;AAAA,SA2HnB0B,eA3HmB,GA2HAL,KAAD,IAAW;AACzB,UAAIA,KAAK,KAAK,mBAAd,EAAmC;AAC/B,aAAKtB,OAAL,GAAc,CAAd;AACH,OAFD,MAGK;AACD,aAAKA,OAAL,GAAe,CAAf;AACH;AACJ,KAlIkB;;AAAA,SAoInB4B,aApImB,GAoIFN,KAAD,IAAW;AACvB,UAAIA,KAAK,KAAK,aAAd,EAA6B;AACzB,aAAKpB,KAAL,GAAY,CAAZ;AACH,OAFD,MAGK;AACD,aAAKA,KAAL,GAAa,CAAb;AACH;AACJ,KA3IkB;;AAAA,SA6InB2B,UA7ImB,GA6ILP,KAAD,IAAW;AACpB,WAAKjB,QAAL,GAAgB,KAAKD,OAAL,CAAakB,KAAb,CAAhB;AACH,KA/IkB;;AAAA,SAiJnBQ,aAjJmB,GAiJH,MAAM;AAClB,WAAKC,QAAL,CAAcC,OAAd,IAAyB,KAAKD,QAAL,CAAcC,OAAd,CAAsBC,aAAtB,EAAzB,CADkB,CAElB;AACA;AACA;AACH,KAtJkB;;AAAA,SAwJnBC,iBAxJmB,GAwJEC,KAAD,IAAW;AAC3B,aAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCtD,QAAAA,IAAI,CAACuD,OAAL,CAAa,KAAKlC,QAAlB,EAA4B,KAAKV,SAAjC,EAA4C,KAAKC,SAAjD,EAA4D,KAAKC,UAAjE,EAA6E,KAAKC,UAAlF,EAA8F,KAAKI,KAAnG,EAA0G,KAAKD,KAA/G,EAAsH,KAAKD,OAA3H,EAAoImC,KAAK,CAACK,IAAN,GAAa,CAAjJ,EACKC,IADL,CACUnB,KAAK,IAAI;AACXe,UAAAA,OAAO,CAAC;AACJK,YAAAA,IAAI,EAAEpB,KAAK,CAACqB,KADR;AAEJH,YAAAA,IAAI,EAAElB,KAAK,CAACsB,WAAN,GAAoB,CAFtB;AAGJC,YAAAA,UAAU,EAAEvB,KAAK,CAACwB;AAHd,WAAD,CAAP;AAKN,SAPF;AAQH,OATM,CAAP;AAUH,KAnKkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGA,SAAKjB,QAAL,GAAgBjD,KAAK,CAACmE,SAAN,EAAhB;AACA,SAAKC,QAAL,GAAgBpE,KAAK,CAACmE,SAAN,EAAhB;AACH;;AA+JDE,EAAAA,iBAAiB,GAAG;AAChB7D,IAAAA,UAAU,CAAC8D,aAAX,GACKX,IADL,CACUnB,KAAK,IAAI;AACX,UAAGA,KAAH,EAAU;AACN,YAAGA,KAAK,CAACqB,KAAN,CAAYU,MAAZ,GAAoB,CAAvB,EAA0B;AACtB/B,UAAAA,KAAK,CAACqB,KAAN,CAAYW,GAAZ,CAAgB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AAC7B;AACI,mBAAKzD,OAAL,CAAawD,IAAI,CAAC5C,GAAlB,IAAyB4C,IAAI,CAACE,KAA9B;AACA,mBAAKtD,GAAL,CAASqD,KAAT,IAAkBD,IAAI,CAACE,KAAvB;AACA,mBAAKrD,OAAL,CAAamD,IAAI,CAACE,KAAlB,IAA2BF,IAAI,CAAC5C,GAAhC;AACH;AACJ,WAND;AAOH;;AACD,aAAK+C,QAAL,CAAc;AACVV,UAAAA,YAAY,EAAE,CAAC,KAAKA;AADV,SAAd;AAGP;AACL,KAhBA;AAiBH;;AAEDvC,EAAAA,MAAM,GAAG;AACL,wBACI,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,KAAK,EAAG;AAACkD,QAAAA,MAAM,EAAE;AAAT,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kDADJ,CADJ,eAII;AAAK,MAAA,SAAS,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAE,aAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iEADJ,CADJ,eAMI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,eADX;AAEI,MAAA,QAAQ,EAAE,KAAKvC,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAKI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALJ,eAMI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,YADX;AAEI,MAAA,QAAQ,EAAE,KAAKE,YAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANJ,eAUI,oBAAC,QAAD;AACA,MAAA,KAAK,EAAE,kBADP;AAEA,MAAA,IAAI,EAAI,KAAKpB,GAFb;AAGA,MAAA,QAAQ,EAAI,KAAK0B,UAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAVJ,eAeI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,OADX;AAEI,MAAA,QAAQ,EAAE,KAAKL,aAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfJ,eAmBI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAnBJ,eAoBI,oBAAC,KAAD;AACI,MAAA,KAAK,EAAE,WADX;AAEI,MAAA,QAAQ,EAAI,KAAKC,aAFrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApBJ,eAyBI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAE,wBADX;AAEI,MAAA,IAAI,EAAG,CACH,aADG,EAEH,WAFG,CAFX;AAMI,MAAA,QAAQ,EAAI,KAAKG,aANrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBJ,CANJ,eAwCI;AAAM,MAAA,SAAS,EAAC,aAAhB;AAA8B,MAAA,KAAK,EAAE;AAACgC,QAAAA,OAAO,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE;AAAzB,OAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,QAAD;AACA,MAAA,KAAK,EAAE,oBADP;AAEA,MAAA,QAAQ,EAAE,KAAKlC,eAFf;AAGA,MAAA,IAAI,EAAI,CACJ,mBADI,EAEJ,iBAFI,CAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eASA,oBAAC,QAAD;AACA,MAAA,KAAK,EAAE,oBADP;AAEA,MAAA,IAAI,EAAK,CACD,eADC,EAED,iBAFC,CAFT;AAMA,MAAA,QAAQ,EAAI,KAAKD,aANjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATA,eAiBA,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,UAAf;AACQ,MAAA,OAAO,EAAE,KAAKI,aADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBA,CAxCJ,eA6DI;AAAK,MAAA,KAAK,EAAE;AAAEgC,QAAAA,QAAQ,EAAE;AAAZ,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAE,KAAK/B,QADnB;AAEI,MAAA,OAAO,EAAE,KAAKhB,QAFlB;AAGI,MAAA,KAAK,EAAE7B,UAHX;AAII,MAAA,OAAO,EAAE,KAAKoB,OAJlB;AAKI,MAAA,IAAI,EAAE,KAAK4B,iBALf;AAMI,MAAA,OAAO,EAAE,CACL;AACE6B,QAAAA,IAAI,EAAE,mBAAM,oBAAC,UAAD,CAAY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADd;AAEEC,QAAAA,OAAO,EAAE,qBAFX;AAGEC,QAAAA,OAAO,EAAE,CAACC,KAAD,EAAQxD,OAAR,KAAoByD,KAAK,CAAC,mBAAmBzD,OAAO,CAAC0D,IAA5B;AAHpC,OADK,EAML1D,OAAO,KAAK;AACVqD,QAAAA,IAAI,EAAE,mBAAM,oBAAC,UAAD,CAAY,aAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAEVC,QAAAA,OAAO,EAAE,KAFC;AAGVC,QAAAA,OAAO,EAAE,CAACC,KAAD,EAAQxD,OAAR,KAAoByD,KAAK,CAAC,wBAAwBzD,OAAO,CAAC0D,IAAjC;AAHxB,OAAL,CANF,CANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CA7DJ,CAJJ,CADJ;AA0FH;;AAlSuD","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user'\r\nimport MaterialTable from 'material-table'\r\nimport TableIcons from '../../common/materialicon'\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\n\r\nexport default class UserManagement extends React.Component {\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    EmailInput = '';\r\n    RcodeInput = '';\r\n    dictDev = {};\r\n    isGroup =0;\r\n    isPIN = 0;\r\n    isTag = 0;\r\n    Dep = [];\r\n    dictDid = {};\r\n    dIdInput = 0;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n    }\r\n\r\n\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode'\r\n        },\r\n        { \r\n            title: 'Email',\r\n             field: 'email' },\r\n        { \r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n          },\r\n        {\r\n            title: 'Tình trạng PINCode', \r\n            field:'pCode',\r\n            render: rowData => \r\n            {\r\n                if(rowData.pCode === 0) {\r\n                    return(\r\n                        <span syle={{color: 'red'}}>\r\n                            Chưa có\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span syle={{color: 'green'}}>\r\n                            Đã có\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode'\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ',\r\n            field: 'gStatus',\r\n            render: rowData =>\r\n            {\r\n                if (rowData.gStatus === 0) {\r\n                    return(\r\n                        <span style={{color: 'red'}}>\r\n                            Chưa được phân tủ\r\n                        </span> \r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Đã được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n\r\n    ]\r\n\r\n    options1 = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        showTitle: false,\r\n        actionsColumnIndex: -1\r\n    }\r\n\r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n\r\n    onIdNSChange = (value) => {\r\n        this.IdNSInput = value;\r\n    }\r\n\r\n    onEmailChange = (value) => {\r\n        this.EmailInput = value;\r\n    }\r\n\r\n    onRcodeChange = (value) => {\r\n        this.RcodeInput = value;\r\n    }\r\n\r\n    onChangeIsPIN = (value) => {\r\n        if (value === 'Đã có PINCode') {\r\n            this.isPIN = 2;\r\n        }\r\n        else {\r\n            this.isPIN = 1;\r\n        }\r\n    }\r\n\r\n    onChangeIsGroup = (value) => {\r\n        if (value === 'Chưa được phân tủ') {\r\n            this.isGroup= 1;\r\n        }\r\n        else {\r\n            this.isGroup = 2;\r\n        }\r\n    } \r\n\r\n    onChangeIsTag = (value) => {\r\n        if (value === 'Chưa có thẻ') {\r\n            this.isTag= 1;\r\n        }\r\n        else {\r\n            this.isTag = 2;\r\n        }\r\n    }\r\n\r\n    onChangDep = (value) => {\r\n        this.dIdInput = this.dictDid[value];\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(this.dIdInput, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, this.isGroup, query.page + 1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })               \r\n             })\r\n        })\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {\r\n                                this.dictDev[item.dId] = item.dName;\r\n                                this.Dep[index] = item.dName;\r\n                                this.dictDid[item.dName] = item.dId;\r\n                            }\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n            }\r\n       })\r\n    }\r\n \r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div style ={{margin: '30px 10px 40px 20px'}}>\r\n                    <h2> Quản lý người dùng</h2>\r\n                </div>\r\n                <div className =\"around\">\r\n                    <div className= \"title-style\">\r\n                        <span> \r\n                         Danh sách người dùng hiện tại\r\n                        </span>\r\n                    </div>\r\n                    <div style={{display: 'flex' }}>\r\n                        <Input \r\n                            title={'Tên nhân viên'}\r\n                            onChange={this.onNameChange} \r\n                        />\r\n                        <div className=\"space-button\"></div>\r\n                        <Input \r\n                            title={'ID nhân sự'} \r\n                            onChange={this.onIdNSChange} \r\n                        />\r\n                        <Combobox\r\n                        title={'Bộ phận làm việc'} \r\n                        data = {this.Dep}\r\n                        onChange = {this.onChangDep}\r\n                        />\r\n                        <Input \r\n                            title={'Email'} \r\n                            onChange={this.onEmailChange} \r\n                        />\r\n                        <div className=\"space-button\"></div>\r\n                        <Input \r\n                            title={'Mã thẻ từ'} \r\n                            onChange = {this.onRcodeChange\r\n                        }\r\n                        />\r\n                        <Combobox \r\n                            title={'Tình trạng sử dụng thẻ'}\r\n                            data= {[\r\n                                'Chưa có thẻ',\r\n                                'Đã có thẻ',\r\n                            ]}\r\n                            onChange = {this.onChangeIsTag}\r\n                        />                   \r\n                    </div>\r\n                    <div  className=\"div-control\" style={{display: 'flex', width: '50%'}}>\r\n                    <Combobox \r\n                    title={'Tình trạng phân tủ'}\r\n                    onChange={this.onChangeIsGroup}\r\n                    data = {[\r\n                        'Chưa được phân tủ',\r\n                        'Đã được phân tủ',\r\n                    ] }\r\n                    />\r\n                    <Combobox \r\n                    title={'Tình trạng PINCode'}\r\n                    data = { [\r\n                            'Đã có PINCode',\r\n                            'Chưa có PINCode',\r\n                        ] }\r\n                    onChange = {this.onChangeIsPIN}\r\n                    />\r\n                    <Button title={'Tìm kiếm'}\r\n                            onClick={this.onSearchClick} />\r\n                    </div>\r\n                \r\n                    <div style={{ maxWidth: '100%' }}>\r\n                        <MaterialTable\r\n                            tableRef={this.tableRef}\r\n                            options={this.options1}\r\n                            icons={TableIcons}\r\n                            columns={this.columns}\r\n                            data={this.getDataFromServer}\r\n                            actions={[\r\n                                {\r\n                                  icon: () => <TableIcons.Edit/>,\r\n                                  tooltip: 'Chỉnh sửa thông tin',\r\n                                  onClick: (event, rowData) => alert(\"You want Edit \" + rowData.name)\r\n                                },\r\n                                rowData => ({\r\n                                  icon: () => <TableIcons.DeleteOutline />,\r\n                                  tooltip: 'Xóa',\r\n                                  onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name),\r\n                                })\r\n                              ]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}