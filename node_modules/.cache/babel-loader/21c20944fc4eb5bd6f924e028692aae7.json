{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Users {\n  constructor() {\n    this.createUser = async (name = '', code = '', email, dId = 0, tag = '', pin = false) => {\n      try {\n        let url = ApiUri.user.createUser.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'name': name,\n          'code': code,\n          'email': email,\n          'dId': dId,\n          'pin': pin,\n          'tag': tag\n        };\n        return await fetch(url, {\n          method: ApiUri.user.createUser.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getUser = async (dId = 0, name = '', code = '', email = '', tag = '', isTag = 0, isPin = 0, isGroup = 0, page = 1) => {\n      try {\n        let url = ApiUri.user.getUser.uri + '?dId=' + dId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&name=' + name;\n        url += '&eCode=' + code;\n        url += '&email=' + email;\n        url += '&tag=' + tag;\n        url += '&isTag=' + isTag;\n        url += '&isPin=' + isPin;\n        url += '&isGroup=' + isGroup;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.user.getUser.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getUsage = async (eName = '', eCode = '', label = '', dId = 0, bId = 0, page = 1) => {\n      try {\n        let url = ApiUri.user.getUsage.uri;\n        url += '?eName=' + eName;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&eCode=' + eCode;\n        url += '&label=' + label;\n        url += '&dId=' + dId;\n        url += '&bId=' + bId;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.user.getUsage.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.editUser = async (eId = 0, name = '', email = '', dId = 0, tag = '') => {\n      try {\n        let url = ApiUri.user.editUser.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eId': eId,\n          'name': name,\n          'email': email,\n          'dId': dId,\n          'tag': tag\n        };\n        return await fetch(url, {\n          method: ApiUri.user.editUser.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.removeUser = async (eId = 0) => {\n      try {\n        let url = ApiUri.user.removeUser.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eId': eId\n        };\n        return await fetch(url, {\n          method: ApiUri.user.removeUser.method,\n          // mode: 'cors',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': '*',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.unmapPin = async (eId = 0) => {\n      try {\n        let url = ApiUri.user.unmapPin.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eId': eId\n        };\n        return await fetch(url, {\n          method: ApiUri.user.unmapPin.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.mapNewLocker = async (listEmp = [], listLk = [], reuse = false) => {\n      try {\n        let url = ApiUri.user.mapNewLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'listEmp': listEmp,\n          'listLk': listLk,\n          'reuse': reuse\n        };\n        return await fetch(url, {\n          method: ApiUri.user.mapNewLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.unmapLocker = async (eCode = '', lId = 0, all = false) => {\n      try {\n        let url = ApiUri.user.unmapLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eCode': eCode,\n          'lId': lId,\n          'all': all\n        };\n        return await fetch(url, {\n          method: ApiUri.user.unmapLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.mapPin = async (eId = 0) => {\n      try {\n        let url = ApiUri.user.mapPin.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eId': eId\n        };\n        return await fetch(url, {\n          method: ApiUri.user.mapPin.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.sendPin = async (eId = 0) => {\n      try {\n        let url = ApiUri.user.sendPin.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eId': eId\n        };\n        return await fetch(url, {\n          method: ApiUri.user.sendPin.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.unmapTag = async (eId = 0) => {\n      try {\n        let url = ApiUri.user.unmapTag.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'eId': eId\n        };\n        return await fetch(url, {\n          method: ApiUri.user.unmapTag.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar User = new Users();\nexport default User;","map":{"version":3,"sources":["E:/DATN_2020/src/core/user.js"],"names":["ApiUri","server","Users","createUser","name","code","email","dId","tag","pin","url","user","uri","form","localStorage","getItem","fetch","method","mode","cache","headers","referrerPolicy","body","JSON","stringify","then","response","json","catch","console","error","getUser","isTag","isPin","isGroup","page","getUsage","eName","eCode","label","bId","editUser","eId","removeUser","unmapPin","mapNewLocker","listEmp","listLk","reuse","unmapLocker","lId","all","mapPin","sendPin","unmapTag","User"],"mappings":"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","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Users {\r\n\r\n    createUser = async (name = '', code = '', email, dId = 0, tag = '', pin = false) => {\r\n        try {\r\n            let url = ApiUri.user.createUser.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'name': name,\r\n                'code': code,\r\n                'email': email,\r\n                'dId': dId,\r\n                'pin': pin,\r\n                'tag': tag,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.createUser.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    getUser = async (dId = 0, name = '', code = '', email = '', tag = '', isTag = 0, isPin = 0, isGroup = 0, page = 1) => {\r\n        try {\r\n            let url = ApiUri.user.getUser.uri + '?dId=' + dId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&name=' + name;\r\n            url += '&eCode=' + code;\r\n            url += '&email=' + email;\r\n            url += '&tag=' + tag;\r\n            url += '&isTag=' + isTag;\r\n            url += '&isPin=' + isPin;\r\n            url += '&isGroup=' + isGroup;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.getUser.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n    }\r\n\r\n    getUsage = async (eName = '', eCode = '', label = '', dId = 0, bId = 0, page = 1) => {\r\n        try {\r\n            let url = ApiUri.user.getUsage.uri\r\n            url += '?eName=' + eName;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&eCode=' + eCode;\r\n            url += '&label=' + label;\r\n            url += '&dId=' + dId;\r\n            url += '&bId=' + bId;\r\n\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.getUsage.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    editUser = async (eId = 0, name = '', email = '', dId = 0, tag = '') => {\r\n        try {\r\n            let url = ApiUri.user.editUser.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eId': eId,\r\n                'name': name,\r\n                'email': email,\r\n                'dId': dId,\r\n                'tag': tag\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.editUser.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    removeUser = async (eId = 0) => {\r\n        try {\r\n            let url = ApiUri.user.removeUser.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eId': eId,\r\n            }\r\n            return await fetch(url, {\r\n                method: ApiUri.user.removeUser.method,\r\n                // mode: 'cors',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': '*',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error)\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    unmapPin = async (eId = 0) => {\r\n        try {\r\n            let url = ApiUri.user.unmapPin.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eId': eId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.unmapPin.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    mapNewLocker = async (listEmp = [], listLk = [], reuse = false) => {\r\n        try {\r\n            let url = ApiUri.user.mapNewLocker.uri\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'listEmp': listEmp,\r\n                'listLk': listLk,\r\n                'reuse': reuse,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.mapNewLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    unmapLocker = async (eCode = '', lId = 0, all = false) => {\r\n        try {\r\n            let url = ApiUri.user.unmapLocker.uri\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eCode': eCode,\r\n                'lId': lId,\r\n                'all': all,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.unmapLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    mapPin = async (eId = 0) => {\r\n        try {\r\n            let url = ApiUri.user.mapPin.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eId': eId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.mapPin.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    sendPin = async (eId = 0) => {\r\n        try {\r\n            let url = ApiUri.user.sendPin.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eId': eId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.sendPin.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    unmapTag = async (eId = 0) => {\r\n        try {\r\n            let url = ApiUri.user.unmapTag.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'eId': eId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.user.unmapTag.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n    }\r\n}\r\n\r\nvar User = new Users();\r\nexport default User;"]},"metadata":{},"sourceType":"module"}