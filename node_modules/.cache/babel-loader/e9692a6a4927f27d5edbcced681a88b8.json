{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\tagmanagement\\\\tagmanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Department from '../../../core/department';\nexport default class TagManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.EmailInput = '';\n    this.RcodeInput = '';\n    this.dictDev = {};\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Email cá nhân',\n      field: 'email'\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 26\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 26\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n    this.options = {\n      pageSize: 20,\n      pageSizeOptions: [20],\n      search: false\n    };\n\n    this.getDataFromUser = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser().then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.state = {};\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, \"Qu\\u1EA3n l\\xFD s\\u1EED d\\u1EE5ng PINCode v\\xE0 th\\u1EBB t\\u1EEB\")), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      columns: this.columns,\n      options: this.options,\n      data: this.getDataFromUser,\n      title: \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/tagmanagement/tagmanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Department","TagManagement","Component","constructor","props","NameInput","IdNSInput","EmailInput","RcodeInput","dictDev","columns","title","field","render","rowData","dId","color","pCode","options","pageSize","pageSizeOptions","search","getDataFromUser","query","Promise","resolve","reject","getUser","then","value","data","items","page","currentPage","totalCount","total","state","componentDidMount","getDepartment","length","map","item","index","dName","setState","isUpdateView"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user'\r\nimport MaterialTable from 'material-table'\r\nimport TableIcons from '../../common/materialicon'\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Department from '../../../core/department'\r\n\r\n\r\nexport default class TagManagement extends React.Component {\r\n\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    EmailInput = '';\r\n    RcodeInput = '';\r\n    dictDev = {};\r\n\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode' \r\n        },\r\n        {\r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Email cá nhân', \r\n            field: 'email'\r\n        },\r\n        { \r\n            title: 'Tình trạng PINCode',\r\n             field: 'pCode',\r\n             render: rowData => \r\n             {\r\n                 if(rowData.pCode === 0) {\r\n                     return(\r\n                         <span syle={{color: 'red'}}>\r\n                             Chưa có\r\n                         </span>\r\n                     )\r\n                 }\r\n                 else {\r\n                     return(\r\n                         <span syle={{color: 'green'}}>\r\n                             Đã có\r\n                         </span>\r\n                     )\r\n                 }\r\n             } \r\n        },\r\n        { \r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode' \r\n        },\r\n        { title: 'Action', field: '' },\r\n        \r\n    ] \r\n\r\n    options = {\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        search: false,\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n    }\r\n\r\n    getDataFromUser = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser()\r\n            .then(value => {\r\n                resolve({\r\n                    data: value.items,\r\n                    page: value.currentPage - 1,\r\n                    totalCount: value.total,\r\n                })\r\n            })\r\n        })\r\n    }\r\n \r\n    \r\n    getUsage\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n            <div>\r\n                <span>\r\n                    Quản lý sử dụng PINCode và thẻ từ\r\n                </span>\r\n            </div>\r\n            \r\n            <div>\r\n             <MaterialTable\r\n             columns= {this.columns}\r\n             options = {this.options}\r\n             data = {this.getDataFromUser}\r\n             title= 'Danh sách người dùng hiện tại' />\r\n            </div>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}