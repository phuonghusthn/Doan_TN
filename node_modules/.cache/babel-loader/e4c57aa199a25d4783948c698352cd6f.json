{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Lockers {\n  constructor() {\n    this.createLayout = async (lId = 0, lNum = 0, lCol = 0, lRow = 0, lPage = 0, label = '', imei = '') => {\n      try {\n        let url = ApiUri.locker.createLayout.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId,\n          'lNum': lNum,\n          'lCol': lCol,\n          'lRow': lRow,\n          'lPage': lPage,\n          'label': label,\n          'imei': imei\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.createLayout.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getLocker = async (bId = 0, lvId = 0, imei = '', label = '', gLocker = 0, gStatus = 0, page = 1) => {\n      try {\n        let url = ApiUri.locker.getLocker.uri;\n        url += '?bId=' + bId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&lvId=' + lvId;\n        url += '&imei=' + imei;\n        url += '&label=' + label;\n        url += '&gLocker=' + gLocker;\n        url += '&gStatus=' + gStatus;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.locker.getLocker.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getUsage = async (eCode = '', label = '', imei = '', lvId = 0, bId = 0, page = 1) => {\n      try {\n        let url = ApiUri.locker.getUsage.uri;\n        url += '?imei=' + imei;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&eCode=' + eCode;\n        url += '&label=' + label;\n        url += '&lvId=' + lvId;\n        url += '&bId=' + bId;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.locker.getUsage.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getRestrict = async (eCode = '', label = '', imei = '', lvId = 0, bId = 0, page = 1) => {\n      try {\n        let url = ApiUri.locker.getRestrict.uri;\n        url += '?imei=' + imei;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&eCode=' + eCode;\n        url += '&label=' + label;\n        url += '&lvId=' + lvId;\n        url += '&bId=' + bId;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.locker.getRestrict.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getManageLocker = async (bId = 0, lId = 0, imei = '', label = '', page = 1) => {\n      try {\n        let url = ApiUri.locker.getManage.uri;\n        url += '?bId=' + bId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&lId=' + lId;\n        url += '&imei=' + imei;\n        url += '&label=' + label;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.locker.getManage.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.openLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.openLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.openLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.freeLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.freeLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.freeLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.freeAllLocker = async (imei = '') => {\n      try {\n        let url = ApiUri.locker.freeAllLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'imei': imei\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.freeAllLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.confirmLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.confirmLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.confirmLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.disableLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.disableLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.disableLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.removeLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.removeLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.removeLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.enableLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.enableLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.enableLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.reportLocker = async (lId = 0) => {\n      try {\n        let url = ApiUri.locker.reportLocker.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'lId': lId\n        };\n        return await fetch(url, {\n          method: ApiUri.locker.reportLocker.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Locker = new Lockers();\nexport default Locker;","map":{"version":3,"sources":["E:/DATN_2020/src/core/locker.js"],"names":["ApiUri","server","Lockers","createLayout","lId","lNum","lCol","lRow","lPage","label","imei","url","locker","uri","form","localStorage","getItem","fetch","method","mode","cache","headers","referrerPolicy","body","JSON","stringify","then","response","json","catch","console","error","getLocker","bId","lvId","gLocker","gStatus","page","getUsage","eCode","getRestrict","getManageLocker","getManage","openLocker","freeLocker","freeAllLocker","confirmLocker","disableLocker","removeLocker","enableLocker","reportLocker","Locker"],"mappings":"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","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Lockers {\r\n\r\n    createLayout = async (lId = 0, lNum = 0, lCol = 0, lRow = 0, lPage = 0, label = '', imei = '') => {\r\n        try {\r\n            let url = ApiUri.locker.createLayout.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n                'lNum': lNum,\r\n                'lCol': lCol,\r\n                'lRow': lRow,\r\n                'lPage': lPage,\r\n                'label': label,\r\n                'imei': imei,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.createLayout.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    getLocker = async (bId = 0, lvId = 0, imei = '', label = '', gLocker = 0, gStatus = 0, page = 1) => {\r\n        try {\r\n            let url = ApiUri.locker.getLocker.uri;\r\n            url += '?bId=' + bId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&lvId=' + lvId;\r\n            url += '&imei=' + imei;\r\n            url += '&label=' + label;\r\n            url += '&gLocker=' + gLocker;\r\n            url += '&gStatus=' + gStatus;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.getLocker.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    getUsage = async (eCode = '', label = '', imei = '', lvId = 0, bId = 0, page = 1) => {\r\n        try {\r\n            let url = ApiUri.locker.getUsage.uri\r\n            url += '?imei=' + imei;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&eCode=' + eCode;\r\n            url += '&label=' + label;\r\n            url += '&lvId=' + lvId;\r\n            url += '&bId=' + bId;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.getUsage.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    getRestrict = async (eCode = '', label = '', imei = '', lvId = 0, bId = 0, page = 1) => {\r\n        try {\r\n            let url = ApiUri.locker.getRestrict.uri\r\n            url += '?imei=' + imei;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&eCode=' + eCode;\r\n            url += '&label=' + label;\r\n            url += '&lvId=' + lvId;\r\n            url += '&bId=' + bId;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.getRestrict.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    getManageLocker = async (bId = 0, lId = 0, imei = '', label = '',  page = 1) => {\r\n        try {\r\n            let url = ApiUri.locker.getManage.uri\r\n            url += '?bId=' + bId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&lId=' + lId;\r\n            url += '&imei=' + imei;\r\n            url += '&label=' + label;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.getManage.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{\r\n\r\n        }\r\n\r\n    }\r\n\r\n    openLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.openLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.openLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    freeLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.freeLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.freeLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    freeAllLocker = async (imei = '') => {\r\n        try {\r\n            let url = ApiUri.locker.freeAllLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'imei': imei,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.freeAllLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    confirmLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.confirmLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.confirmLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    disableLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.disableLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.disableLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    removeLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.removeLocker.uri\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.removeLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    enableLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.enableLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.enableLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    reportLocker = async (lId = 0) => {\r\n        try {\r\n            let url = ApiUri.locker.reportLocker.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'lId': lId,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.locker.reportLocker.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n}\r\n\r\nvar Locker = new Lockers();\r\nexport default Locker;"]},"metadata":{},"sourceType":"module"}