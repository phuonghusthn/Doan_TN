{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\reportmanagement\\\\lockerrealtimereport.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport RealTimerReport from '../../../core/report';\nimport TableIcons from '../../common/materialicon';\nexport default class LockerRealTimeReport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.columns = [{\n      title: 'Tòa nhà',\n      field: 'bName'\n    }, {\n      title: 'Tầng',\n      field: 'lLv'\n    }, {\n      title: 'Tủ',\n      field: 'lLabel'\n    }, {\n      title: 'Hành động',\n      field: 'act',\n      render: rowData => {\n        if (rowData.act === 'PICKUP_HOLD') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 16,\n              columnNumber: 25\n            }\n          }, \"M\\u1EDF t\\u1EE7\");\n        } else if (rowData.act === 'DROPOFF') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'gray'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 25\n            }\n          }, \"Tr\\u1EA3 t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'gray'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 25\n            }\n          }, \"M\\u1EDF t\\u1EEB web\");\n        }\n      }\n    }, {\n      title: 'Trạng thái của cánh tủ',\n      field: 'dState',\n      render: rowData => {\n        if (rowData.dState === 'CLOSE') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 25\n            }\n          }, \"C\\xE1nh t\\u1EE7 \\u0111\\xF3ng\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 25\n            }\n          }, \"C\\xE1nh t\\u1EE7 m\\u1EDF\");\n        }\n      }\n    }, {\n      title: 'Người sử dụng cuối cùng',\n      field: 'eName'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Thời điểm thao tác lần cuối',\n      field: 'aTime'\n    }];\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        RealTimerReport.getRealTimeReport().then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n  }\n\n  componentDidMount() {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 20\n      }\n    }, \" Theo d\\xF5i s\\u1EF1 ki\\u1EC7n s\\u1EED d\\u1EE5ng t\\u1EE7 th\\u1EDDi gian th\\u1EF1c\")), /*#__PURE__*/React.createElement(MaterialTable, {\n      title: \"Theo d\\xF5i s\\u1EF1 ki\\u1EC7n s\\u1EED d\\u1EE5ng t\\u1EE7 th\\u1EDDi gian th\\u1EF1c\",\n      columns: this.columns,\n      options: this.optionsTable,\n      data: this.getDataFromServer,\n      icons: TableIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/reportmanagement/lockerrealtimereport.js"],"names":["React","Fragment","MaterialTable","RealTimerReport","TableIcons","LockerRealTimeReport","Component","constructor","props","columns","title","field","render","rowData","act","color","dState","optionsTable","search","pageSize","pageSizeOptions","getDataFromServer","query","Promise","resolve","reject","getRealTimeReport","then","value","data","items","page","currentPage","totalCount","total","state","isUpdateView","componentDidMount","padding"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport RealTimerReport from '../../../core/report';\r\nimport TableIcons from '../../common/materialicon';\r\n\r\nexport default class LockerRealTimeReport extends React.Component {\r\n\r\n    columns = [\r\n        { title: 'Tòa nhà', field: 'bName' },\r\n        { title: 'Tầng', field: 'lLv' },\r\n        { title: 'Tủ', field: 'lLabel' },\r\n        { title: 'Hành động', field: 'act' , render : rowData => \r\n            {\r\n                if(rowData.act === 'PICKUP_HOLD') {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Mở tủ\r\n                        </span>\r\n                    )\r\n                }\r\n                else if (rowData.act === 'DROPOFF'){\r\n                    return(\r\n                        <span  style ={{color: 'gray'}}>\r\n                            Trả tủ\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style ={{color: 'gray'}}>\r\n                            Mở từ web\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        { title: 'Trạng thái của cánh tủ', field: 'dState', render: rowData =>\r\n            {\r\n                if(rowData.dState === 'CLOSE') {\r\n                    return(\r\n                        <span style={{color: 'red'}}>\r\n                            Cánh tủ đóng\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Cánh tủ mở\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n        { title: 'Người sử dụng cuối cùng', field: 'eName' },\r\n        { title: 'ID nhân sự', field: 'eCode' },\r\n        { title: 'Thời điểm thao tác lần cuối', field: 'aTime' },\r\n    ] \r\n\r\n    optionsTable =  \r\n    {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n    }\r\n    \r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n    }\r\n\r\n    \r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            RealTimerReport.getRealTimeReport()\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    render() {\r\n        return(\r\n\r\n            <Fragment>\r\n                <div style={{padding: '10px'}}>\r\n                   <h2> Theo dõi sự kiện sử dụng tủ thời gian thực</h2>\r\n                </div>\r\n                <MaterialTable\r\n                    title = 'Theo dõi sự kiện sử dụng tủ thời gian thực'\r\n                    columns = {this.columns}\r\n                    options = {this.optionsTable}\r\n                    data = {this.getDataFromServer}\r\n                    icons = {TableIcons}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}