{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\reportmanagement\\\\lockerstatusrepost.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport LokerStatusReport from '../../../core/report';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Combobox from '../../common/combobox';\nimport Button from '../../common/button';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nexport default class LockerStatusReport extends React.Component {\n  constructor(props) {\n    super(props);\n    this.labelInput = '';\n    this.lstatus = 0;\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.BIdInput = 0;\n    this.DictBLvIName = {};\n    this.DictBLvIId = {};\n    this.Imei = [];\n    this.BLvIInput = '';\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.LvIdInput = 0;\n    this.columns = [{\n      title: 'Tòa nhà',\n      field: 'bName'\n    }, {\n      title: 'Tầng',\n      field: 'lLv'\n    }, {\n      title: 'Tủ',\n      field: 'lLabel'\n    }, {\n      title: 'Trạng thái',\n      field: 'status',\n      render: rowData => {\n        if (rowData.status === 'FREE') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }\n          }, \"T\\u1EE7 tr\\u1ED1ng\");\n        } else if (rowData.status === 'OCCUPIED') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }\n          }, \"T\\u1EE7 \\u0111ang \\u0111\\u01B0\\u1EE3c s\\u1EED d\\u1EE5ng\");\n        } else if (rowData.status === 'DISABLED') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'gray'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 21\n            }\n          }, \"T\\u1EE7 b\\u1ECB v\\xF4 hi\\u1EC7u h\\xF3a\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'gray'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 21\n            }\n          }, \"T\\u1EE7 c\\xF3 l\\u1ED7i k\\u0129 thu\\u1EADt\");\n        }\n      }\n    }, {\n      title: 'Người sử dụng cuối cùng',\n      field: 'eName'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Thời điểm thao tác lần cuối',\n      field: 'aTime'\n    }];\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        LokerStatusReport.getStatusReport(this.BIdInput, this.LvIdInput, this.BLvIInput, this.labelInput, this.lstatus, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onLabelChange = value => {\n      this.labelInput = value;\n    };\n\n    this.onStatusChange = value => {\n      if (value === 'Tủ trống') {\n        this.lstatus = 1;\n      } else if (value === 'Tủ đang sử dụng') {\n        this.lstatus = 2;\n      } else if (value === 'Tủ bị vô hiệu hóa') {\n        this.lstatus = 3;\n      } else {\n        this.lstatus = 4;\n      } //  console.log(this.lstatus);\n\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.onChangeBLvI = value => {\n      this.BLvIInput = this.DictBLvIId[value];\n    };\n\n    this.onChangeBLevel = value => {\n      this.LvIdInput = this.DictLvId[value];\n    };\n\n    this.onChangeBuild = value => {\n      this.BIdInput = this.DictBId[value];\n    };\n\n    this.state = {};\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n          });\n        }\n      }\n    });\n    Controller.getController().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLvImei = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' + item.eLabel;\n            this.DictBLvIName[item.imei] = bLvImei;\n            this.DictBLvIId[bLvImei] = item.imei;\n            this.Imei[index] = bLvImei;\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 21\n      }\n    }, \"B\\xE1o c\\xE1o tr\\u1EA1ng th\\xE1i c\\xE1c t\\u1EE7 \\u0111ang ho\\u1EA1t \\u0111\\u1ED9ng trong h\\u1EC7 th\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      data: this.Imei,\n      onChange: this.onChangeBLvI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Trạng thái tủ',\n      data: ['Tủ trống', 'Tủ đang sử dụng', 'Tủ bị vô hiệu hóa', 'Tủ có lỗi kỹ thuật'],\n      onChange: this.onStatusChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      title: \"Danh s\\xE1ch c\\xE1c t\\u1EE7 \\u0111ang ho\\u1EA1t \\u0111\\u1ED9ng trong h\\u1EC7 th\\u1ED1ng\",\n      columns: this.columns,\n      options: this.optionsTable,\n      icons: TableIcons,\n      data: this.getDataFromServer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/reportmanagement/lockerstatusrepost.js"],"names":["React","Fragment","MaterialTable","LokerStatusReport","TableIcons","Input","Combobox","Button","Building","Level","Controller","LockerStatusReport","Component","constructor","props","labelInput","lstatus","DictBName","Build","DictBId","BIdInput","DictBLvIName","DictBLvIId","Imei","BLvIInput","DictLvName","DictLvId","LvIdInput","columns","title","field","render","rowData","status","color","optionsTable","search","pageSize","pageSizeOptions","getDataFromServer","query","Promise","resolve","reject","getStatusReport","page","then","value","data","items","currentPage","totalCount","total","onLabelChange","onStatusChange","onSearchClick","tableRef","current","onQueryChange","onChangeBLvI","onChangeBLevel","onChangeBuild","state","createRef","componentDidMount","getBuilding","length","map","item","index","bId","bName","getLevel","bLv","lLv","lId","getController","bLvImei","sLabel","eLabel","imei","padding","display","margin"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport LokerStatusReport from '../../../core/report';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Combobox from '../../common/combobox';\r\nimport Button from '../../common/button';\r\nimport Building from '../../../core/building';\r\nimport Level from '../../../core/level';\r\nimport Controller from '../../../core/controller';\r\n\r\nexport default class LockerStatusReport extends React.Component {\r\n    labelInput = '';\r\n    lstatus = 0;\r\n\r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    BIdInput = 0;\r\n\r\n    DictBLvIName = {};\r\n    DictBLvIId = {};\r\n    Imei = [];\r\n    BLvIInput = '';\r\n\r\n    DictLvName = {};\r\n    DictLvId ={};\r\n    Level =[];\r\n    LvIdInput = 0;\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.tableRef = React.createRef();\r\n    }\r\n    columns = [\r\n        { title: 'Tòa nhà', field: 'bName' },\r\n        { title: 'Tầng', field: 'lLv' },\r\n        { title: 'Tủ', field: 'lLabel' },\r\n        { title: 'Trạng thái', field: 'status', render: rowData => {\r\n            if(rowData.status === 'FREE') {\r\n                return (\r\n                    <span style={{color: 'green'}}>\r\n                        Tủ trống\r\n                    </span>\r\n                )\r\n            }\r\n            else if(rowData.status === 'OCCUPIED') {\r\n                return (\r\n                    <span style={{color: 'red'}}>\r\n                        Tủ đang được sử dụng\r\n                    </span>\r\n                )\r\n            }\r\n            else if( rowData.status === 'DISABLED') {\r\n                return (\r\n                    <span style={{color: 'gray'}}>\r\n                        Tủ bị vô hiệu hóa\r\n                    </span>\r\n                )\r\n            }\r\n            else {\r\n                return (\r\n                    <span style={{color: 'gray'}}>\r\n                        Tủ có lỗi kĩ thuật\r\n                    </span>\r\n                )\r\n            }\r\n        } },\r\n        { title: 'Người sử dụng cuối cùng', field: 'eName' },\r\n        { title: 'ID nhân sự', field: 'eCode' },\r\n        { title: 'Thời điểm thao tác lần cuối', field: 'aTime' },\r\n    ]\r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            LokerStatusReport.getStatusReport(this.BIdInput, this.LvIdInput, this.BLvIInput, this.labelInput, this.lstatus , query.page + 1 )\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    }) \r\n                })\r\n        })\r\n    }\r\n\r\n    onLabelChange = (value) => \r\n    { \r\n        this.labelInput = value;\r\n    }\r\n\r\n    onStatusChange = (value) => {\r\n        if(value === 'Tủ trống') {\r\n            this.lstatus = 1;\r\n        }\r\n        else if (value === 'Tủ đang sử dụng') {\r\n            this.lstatus = 2;\r\n        }\r\n        else if( value === 'Tủ bị vô hiệu hóa'){\r\n            this.lstatus = 3;\r\n        }\r\n        else {\r\n            this.lstatus = 4;\r\n        }\r\n      //  console.log(this.lstatus);\r\n    }\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        Building.getBuilding()\r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item,index) => {\r\n                        this.DictBName[item.bId] = item.bName;\r\n                        this.DictBId[item.bName] = item.bId;\r\n                        this.Build[index] = item.bName; \r\n                    })\r\n                }\r\n            } \r\n        })\r\n\r\n        Level.getLevel()\r\n        .then(value => {\r\n            if(value){\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLv = ' Tòa ' + item.bName + ' - Tầng '  + item.lLv;\r\n                        this.DictLvName[item.lId] = bLv;\r\n                        this.DictLvId[bLv] = item.lId;\r\n                        this.Level[index] = bLv ;\r\n                    }) \r\n                }\r\n            }\r\n        });\r\n\r\n        Controller.getController()\r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLvImei =' Tòa ' + item.bName + ' - Tầng '  + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' +  item.eLabel;\r\n                        this.DictBLvIName[item.imei] = bLvImei;\r\n                        this.DictBLvIId[bLvImei] = item.imei;\r\n                        this.Imei[index] = bLvImei;\r\n                    })                    \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeBLvI = (value) => {\r\n        this.BLvIInput = this.DictBLvIId[value];\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.LvIdInput = this.DictLvId[value];\r\n    } \r\n     \r\n    onChangeBuild = (value) => {\r\n        this.BIdInput = this.DictBId[value];\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div style={{padding: '10px'}}>\r\n                    <h2>Báo cáo trạng thái các tủ đang hoạt động trong hệ thống</h2>\r\n                </div>\r\n                <div style={{display: 'flex', margin: '10px' }}>\r\n                    <Combobox\r\n                        title={'Tòa nhà'} \r\n                        data = {this.Build}\r\n                        onChange = {this.onChangeBuild}\r\n                    /> \r\n                    <Combobox\r\n                        title={'Tầng'}\r\n                        data = {this.Level}\r\n                        onChange = {this.onChangeBLevel}\r\n                    />\r\n                    <Combobox\r\n                        title={'Thiết bị quản lý'} \r\n                        data = { this.Imei}\r\n                        onChange = { this.onChangeBLvI }\r\n                    />\r\n\r\n                    <Input \r\n                        title={'Nhãn tủ'} \r\n                        onChange = {this.onLabelChange\r\n                    }\r\n                    />\r\n                    <Combobox \r\n                    title={'Trạng thái tủ'} \r\n                    data= {[\r\n                        'Tủ trống',\r\n                        'Tủ đang sử dụng',\r\n                        'Tủ bị vô hiệu hóa',\r\n                        'Tủ có lỗi kỹ thuật'\r\n                    ]}\r\n                    onChange = {this.onStatusChange}\r\n                    />   \r\n                    <Button title={'Tìm kiếm'}\r\n                        onClick={this.onSearchClick} />\r\n                </div>\r\n                <MaterialTable \r\n                tableRef={this.tableRef}\r\n                title = 'Danh sách các tủ đang hoạt động trong hệ thống'\r\n                columns = {this.columns}\r\n                options = {this.optionsTable}\r\n                icons= {TableIcons}\r\n                data = {this.getDataFromServer}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}