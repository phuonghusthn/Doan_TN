{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usermanagement\\\\usermanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nexport default class UserManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.NameInput = '';\n    this.dictDev = {};\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Email',\n      field: 'email'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 24\n          }\n        }, \" \", this.dictDev[rowData.dId]);\n      }\n    }, {\n      title: 'Tình trạng PINCode',\n      field: ''\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: ''\n    }, {\n      title: 'Action',\n      field: ''\n    }];\n    this.options = {\n      search: false,\n      showTitle: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(0, this.NameInput, '', '', '', 0, 0, 0, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componenWillMount() {}\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[dId] = item.dName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '50%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        maxWidth: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      options: this.options,\n      icons: TableIcons,\n      columns: this.columns,\n      data: this.getDataFromServer,\n      title: \"Demo Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usermanagement/usermanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","UserManagement","Component","constructor","props","NameInput","dictDev","columns","title","field","render","rowData","dId","options","search","showTitle","pageSize","pageSizeOptions","getDataFromServer","query","Promise","resolve","reject","getUser","page","then","value","data","items","currentPage","totalCount","total","onNameChange","onSearchClick","tableRef","current","onQueryChange","state","isUpdateView","createRef","modalRef","componenWillMount","componentDidMount","getDepartment","length","map","item","index","dName","setState","display","width","maxWidth"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user'\r\nimport MaterialTable from 'material-table'\r\nimport TableIcons from '../../common/materialicon'\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\n\r\nexport default class UserManagement extends React.Component {\r\n    NameInput = '';\r\n    dictDev = {}\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode'\r\n        },\r\n        { \r\n            title: 'Email',\r\n             field: 'email' },\r\n        { \r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                return <span> {this.dictDev[rowData.dId]}</span>\r\n            }\r\n          },\r\n        {\r\n            title: 'Tình trạng PINCode', \r\n            field:''\r\n        },\r\n        {\r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: ''\r\n        },\r\n        {\r\n            title: 'Action', \r\n            field: ''\r\n        },\r\n    ]\r\n\r\n    options = {\r\n        search: false,\r\n        showTitle: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n    }\r\n    componenWillMount() {\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[dId] = item.dName}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(0, this.NameInput, '', '', '', 0, 0, 0, query.page + 1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })\r\n                })\r\n        })\r\n    }\r\n\r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n\r\n   \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <div style={{display: 'flex' }}>\r\n                    <Input title={'Tên nhân viên'}\r\n                        onChange={this.onNameChange} \r\n                        \r\n                        />\r\n                    <Input title={'ID nhân sự'} />\r\n                    <Combobox title={'Bộ phận làm việc'} />\r\n                    <Input title={'Email'} />\r\n                    <Input title={'Mã thẻ từ'} />\r\n                    <Combobox title={'Tình trạng sử dụng thẻ'} />                   \r\n                </div>\r\n                <div  style={{display: 'flex', width: '50%'}}>\r\n                <Combobox title={'Tình trạng phân tủ'}/>\r\n                <Combobox title={'Tình trạng PINCode'} />\r\n                <Button title={'Tìm kiếm'}\r\n                        onClick={this.onSearchClick} />\r\n                </div>\r\n            \r\n                <div style={{ maxWidth: '100%' }}>\r\n                    <MaterialTable\r\n                        tableRef={this.tableRef}\r\n                        options={this.options}\r\n                        icons={TableIcons}\r\n                        columns={this.columns}\r\n                        data={this.getDataFromServer}\r\n                        title=\"Demo Title\"\r\n                    />\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}