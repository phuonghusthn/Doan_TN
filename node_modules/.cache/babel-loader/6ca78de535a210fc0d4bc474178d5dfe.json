{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\lockermanagement\\\\lockermanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Locker from '../../../core/locker';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nimport Combobox from '../../common/combobox';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nexport default class LockerManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rBuildingIdInput = 0;\n    this.rLevelIdInput = 0;\n    this.rImeiInput = '';\n    this.rLabelInput = '';\n    this.lPage = [];\n    this.bDatas = [];\n    this.lDatas = [];\n    this.cDatas = [];\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.DictBLvIName = {};\n    this.DictBLvIId = {};\n    this.Imei = [];\n    this.Test1 = [];\n\n    this.onChangeBLvI = value => {\n      this.setState({\n        BLvIInput: this.DictBLvIId[value]\n      });\n    };\n\n    this.onChangeBLevel = value => {\n      this.setState({\n        LvIdInput: this.DictLvId[value]\n      });\n    };\n\n    this.onChangeBuild = value => {\n      this.setState({\n        BIdInput: this.DictBId[value]\n      });\n    };\n\n    this.onLabelChange = value => {\n      this.setState({\n        LabelInput: value\n      });\n    };\n\n    this.onSearchClick = () => {\n      //     this.tableRef.current && this.tableRef.current.onQueryChange();\n      this.setState({\n        isShowLock: true\n      });\n      console.log(this.state.Test);\n    };\n\n    this.state = {\n      isShowLock: false,\n      BIdInput: 0,\n      LvIdInput: 0,\n      BLvIInput: '',\n      LabelInput: '',\n      Test: []\n    };\n    this.tableRef = React.createRef();\n  }\n\n  componentWillUpdate() {\n    console.log('update');\n    Locker.getLocker(this.state.BIdInput, this.state.LvIdInput, this.state.BLvIInput, this.LabelInput, 0, 0, 2).then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.Test1[index] = item.lLb;\n          });\n        }\n\n        this.setState({\n          Test: this.Test1\n        });\n      }\n    });\n    console.log(this.state.Test);\n  }\n\n  componentDidMount() {\n    console.log('Did');\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n          });\n        }\n      }\n    });\n    Controller.getController().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLvImei = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' + item.eLabel;\n            this.DictBLvIName[item.imei] = bLvImei;\n            this.DictBLvIId[bLvImei] = item.imei;\n            this.Imei[index] = bLvImei;\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    let ManageLocker = null;\n\n    if (this.state.isShowLock === true) {\n      ManageLocker = this.state.Test.map((item, index) => {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"test\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }\n        }, item);\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 19\n      }\n    }, \"Qu\\u1EA3n l\\xFD t\\u1EE7\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      data: this.Imei,\n      onChange: this.onChangeBLvI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-lock\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 21\n      }\n    }, ManageLocker)));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/lockermanagement/lockermanagement.js"],"names":["React","Fragment","MaterialTable","TableIcons","Locker","Building","Level","Controller","Combobox","Input","Button","LockerManagement","Component","constructor","props","rBuildingIdInput","rLevelIdInput","rImeiInput","rLabelInput","lPage","bDatas","lDatas","cDatas","DictBName","Build","DictBId","DictLvName","DictLvId","DictBLvIName","DictBLvIId","Imei","Test1","onChangeBLvI","value","setState","BLvIInput","onChangeBLevel","LvIdInput","onChangeBuild","BIdInput","onLabelChange","LabelInput","onSearchClick","isShowLock","console","log","state","Test","tableRef","createRef","componentWillUpdate","getLocker","then","items","length","map","item","index","lLb","componentDidMount","getBuilding","bId","bName","getLevel","bLv","lLv","lId","getController","bLvImei","sLabel","eLabel","imei","render","ManageLocker","padding","display"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table'\r\nimport TableIcons from '../../common/materialicon'\r\nimport Locker from '../../../core/locker'\r\nimport Building from '../../../core/building'\r\nimport Level from '../../../core/level'\r\nimport Controller from '../../../core/controller';\r\nimport Combobox from '../../common/combobox';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\n\r\nexport default class LockerManagement extends React.Component {\r\n    rBuildingIdInput = 0;\r\n    rLevelIdInput = 0;\r\n    rImeiInput = '';\r\n    rLabelInput = '';\r\n    lPage = [];\r\n    bDatas = [];\r\n    lDatas = [];\r\n    cDatas = [];\r\n\r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    DictLvName = {};\r\n    DictLvId ={};\r\n    Level =[];\r\n    DictBLvIName = {};\r\n    DictBLvIId = {};\r\n    Imei = [];\r\n    Test1 = [];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowLock : false,\r\n            BIdInput: 0,\r\n            LvIdInput: 0,\r\n            BLvIInput: '',\r\n            LabelInput: '',\r\n            Test: [],\r\n\r\n\r\n        };\r\n        this.tableRef = React.createRef();\r\n\r\n    }\r\n\r\n    onChangeBLvI = (value) => {\r\n        this.setState({\r\n            BLvIInput: this.DictBLvIId[value]\r\n        })\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.setState(\r\n            {\r\n             LvIdInput: this.DictLvId[value]\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    onChangeBuild = (value) => {\r\n        this.setState(\r\n            {\r\n                BIdInput: this.DictBId[value]\r\n\r\n            }\r\n        )\r\n    } \r\n\r\n    onLabelChange = (value) => {\r\n        this.setState(\r\n            {\r\n                LabelInput: value,\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    onSearchClick = () => {\r\n   //     this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        this.setState(\r\n            {\r\n                isShowLock: true,\r\n            }\r\n        );\r\n        console.log(this.state.Test);\r\n\r\n    }\r\n\r\n\r\n    componentWillUpdate() {\r\n        console.log('update')\r\n\r\n       Locker.getLocker(this.state.BIdInput, this.state.LvIdInput, this.state.BLvIInput, this.LabelInput, 0,0, 2)\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            this.Test1[index] = item.lLb;\r\n                           \r\n                        })                    \r\n                    }\r\n                    this.setState({\r\n                        Test: this.Test1 \r\n                    })\r\n                }\r\n                        \r\n        })\r\n\r\n        console.log(this.state.Test);\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log('Did')\r\n\r\n        Building.getBuilding()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item,index) => {\r\n                            this.DictBName[item.bId] = item.bName;\r\n                            this.DictBId[item.bName] = item.bId;\r\n                            this.Build[index] = item.bName; \r\n                        })\r\n                    }\r\n                } \r\n        })\r\n        \r\n        Level.getLevel() \r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item,index) => {\r\n                        let bLv = ' Tòa ' + item.bName + ' - Tầng '  + item.lLv;\r\n                        this.DictLvName[item.lId] = bLv;\r\n                        this.DictLvId[bLv] = item.lId;\r\n                        this.Level[index] = bLv ;\r\n                    })\r\n                    \r\n                }\r\n            }\r\n        })\r\n\r\n        Controller.getController()\r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLvImei =' Tòa ' + item.bName + ' - Tầng '  + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' +  item.eLabel;\r\n                        this.DictBLvIName[item.imei] = bLvImei;\r\n                        this.DictBLvIId[bLvImei] = item.imei;\r\n                        this.Imei[index] = bLvImei;\r\n                    })                    \r\n                }\r\n            }\r\n        })  \r\n\r\n    }\r\n    \r\n    render() {\r\n        let ManageLocker = null;\r\n        if(this.state.isShowLock === true) {\r\n            ManageLocker = this.state.Test.map((item, index)=> {\r\n                return(\r\n                <div className=\"test\">\r\n                    {item}\r\n                </div>\r\n                ) \r\n\r\n             });\r\n        }\r\n                \r\n        \r\n        return(\r\n            <Fragment>\r\n              <div style={{padding: '10px'}}>\r\n                  <h2>\r\n                      Quản lý tủ\r\n                  </h2>\r\n              </div>\r\n              <div style ={{display: 'flex'}}>\r\n                    <Combobox\r\n                        title={'Tòa nhà'} \r\n                        data = {this.Build}\r\n                        onChange = {this.onChangeBuild}\r\n                    />\r\n\r\n                    <Combobox\r\n                    title={'Tầng'}\r\n                    data = {this.Level}\r\n                    onChange = {this.onChangeBLevel}\r\n                    \r\n                    />\r\n\r\n                    <Combobox\r\n                    title={'Thiết bị quản lý'} \r\n                    data = { this.Imei}\r\n                    onChange = { this.onChangeBLvI }\r\n                    />\r\n\r\n                    <Input \r\n                        title={'Nhãn tủ'} \r\n                        onChange = {this.onLabelChange\r\n                    }\r\n                    />\r\n\r\n                    <Button \r\n                    title ={'Tìm kiếm'}\r\n                    onClick = {this.onSearchClick}\r\n                    />\r\n                </div>\r\n\r\n                <div>\r\n                    <div className=\"div-lock\">\r\n                     {ManageLocker}\r\n                    </div>\r\n                    \r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}