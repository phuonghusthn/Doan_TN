{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\controllermanagement\\\\controllermanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nimport Combobox from '../../common/combobox';\nimport Modal from '../../common/modal';\nimport ResponseCode from '../../../staticresources/responsecode';\nexport default class ControllerManagemeent extends React.Component {\n  constructor(props) {\n    super(props);\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.BIdInput = 0;\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.LvIdInput = 0;\n    this.ImeiInput = '';\n    this.MACInput = '';\n    this.columnsTable = [{\n      title: 'Tòa nhà',\n      field: 'bName'\n    }, {\n      title: 'Tầng',\n      field: 'lLv',\n      render: rowDate => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 21\n          }\n        }, \"T\\u1EA7ng \", rowDate.lLv);\n      }\n    }, {\n      title: 'Imei',\n      field: 'imei'\n    }, {\n      title: 'Địa chỉ MAC',\n      field: 'mac'\n    }, {\n      title: 'Khu vực',\n      field: 'zone'\n    }, {\n      title: 'Thời điểm phản hồi cuối cùng',\n      field: 'health'\n    }, {\n      title: 'Phiên bản Firmware',\n      field: ''\n    }];\n    this.localizations = {\n      pagination: {\n        nextTooltip: 'Trang kế',\n        previousTooltip: 'Trang trước',\n        firstTooltip: 'Trang đầu',\n        lastTooltip: 'Trang cuối'\n      },\n      body: {\n        editRow: {\n          deleteText: 'Bạn có chắc chắn muốn xoá thiết bị điều khiển này khỏi hệ thống? Các thông tin về tủ do thiết bị này quản lý cũng sẽ được xoá khỏi hệ thống nếu bạn chọn đồng ý?'\n        }\n      }\n    };\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20],\n      showTitle: false,\n      actionsColumnIndex: -1,\n      toolbar: false,\n      headerStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      cellStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)'\n      },\n      actionsCellStyle: {\n        color: 'rgb(60, 141, 188)',\n        textAlign: 'center'\n      }\n    };\n    this.actions = [{\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.Edit, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 23\n        }\n      }),\n      tooltip: 'Chỉnh sửa thông tin',\n      onClick: (event, rowData) => {\n        this.setState({\n          modalType: 'editController'\n        });\n        let sendData = {\n          ctlData: rowData,\n          callback: this.onModelEditControllerCall,\n          callbackFail: this.onModalCallFail\n        };\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n      }\n    }];\n\n    this.onModelEditControllerCall = () => {\n      this.setState({\n        modalType: 'successEditController'\n      });\n      let sendData = {\n        callback: this.onModalCallSuccess\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onModalCallFail = () => {\n      this.setState({\n        modalType: 'failEditController'\n      });\n      this.modalRef.current && this.modalRef.current.onModalShow();\n    };\n\n    this.onModalCallSuccess = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.onChangeBLevel = value => {\n      this.LvIdInput = this.DictLvId[value];\n    };\n\n    this.onChangeBuild = value => {\n      this.BIdInput = this.DictBId[value];\n    };\n\n    this.onChangeImeiInpput = value => {\n      this.ImeiInput = value;\n    };\n\n    this.onChangeMACInput = value => {\n      this.MACInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.onMouseOverHeader = () => {\n      this.setState({\n        headerColor: 'red'\n      });\n    };\n\n    this.onMouseLeaveHeader = () => {\n      this.setState({\n        headerColor: 'black'\n      });\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        Controller.getController(this.BIdInput, this.LvIdInput, this.ImeiInput, this.MACInput, '', query.page + 1).then(value => {\n          if (value) {\n            resolve({\n              data: value.items,\n              page: value.currentPage - 1,\n              totalCount: value.total\n            });\n          } else {\n            resolve({\n              data: [],\n              page: 0,\n              totalCount: 0\n            });\n          }\n        });\n      });\n    };\n\n    this.onDeleteTableRow = oldData => {\n      return new Promise((resolve, reject) => {\n        Controller.removeController(oldData.cId).then(res => {\n          if (res) {\n            if (res.code && res.code === ResponseCode.remove_ctl_success) {\n              resolve();\n            }\n          }\n\n          resolve();\n        });\n      });\n    };\n\n    this.state = {\n      headerColor: 'black',\n      modalType: ''\n    };\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    let headerStyle = {\n      color: this.state.headerColor\n    };\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      type: this.state.modalType,\n      ref: this.modalRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      onMouseOver: this.onMouseOverHeader,\n      onMouseLeave: this.onMouseLeaveHeader,\n      style: headerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 21\n      }\n    }, \" Qu\\u1EA3n l\\xFD thi\\u1EBFt b\\u1ECB \\u0111i\\u1EC1u khi\\u1EC3n\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch thi\\u1EBFt b\\u1ECB \\u0111i\\u1EC1u khi\\u1EC3n hi\\u1EC7n t\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-control\",\n      style: {\n        width: '85%',\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 295,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thiết bị',\n      onChange: this.onChangeImeiInpput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Địa chỉ MAC',\n      onChange: this.onChangeMACInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      columns: this.columnsTable,\n      options: this.optionsTable,\n      icons: TableIcons,\n      data: this.getDataFromServer,\n      actions: this.actions,\n      editable: {\n        //onRowUpdate: this.onEditTableRow,\n        onRowDelete: this.onDeleteTableRow\n      },\n      localization: this.localizations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\nconst styles = {\n  mainContainer: {\n    margin: '30px 10px 40px 20px'\n  },\n  searchContainer: {\n    display: 'flex'\n  },\n  searchInput: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingRight: 10\n  }\n};","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/controllermanagement/controllermanagement.js"],"names":["React","Fragment","MaterialTable","TableIcons","Input","Button","Building","Level","Controller","Combobox","Modal","ResponseCode","ControllerManagemeent","Component","constructor","props","DictBName","Build","DictBId","BIdInput","DictLvName","DictLvId","LvIdInput","ImeiInput","MACInput","columnsTable","title","field","render","rowDate","lLv","localizations","pagination","nextTooltip","previousTooltip","firstTooltip","lastTooltip","body","editRow","deleteText","optionsTable","search","pageSize","pageSizeOptions","showTitle","actionsColumnIndex","toolbar","headerStyle","border","fontWeight","textAlign","cellStyle","actionsCellStyle","color","actions","icon","tooltip","onClick","event","rowData","setState","modalType","sendData","ctlData","callback","onModelEditControllerCall","callbackFail","onModalCallFail","modalRef","current","onModalShow","onModalCallSuccess","tableRef","onQueryChange","onChangeBLevel","value","onChangeBuild","onChangeImeiInpput","onChangeMACInput","onSearchClick","onMouseOverHeader","headerColor","onMouseLeaveHeader","getDataFromServer","query","Promise","resolve","reject","getController","page","then","data","items","currentPage","totalCount","total","onDeleteTableRow","oldData","removeController","cId","res","code","remove_ctl_success","state","createRef","componentDidMount","getBuilding","length","map","item","index","bId","bName","getLevel","bLv","lId","styles","mainContainer","width","display","searchInput","onRowDelete","margin","searchContainer","flex","justifyContent","alignItems","paddingRight"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\nimport Building from '../../../core/building';\r\nimport Level from '../../../core/level';\r\nimport Controller from '../../../core/controller';\r\nimport Combobox from '../../common/combobox';\r\nimport Modal  from '../../common/modal';\r\nimport ResponseCode from '../../../staticresources/responsecode';\r\n\r\nexport default class ControllerManagemeent extends React.Component {\r\n\r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    BIdInput = 0; \r\n\r\n    DictLvName = {};\r\n    DictLvId ={};\r\n    Level =[];\r\n    LvIdInput = 0;\r\n\r\n    ImeiInput = '';\r\n    MACInput = '';\r\n\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            headerColor: 'black',\r\n            modalType: '',\r\n\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n       \r\n    }\r\n\r\n    columnsTable = [\r\n        {\r\n            title: 'Tòa nhà',\r\n            field: 'bName'\r\n        },\r\n        {\r\n            title: 'Tầng',\r\n            field: 'lLv', \r\n            render: rowDate => {\r\n                return(\r\n                    <span>\r\n                        Tầng {rowDate.lLv}\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Imei',\r\n            field: 'imei',\r\n        },\r\n        {\r\n            title: 'Địa chỉ MAC',\r\n            field: 'mac',\r\n        },\r\n        {\r\n            title: 'Khu vực',\r\n            field: 'zone',\r\n        },\r\n        {\r\n            title: 'Thời điểm phản hồi cuối cùng',\r\n            field: 'health',\r\n        },\r\n        {\r\n            title: 'Phiên bản Firmware',\r\n            field: '',\r\n        },\r\n        \r\n    ]\r\n\r\n    localizations = {\r\n        pagination: {\r\n            nextTooltip: 'Trang kế',\r\n            previousTooltip: 'Trang trước',\r\n            firstTooltip: 'Trang đầu',\r\n            lastTooltip: 'Trang cuối',\r\n        },\r\n        body: {\r\n            editRow: {\r\n                deleteText: 'Bạn có chắc chắn muốn xoá thiết bị điều khiển này khỏi hệ thống? Các thông tin về tủ do thiết bị này quản lý cũng sẽ được xoá khỏi hệ thống nếu bạn chọn đồng ý?'\r\n            }\r\n        }\r\n    }\r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        showTitle: false,\r\n        actionsColumnIndex: -1,\r\n        toolbar: false,\r\n        headerStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)' ,\r\n            fontWeight: 'bold',\r\n            textAlign: 'center', \r\n     \r\n          },\r\n        cellStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)'\r\n        },\r\n        actionsCellStyle: {\r\n            color: 'rgb(60, 141, 188)',\r\n            textAlign: 'center',\r\n        },\r\n        \r\n    }\r\n\r\n    actions = [\r\n        {\r\n          icon: () => <TableIcons.Edit/>,\r\n          tooltip: 'Chỉnh sửa thông tin',\r\n          onClick: (event, rowData) => {\r\n            this.setState({\r\n\r\n                modalType: 'editController',\r\n            });\r\n\r\n            let sendData = {\r\n                ctlData: rowData,\r\n                callback: this.onModelEditControllerCall,\r\n                callbackFail: this.onModalCallFail,\r\n            }\r\n            this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n        }        },\r\n        \r\n    ]\r\n\r\n    onModelEditControllerCall = () => {\r\n        this.setState({\r\n            modalType: 'successEditController',\r\n        });\r\n        let sendData = {\r\n            callback: this.onModalCallSuccess,\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    } \r\n\r\n    onModalCallFail =() => {\r\n        this.setState({\r\n            modalType: 'failEditController',\r\n        });\r\n        this.modalRef.current && this.modalRef.current.onModalShow();\r\n\r\n    }\r\n\r\n    onModalCallSuccess = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.LvIdInput = this.DictLvId[value];\r\n    } \r\n\r\n    onChangeBuild = (value) => {\r\n        this.BIdInput = this.DictBId[value];\r\n    }\r\n\r\n    onChangeImeiInpput = (value) => {\r\n        this.ImeiInput = value;\r\n    }\r\n\r\n    onChangeMACInput  = (value) => {\r\n        this.MACInput = value;\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    onMouseOverHeader = () => {\r\n        this.setState({\r\n            headerColor: 'red'\r\n        })\r\n    }\r\n\r\n    onMouseLeaveHeader = () => {\r\n        this.setState({\r\n            headerColor: 'black'\r\n        })\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            Controller.getController(this.BIdInput, this.LvIdInput, this.ImeiInput, this.MACInput,'', query.page +1)\r\n            .then(value => {\r\n                if(value){\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                     })\r\n                }\r\n                else {\r\n                    resolve({\r\n                        data: [],\r\n                        page: 0,\r\n                        totalCount:0,\r\n                     })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Building.getBuilding()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item,index) => {\r\n                            this.DictBName[item.bId] = item.bName;\r\n                            this.DictBId[item.bName] = item.bId;\r\n                            this.Build[index] = item.bName; \r\n                        })\r\n                    }\r\n                } \r\n        })\r\n\r\n        Level.getLevel()\r\n        .then(value => {\r\n            if(value){\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLv = ' Tòa ' + item.bName + ' - Tầng '  + item.lLv;\r\n                        this.DictLvName[item.lId] = bLv;\r\n                        this.DictLvId[bLv] = item.lId;\r\n                        this.Level[index] = bLv ;\r\n                    }) \r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    onDeleteTableRow = (oldData) => {\r\n        return new Promise((resolve, reject) => {\r\n            Controller.removeController(oldData.cId)\r\n                .then(res => {\r\n                    if (res) {\r\n                        if (res.code && res.code === ResponseCode.remove_ctl_success) {\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    resolve();\r\n                })\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let headerStyle = {\r\n            color: this.state.headerColor,\r\n        }\r\n\r\n        return(\r\n            <Fragment>\r\n                <Modal type={this.state.modalType}\r\n                    ref={this.modalRef}/>\r\n                <div style={styles.mainContainer}>\r\n                    <h2 onMouseOver={this.onMouseOverHeader}\r\n                        onMouseLeave={this.onMouseLeaveHeader}\r\n                        style={headerStyle}> Quản lý thiết bị điều khiển\r\n                    </h2>\r\n                </div>\r\n                \r\n                <div  className =\"around\">\r\n                    <div className= \"title-style\">\r\n                        <span>\r\n                            Danh sách thiết bị điều khiển hiện tại\r\n                        </span>\r\n                    </div>\r\n                    <div   className=\"div-control\" style={{width: '85%', display: 'flex'}}>\r\n                        <div style={styles.searchInput}>\r\n                            <Combobox\r\n                                title={'Tòa nhà'} \r\n                                data = {this.Build}\r\n                                onChange = {this.onChangeBuild}\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Combobox\r\n                                title={'Tầng'}\r\n                                data = {this.Level}\r\n                                onChange = {this.onChangeBLevel}\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title= {'Mã thiết bị'}\r\n                                onChange = {this.onChangeImeiInpput}\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title ={'Địa chỉ MAC'}\r\n                                onChange = {this.onChangeMACInput}\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Button\r\n                                title={'Tìm kiếm'}\r\n                                onClick= {this.onSearchClick}\r\n                            />\r\n                        </div>\r\n\r\n                    </div>\r\n                    <MaterialTable\r\n                    tableRef = {this.tableRef}\r\n                    columns = {this.columnsTable}\r\n                    options={this.optionsTable}\r\n                    icons = {TableIcons}\r\n                    data = {this.getDataFromServer}\r\n                    actions={this.actions}\r\n                    editable={{\r\n                        //onRowUpdate: this.onEditTableRow,\r\n                        onRowDelete: this.onDeleteTableRow,\r\n                    }}\r\n                    localization={this.localizations}\r\n\r\n                    />\r\n                </div>\r\n\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    mainContainer: {\r\n        margin: '30px 10px 40px 20px',\r\n\r\n    },\r\n\r\n    searchContainer: {\r\n        display: 'flex'\r\n    },\r\n\r\n    searchInput: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingRight: 10,\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}