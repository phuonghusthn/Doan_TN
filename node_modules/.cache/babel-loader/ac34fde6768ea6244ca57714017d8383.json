{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Buildings {\n  constructor() {\n    this.getBuilding = async (bId = 0, name = '', addr = '', page = 0) => {\n      try {\n        let url = ApiUri.building.getBuilding.uri;\n        url += '?token=' + localStorage.getItem('crfs');\n        url += '&name=' + name;\n        url += '&addr=' + addr;\n        url += '&bId=' + bId;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.building.getBuilding.method,\n          headers: {\n            'Authorization': `Bearer ${localStorage.getItem('token')}`,\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': '*'\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Building = new Buildings();\nexport default Building;","map":{"version":3,"sources":["E:/DATN_2020/src/core/building.js"],"names":["ApiUri","server","Buildings","getBuilding","bId","name","addr","page","url","building","uri","localStorage","getItem","fetch","method","headers","then","response","json","catch","console","error","Building"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;;AAEA,MAAMC,SAAN,CAAgB;AAAA;AAAA,SACZC,WADY,GACE,OAAOC,GAAG,GAAG,CAAb,EAAgBC,IAAI,GAAG,EAAvB,EAA2BC,IAAI,GAAG,EAAlC,EAAsCC,IAAI,GAAG,CAA7C,KAAmD;AAC7D,UAAI;AACA,YAAIC,GAAG,GAAGR,MAAM,CAACS,QAAP,CAAgBN,WAAhB,CAA4BO,GAAtC;AACAF,QAAAA,GAAG,IAAI,YAAYG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACAJ,QAAAA,GAAG,IAAI,WAAWH,IAAlB;AACAG,QAAAA,GAAG,IAAI,WAAWF,IAAlB;AACAE,QAAAA,GAAG,IAAI,UAAUJ,GAAjB;AACAI,QAAAA,GAAG,IAAI,WAAWD,IAAlB;AAEA,eAAO,MAAMM,KAAK,CAACL,GAAD,EAAM;AACpBM,UAAAA,MAAM,EAAEd,MAAM,CAACS,QAAP,CAAgBN,WAAhB,CAA4BW,MADhB;AAEpBC,UAAAA,OAAO,EAAE;AACL,6BAAkB,UAASJ,YAAY,CAACC,OAAb,CAAqB,OAArB,CAA8B,EADpD;AAEL,2CAA+B,GAF1B;AAGL,4CAAgC;AAH3B;AAFW,SAAN,CAAL,CAQRI,IARQ,CAQHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EART,EASRC,KATQ,CASFC,OAAO,CAACC,KATN,CAAb;AAUH,OAlBD,CAmBA,MAAK,CAAG;AACX,KAtBW;AAAA;;AAAA;;AAyBhB,IAAIC,QAAQ,GAAG,IAAIpB,SAAJ,EAAf;AACA,eAAeoB,QAAf","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Buildings {\r\n    getBuilding = async (bId = 0, name = '', addr = '', page = 0) => {\r\n        try {\r\n            let url = ApiUri.building.getBuilding.uri;\r\n            url += '?token=' + localStorage.getItem('crfs');\r\n            url += '&name=' + name;\r\n            url += '&addr=' + addr;\r\n            url += '&bId=' + bId;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.building.getBuilding.method,\r\n                headers: {\r\n                    'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': '*',\r\n                },\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n    }\r\n}\r\n\r\nvar Building = new Buildings();\r\nexport default Building;"]},"metadata":{},"sourceType":"module"}