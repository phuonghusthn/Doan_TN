{"ast":null,"code":"var _jsxFileName = \"F:\\\\Doan_TN\\\\src\\\\components\\\\content\\\\tagmanagement\\\\tagmanagement.js\";\nimport React, { Fragment } from 'react';\nimport User from '../../../core/user';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Department from '../../../core/department';\nimport Modal from '../../common/modal';\nimport { blue } from '@material-ui/core/colors';\nexport default class TagManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.isPIN = 0;\n    this.isTag = 0;\n    this.NameInput = '';\n    this.IdNSInput = '';\n    this.EmailInput = '';\n    this.RcodeInput = '';\n    this.dictDev = {};\n    this.dictDid = {};\n    this.dIdInput = 0;\n    this.Dep = [];\n    this.columns = [{\n      title: 'Họ và tên',\n      field: 'name'\n    }, {\n      title: 'ID nhân sự',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        if (rowData.dId % 2 === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'blue'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 25\n            }\n          }, this.dictDev[rowData.dId]);\n        }\n      }\n    }, {\n      title: 'Email cá nhân',\n      field: 'email'\n    }, {\n      title: 'Tình trạng PINCode',\n      field: 'pCode',\n      render: rowData => {\n        if (rowData.pCode === 0) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 26\n            }\n          }, \"Ch\\u01B0a c\\xF3\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            syle: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 26\n            }\n          }, \"\\u0110\\xE3 c\\xF3\");\n        }\n      }\n    }, {\n      title: 'Thẻ từ đang sử dụng',\n      field: 'rCode'\n    }];\n    this.localizations = {\n      pagination: {\n        nextTooltip: 'Trang kế',\n        previousTooltip: 'Trang trước',\n        firstTooltip: 'Trang đầu',\n        lastTooltip: 'Trang cuối'\n      }\n    };\n    this.optionsTable = {\n      pageSize: 20,\n      pageSizeOptions: [20],\n      search: false,\n      showTitle: false,\n      actionsColumnIndex: -1,\n      toolbar: false,\n      headerStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      cellStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)'\n      },\n      actionsCellStyle: {\n        color: 'rgb(60, 141, 188)',\n        textAlign: 'center'\n      }\n    };\n    this.actions = [{\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.Edit, {\n        style: {\n          color: blue[500]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }\n      }),\n      tooltip: 'Chỉnh sửa thông tin thẻ từ',\n      onClick: (event, rowData) => {\n        this.setState({\n          modalType: 'editTagEmployee'\n        });\n        let sendData = {\n          empData: rowData,\n          callback: this.onModalCallme\n        };\n        console.log(this.state.modalType);\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n      }\n    }, rowData => ({\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.Email, {\n        style: {\n          color: blue[500]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 25\n        }\n      }),\n      tooltip: 'Gửi PINCode',\n      onClick: (event, rowData) => {\n        this.setState({\n          modalType: 'sendPin'\n        });\n        let sendData = {\n          empData: rowData,\n          callback: this.onModelSendPinCall,\n          callbackFail: this.onFailSendPinCall\n        };\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n      }\n    }), rowData => ({\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.BlurOn, {\n        style: {\n          color: blue[500]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }),\n      tooltip: 'Tạo mới PINCode',\n      onClick: (event, rowData) => {\n        this.setState({\n          modalType: 'mapPinCode'\n        });\n        let sendData = {\n          empData: rowData,\n          callback: this.onModelMapPinCall //callbackFail: this.onFailSendPinCall\n\n        };\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n      }\n    }), rowData => ({\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.BlurOff, {\n        style: {\n          color: blue[500]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 23\n        }\n      }),\n      tooltip: 'Xóa PINCode',\n      onClick: (event, rowData) => {\n        this.setState({\n          modalType: 'unmapPinCode'\n        });\n        let sendData = {\n          empData: rowData,\n          callback: this.onModalUnmapPinCall\n        };\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n      }\n    }), rowData => ({\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.LabelOff, {\n        style: {\n          color: blue[500]\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 25\n        }\n      }),\n      tooltip: 'Xóa quyền sử dụng thẻ từ',\n      onClick: (event, rowData) => {\n        this.setState({\n          modalType: 'unmaptag'\n        });\n        let sendData = {\n          empData: rowData,\n          callback: this.onModalUnmapTagCall\n        };\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n      }\n    })];\n\n    this.onModalCallme = () => {\n      this.setState({\n        modalType: 'successEditTagEmployee'\n      });\n      let sendData = {\n        callback: this.onModalCallSuccess\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onModelSendPinCall = () => {\n      this.setState({\n        modalType: 'successSendPin'\n      });\n      let sendData = {\n        callback: this.onModalCallSuccess\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onFailSendPinCall = () => {\n      this.setState({\n        modalType: 'failSendPin'\n      });\n      this.modalRef.current && this.modalRef.current.onModalShow();\n    };\n\n    this.onModalCallSuccess = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.onModelMapPinCall = () => {\n      this.setState({\n        modalType: 'successMapPin'\n      });\n      let sendData = {\n        callback: this.onModalCallSuccess\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onModalUnmapPinCall = () => {\n      this.setState({\n        modalType: 'successUnmapPin'\n      });\n      let sendData = {\n        callback: this.onModalCallSuccess\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onModalUnmapTagCall = () => {\n      this.setState({\n        modalType: 'successUnmapTag'\n      });\n      let sendData = {\n        callback: this.onModalCallSuccess\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onChangeIsPIN = value => {\n      if (value === 'Đã có PINCode') {\n        this.isPIN = 2;\n      } else {\n        this.isPIN = 1;\n      }\n    };\n\n    this.onChangeIsTag = value => {\n      if (value === 'Chưa có thẻ') {\n        this.isTag = 1;\n      } else {\n        this.isTag = 2;\n      }\n    };\n\n    this.onChangeDep = value => {\n      this.dIdInput = this.dictDid[value];\n    };\n\n    this.onNameChange = value => {\n      this.NameInput = value;\n    };\n\n    this.onIdNSChange = value => {\n      this.IdNSInput = value;\n    };\n\n    this.onEmailChange = value => {\n      this.EmailInput = value;\n    };\n\n    this.onRcodeChange = value => {\n      this.RcodeInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.getDataFromUser = query => {\n      return new Promise((resolve, reject) => {\n        User.getUser(this.dIdInput, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, 0, query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.onMouseOverHeader = () => {\n      this.setState({\n        headerColor: 'red'\n      });\n    };\n\n    this.onMouseLeaveHeader = () => {\n      this.setState({\n        headerColor: 'black'\n      });\n    };\n\n    this.state = {\n      modalType: '',\n      headerColor: 'black'\n    };\n    this.tableRef = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // console.log('componentDidMount')\n    // console.log(this.state.modalType);\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.dictDev[item.dId] = item.dName;\n            this.Dep[index] = item.dName;\n            this.dictDid[item.dName] = item.dId;\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      type: this.state.modalType,\n      ref: this.modalRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '30px 10px 40px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      onMouseOver: this.onMouseOverHeader,\n      onMouseLeave: this.onMouseLeaveHeader,\n      style: this.state.headerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 21\n      }\n    }, \" Qu\\u1EA3n l\\xFD s\\u1EED d\\u1EE5ng PINCode v\\xE0 th\\u1EBB t\\u1EEB\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onNameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onIdNSChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      data: this.Dep,\n      onChange: this.onChangeDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Email',\n      onChange: this.onEmailChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Mã thẻ từ',\n      onChange: this.onRcodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng sử dụng thẻ',\n      data: ['Chưa có thẻ', 'Đã có thẻ'],\n      onChange: this.onChangeIsTag,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-control\",\n      style: {\n        width: '33%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 422,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 423,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng PINCode',\n      data: ['Đã có PINCode', 'Chưa có PINCode'],\n      onChange: this.onChangeIsPIN,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      icons: TableIcons,\n      columns: this.columns,\n      options: this.optionsTable,\n      data: this.getDataFromUser,\n      actions: this.actions,\n      localization: this.localizations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}\nconst styles = {\n  searchInput: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingRight: 10\n  }\n};","map":{"version":3,"sources":["F:/Doan_TN/src/components/content/tagmanagement/tagmanagement.js"],"names":["React","Fragment","User","MaterialTable","TableIcons","Input","Button","Combobox","Department","Modal","blue","TagManagement","Component","constructor","props","isPIN","isTag","NameInput","IdNSInput","EmailInput","RcodeInput","dictDev","dictDid","dIdInput","Dep","columns","title","field","render","rowData","dId","color","pCode","localizations","pagination","nextTooltip","previousTooltip","firstTooltip","lastTooltip","optionsTable","pageSize","pageSizeOptions","search","showTitle","actionsColumnIndex","toolbar","headerStyle","border","fontWeight","textAlign","cellStyle","actionsCellStyle","actions","icon","tooltip","onClick","event","setState","modalType","sendData","empData","callback","onModalCallme","console","log","state","modalRef","current","onModalShow","onModelSendPinCall","callbackFail","onFailSendPinCall","onModelMapPinCall","onModalUnmapPinCall","onModalUnmapTagCall","onModalCallSuccess","tableRef","onQueryChange","onChangeIsPIN","value","onChangeIsTag","onChangeDep","onNameChange","onIdNSChange","onEmailChange","onRcodeChange","onSearchClick","getDataFromUser","query","Promise","resolve","reject","getUser","page","then","data","items","currentPage","totalCount","total","onMouseOverHeader","headerColor","onMouseLeaveHeader","createRef","componentDidMount","getDepartment","length","map","item","index","dName","isUpdateView","margin","display","styles","searchInput","width","flex","justifyContent","alignItems","paddingRight"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport User from '../../../core/user';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\nimport Combobox from '../../common/combobox'\r\nimport Department from '../../../core/department'\r\nimport Modal  from '../../common/modal'\r\nimport {blue} from '@material-ui/core/colors'\r\n \r\n\r\nexport default class TagManagement extends React.Component {\r\n    isPIN = 0;\r\n    isTag = 0;\r\n    NameInput = '';\r\n    IdNSInput = '';\r\n    EmailInput = '';\r\n    RcodeInput = '';\r\n    dictDev = {};\r\n    dictDid = {};\r\n    dIdInput = 0;\r\n    Dep = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            modalType: '',\r\n            headerColor: 'black',\r\n        };\r\n        this.tableRef = React.createRef();\r\n        this.modalRef = React.createRef();\r\n\r\n    }\r\n\r\n    columns = [\r\n        { \r\n            title: 'Họ và tên', \r\n            field: 'name'\r\n        },\r\n        { \r\n            title: 'ID nhân sự', \r\n            field: 'eCode' \r\n        },\r\n        {\r\n            title: 'Bộ phận làm việc', \r\n            field: 'dId', \r\n            render: rowData =>{\r\n                if(rowData.dId % 2 === 0 )\r\n                {\r\n                    return (\r\n                        <span style={{color: 'red'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n                else {\r\n                    return (\r\n                        <span style={{color: 'blue'}}> \r\n                            {this.dictDev[rowData.dId]}\r\n                        </span>)\r\n                }\r\n            }\r\n        },\r\n        {\r\n            title: 'Email cá nhân', \r\n            field: 'email'\r\n        },\r\n        { \r\n            title: 'Tình trạng PINCode',\r\n             field: 'pCode',\r\n             render: rowData => \r\n             {\r\n                 if(rowData.pCode === 0) {\r\n                     return(\r\n                         <span syle={{color: 'red'}}>\r\n                             Chưa có\r\n                         </span>\r\n                     )\r\n                 }\r\n                 else {\r\n                     return(\r\n                         <span syle={{color: 'green'}}>\r\n                             Đã có\r\n                         </span>\r\n                     )\r\n                 }\r\n             } \r\n        },\r\n        { \r\n            title: 'Thẻ từ đang sử dụng', \r\n            field: 'rCode' \r\n        },\r\n        \r\n    ] \r\n\r\n    localizations = {\r\n        pagination: {\r\n            nextTooltip: 'Trang kế',\r\n            previousTooltip: 'Trang trước',\r\n            firstTooltip: 'Trang đầu',\r\n            lastTooltip: 'Trang cuối',\r\n        },\r\n    }\r\n\r\n    optionsTable = {\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        search: false,\r\n        showTitle: false,\r\n        actionsColumnIndex: -1,\r\n        toolbar: false,\r\n        headerStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)',\r\n            fontWeight: 'bold',\r\n            textAlign: 'center',  \r\n          },\r\n        cellStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)'\r\n        },\r\n        actionsCellStyle: {\r\n            color: 'rgb(60, 141, 188)',\r\n            textAlign: 'center',\r\n        },\r\n    }\r\n\r\n    actions = [\r\n        {\r\n          icon: () => <TableIcons.Edit style={{color: blue[500]}}/>,\r\n          tooltip: 'Chỉnh sửa thông tin thẻ từ',\r\n          onClick: (event, rowData) => {\r\n                this.setState({\r\n                    modalType: 'editTagEmployee',\r\n                });\r\n                let sendData = {\r\n                    empData: rowData,\r\n                    callback: this.onModalCallme\r\n                }\r\n                console.log(this.state.modalType);\r\n                this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n            },\r\n        },\r\n        rowData => ({\r\n            icon: () => <TableIcons.Email style={{color: blue[500]}}/>,\r\n            tooltip: 'Gửi PINCode',\r\n            onClick: (event, rowData) => {\r\n                this.setState({\r\n\r\n                    modalType: 'sendPin',\r\n                });\r\n\r\n                let sendData = {\r\n                    empData: rowData,\r\n                    callback: this.onModelSendPinCall,\r\n                    callbackFail: this.onFailSendPinCall\r\n                }\r\n                this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n            }\r\n        }),\r\n        rowData => ({\r\n            icon: () => <TableIcons.BlurOn style={{color: blue[500]}}/>,\r\n            tooltip: 'Tạo mới PINCode',\r\n            onClick: (event, rowData) => {\r\n                this.setState({\r\n                    modalType: 'mapPinCode',\r\n                });\r\n\r\n                let sendData = {\r\n                    empData: rowData,\r\n                    callback: this.onModelMapPinCall,\r\n                    //callbackFail: this.onFailSendPinCall\r\n                }\r\n                this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n            }\r\n            \r\n        }),\r\n        rowData => ({\r\n          icon: () => <TableIcons.BlurOff style={{color: blue[500]}}/>,\r\n          tooltip: 'Xóa PINCode',\r\n          onClick: (event, rowData) => {\r\n                this.setState({\r\n                  modalType: 'unmapPinCode',\r\n                });\r\n\r\n                let sendData = {\r\n                    empData: rowData,\r\n                    callback: this.onModalUnmapPinCall\r\n                }\r\n                this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n          },\r\n        }),\r\n        rowData => ({\r\n            icon: () => <TableIcons.LabelOff style={{color: blue[500]}}/>,\r\n            tooltip: 'Xóa quyền sử dụng thẻ từ',\r\n            onClick: (event, rowData) =>{\r\n                this.setState({\r\n                    modalType: 'unmaptag',\r\n                })\r\n\r\n                let sendData = {\r\n                    empData: rowData,\r\n                    callback: this.onModalUnmapTagCall\r\n                }\r\n                this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n            },\r\n          })\r\n    ]\r\n\r\n    onModalCallme = () => {\r\n        this.setState({\r\n            modalType: 'successEditTagEmployee',\r\n        });\r\n        let sendData = {\r\n            callback: this.onModalCallSuccess\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    onModelSendPinCall = () => {\r\n        this.setState({\r\n            modalType: 'successSendPin',\r\n        });\r\n        let sendData = {\r\n            callback: this.onModalCallSuccess\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    onFailSendPinCall =() => {\r\n        this.setState({\r\n            modalType: 'failSendPin',\r\n        });\r\n        \r\n        this.modalRef.current && this.modalRef.current.onModalShow();\r\n\r\n    }\r\n\r\n    onModalCallSuccess = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    onModelMapPinCall = () => {\r\n        this.setState({\r\n            modalType: 'successMapPin',\r\n        });\r\n        let sendData = {\r\n            callback: this.onModalCallSuccess\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    onModalUnmapPinCall = () => {\r\n        this.setState({\r\n            modalType: 'successUnmapPin',\r\n        })\r\n        let sendData = {\r\n            callback: this.onModalCallSuccess\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    onModalUnmapTagCall =() => {\r\n        this.setState({\r\n            modalType: 'successUnmapTag',\r\n        })\r\n        let sendData = {\r\n            callback: this.onModalCallSuccess\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    onChangeIsPIN = (value) => {\r\n        if (value === 'Đã có PINCode') {\r\n            this.isPIN = 2;\r\n        }\r\n        else {\r\n            this.isPIN = 1;\r\n        }\r\n    }\r\n\r\n    onChangeIsTag = (value) => {\r\n        if (value === 'Chưa có thẻ') {\r\n            this.isTag= 1;\r\n        }\r\n        else {\r\n            this.isTag = 2;\r\n        }\r\n    } \r\n\r\n    onChangeDep = (value) => {\r\n        this.dIdInput = this.dictDid[value];\r\n    }  \r\n\r\n    onNameChange = (value) => {\r\n        this.NameInput = value;\r\n    }\r\n\r\n    onIdNSChange = (value) => {\r\n        this.IdNSInput = value;\r\n    }\r\n\r\n    onEmailChange = (value) => {\r\n        this.EmailInput = value;\r\n    }\r\n\r\n    onRcodeChange = (value) => {\r\n        this.RcodeInput = value;\r\n    }\r\n   \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }   \r\n\r\n\r\n    getDataFromUser = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            User.getUser(this.dIdInput, this.NameInput, this.IdNSInput, this.EmailInput, this.RcodeInput, this.isTag, this.isPIN, 0, query.page + 1)\r\n            .then(value => {\r\n                resolve({\r\n                    data: value.items,\r\n                    page: value.currentPage - 1,\r\n                    totalCount: value.total,\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('componentDidMount')\r\n        // console.log(this.state.modalType);\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            this.dictDev[item.dId] = item.dName;\r\n                            this.Dep[index] = item.dName;\r\n                            this.dictDid[item.dName] = item.dId;\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n       })\r\n    }\r\n\r\n    onMouseOverHeader = () => {\r\n        this.setState({\r\n            headerColor: 'red'\r\n        })\r\n    }\r\n\r\n    onMouseLeaveHeader = () => {\r\n        this.setState({\r\n            headerColor: 'black'\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <Fragment>\r\n                <Modal type={this.state.modalType}\r\n                    ref={this.modalRef}/>\r\n                <div style ={{margin: '30px 10px 40px 20px'}}>\r\n                    <h2 onMouseOver={this.onMouseOverHeader}\r\n                        onMouseLeave={this.onMouseLeaveHeader}\r\n                        style={this.state.headerStyle}> Quản lý sử dụng PINCode và thẻ từ\r\n                    </h2>\r\n                </div>\r\n                <div className =\"around\">\r\n                    <div className= \"title-style\">\r\n                        <span> \r\n                            Danh sách người dùng hiện tại \r\n                        </span>\r\n                    </div>\r\n                    \r\n                    <div style={{display: 'flex' }}>\r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title={'Tên nhân viên'}\r\n                                onChange={this.onNameChange} \r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title={'ID nhân sự'} \r\n                                onChange={this.onIdNSChange} \r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Combobox\r\n                            title={'Bộ phận làm việc'} \r\n                            data = {this.Dep}\r\n                            onChange = {this.onChangeDep}\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title={'Email'} \r\n                                onChange={this.onEmailChange} \r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title={'Mã thẻ từ'} \r\n                                onChange = {this.onRcodeChange\r\n                            }\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Combobox \r\n                                title={'Tình trạng sử dụng thẻ'}\r\n                                data= {[\r\n                                    'Chưa có thẻ',\r\n                                    'Đã có thẻ',\r\n                                ]}\r\n                                onChange = {this.onChangeIsTag}\r\n                            /> \r\n                        </div>                        \r\n                    </div>\r\n                    <div className=\"div-control\" style={{width: '33%'}}>\r\n                        <div style={styles.searchInput}>\r\n                            <Combobox \r\n                                title={'Tình trạng PINCode'}\r\n                                data = { [\r\n                                        'Đã có PINCode',\r\n                                        'Chưa có PINCode',\r\n                                    ] }\r\n                                onChange = {this.onChangeIsPIN}\r\n                            />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                            <Button \r\n                                title={'Tìm kiếm'}\r\n                                onClick={this.onSearchClick}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <MaterialTable\r\n                            tableRef = {this.tableRef}\r\n                            icons = {TableIcons}\r\n                            columns= {this.columns}\r\n                            options = {this.optionsTable}\r\n                            data = {this.getDataFromUser}\r\n                            actions={this.actions}\r\n                            localization={this.localizations}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    searchInput: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingRight: 10,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}