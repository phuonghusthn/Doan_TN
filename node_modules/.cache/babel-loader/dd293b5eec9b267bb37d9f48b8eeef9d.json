{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\departmentmanagement\\\\departmentmanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Department from '../../../core/department';\nimport ResponseCode from '../../../staticresources/responsecode';\nimport Modal from '../../common/modal';\nimport FButton from '../../common/floatbutton';\nimport Add from '@material-ui/icons/Add';\nexport default class DepartmentManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.DepInput = '';\n    this.columnsTable = [{\n      title: 'Tên',\n      field: 'dName'\n    }];\n    this.localizations = {\n      pagination: {\n        nextTooltip: 'Trang kế',\n        previousTooltip: 'Trang trước',\n        lastTooltip: 'Trang cuối',\n        firstTooltip: 'Trang đầu'\n      },\n      body: {\n        editRow: {\n          deleteText: 'Bạn có chắc chắn muốn xoá bộ phận/phòng ban này khỏi hệ thống?'\n        }\n      }\n    };\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20],\n      showTitle: false,\n      actionsColumnIndex: -1,\n      toolbar: false,\n      headerStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)'\n      },\n      cellStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)'\n      },\n      actionsCellStyle: {\n        color: 'rgb(60, 141, 188)',\n        textAlign: 'center'\n      }\n    };\n    this.actions = [{\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.Edit, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }),\n      tooltip: 'Chỉnh sửa thông tin',\n      onClick: (event, rowData) => alert(\"You want Edit \" + rowData.name)\n    }, rowData => ({\n      icon: () => /*#__PURE__*/React.createElement(TableIcons.Delete, {\n        color: \"primary\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }),\n      tooltip: 'Xóa',\n      onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name)\n    })];\n\n    this.onChangeDep = value => {\n      this.DepInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.onMouseOverHeader = () => {\n      this.setState({\n        headerColor: 'red'\n      });\n    };\n\n    this.onMouseLeaveHeader = () => {\n      this.setState({\n        headerColor: 'black'\n      });\n    };\n\n    this.onClickAdd = () => {\n      this.setState({\n        modalType: 'addDepartment'\n      });\n      let sendData = {\n        callback: this.onModalSuccess,\n        callbackfail: this.onModalCallFail\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onModalSuccess = () => {\n      this.setState({\n        modalType: 'successAddDepartment'\n      });\n      let sendData = {\n        callback: this.reloadDataTable,\n        callbackContinue: this.onClickAdd\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.onModalCallFail = () => {\n      this.setState({\n        modalType: 'failAddDepartment'\n      });\n      let sendData = {\n        callbackContinue: this.onClickAdd\n      };\n      this.modalRef.current && this.modalRef.current.onModalShow(sendData);\n    };\n\n    this.reloadDataTable = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        Department.getDepartment(0, this.DepInput, query.page + 1).then(value => {\n          if (value) {\n            resolve({\n              data: value.items,\n              page: value.currentPage - 1,\n              totalCount: value.total\n            });\n          } else {\n            resolve({\n              data: [],\n              page: 0,\n              totalCount: 0\n            });\n          }\n        });\n      });\n    };\n\n    this.onEditTableRow = (newData, oldData) => {\n      console.log(newData);\n      console.log(oldData);\n      return new Promise((resolve, reject) => {\n        Department.editDepartment(oldData.dId, newData.name).then(res => {\n          if (res) {\n            if (res.code && res.code === ResponseCode.modify_dep_success) {\n              resolve();\n            }\n          }\n\n          resolve();\n        });\n      });\n    };\n\n    this.state = {\n      headerColor: 'black',\n      modalType: ''\n    };\n    this.modalRef = React.createRef();\n    this.tableRef = React.createRef();\n  }\n\n  render() {\n    let headerStyle = {\n      color: this.state.headerColor\n    };\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal, {\n      type: this.state.modalType,\n      ref: this.modalRef,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      onMouseOver: this.onMouseOverHeader,\n      onMouseLeave: this.onMouseLeaveHeader,\n      style: headerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 21\n      }\n    }, \" Qu\\u1EA3n l\\xFD b\\u1ED9 ph\\u1EADn / ph\\xF2ng ban\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, \"Qu\\u1EA3n l\\xFD b\\u1ED9 ph\\u1EADn / ph\\xF2ng ban\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.SearchContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: ' Bộ phận/ Phòng ban',\n      onChange: this.onChangeDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 25\n      }\n    }))), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      columns: this.columnsTable,\n      options: this.optionsTable,\n      icons: TableIcons,\n      data: this.getDataFromServer,\n      title: 'Danh sách bộ phận/ Phòng ban ' // actions={this.actions}\n      ,\n      editable: {\n        onRowUpdate: this.onEditTableRow\n      },\n      localization: this.localizations,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(FButton, {\n      title: 'Thêm bộ phận/ phòng ban',\n      icon: /*#__PURE__*/React.createElement(Add, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 24\n        }\n      }),\n      onClick: this.onClickAdd,\n      position: ['auto', 20, 'auto', 80],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nconst styles = {\n  mainContainer: {\n    margin: '30px 10px 40px 20px'\n  },\n  SearchContainer: {\n    display: 'flex',\n    marginBottom: '10px',\n    width: '40%'\n  },\n  searchInput: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingRight: 10\n  }\n};","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/departmentmanagement/departmentmanagement.js"],"names":["React","Fragment","MaterialTable","TableIcons","Input","Button","Department","ResponseCode","Modal","FButton","Add","DepartmentManagement","Component","constructor","props","DepInput","columnsTable","title","field","localizations","pagination","nextTooltip","previousTooltip","lastTooltip","firstTooltip","body","editRow","deleteText","optionsTable","search","pageSize","pageSizeOptions","showTitle","actionsColumnIndex","toolbar","headerStyle","border","cellStyle","actionsCellStyle","color","textAlign","actions","icon","tooltip","onClick","event","rowData","alert","name","onChangeDep","value","onSearchClick","tableRef","current","onQueryChange","onMouseOverHeader","setState","headerColor","onMouseLeaveHeader","onClickAdd","modalType","sendData","callback","onModalSuccess","callbackfail","onModalCallFail","modalRef","onModalShow","reloadDataTable","callbackContinue","getDataFromServer","query","Promise","resolve","reject","getDepartment","page","then","data","items","currentPage","totalCount","total","onEditTableRow","newData","oldData","console","log","editDepartment","dId","res","code","modify_dep_success","state","createRef","render","styles","mainContainer","SearchContainer","searchInput","onRowUpdate","margin","display","marginBottom","width","flex","justifyContent","alignItems","paddingRight"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\nimport Department from '../../../core/department';\r\nimport ResponseCode from '../../../staticresources/responsecode'\r\nimport Modal from '../../common/modal'\r\nimport FButton from '../../common/floatbutton'\r\nimport Add from '@material-ui/icons/Add'\r\n\r\nexport default class DepartmentManagement extends React.Component {\r\n\r\n    DepInput = '';\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            headerColor: 'black',\r\n            modalType: '',\r\n        };\r\n        this.modalRef = React.createRef();\r\n        this.tableRef = React.createRef();\r\n    }\r\n\r\n    columnsTable = [\r\n        {\r\n            title: 'Tên', \r\n            field: 'dName',\r\n        },\r\n    \r\n    ]\r\n\r\n    localizations = {\r\n        pagination: {\r\n            nextTooltip: 'Trang kế',\r\n            previousTooltip: 'Trang trước',\r\n            lastTooltip: 'Trang cuối',\r\n            firstTooltip: 'Trang đầu'\r\n        },\r\n        body: {\r\n            editRow: {\r\n                deleteText: 'Bạn có chắc chắn muốn xoá bộ phận/phòng ban này khỏi hệ thống?',\r\n            }\r\n        }\r\n    }\r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        showTitle: false,\r\n        actionsColumnIndex: -1,\r\n        toolbar: false,\r\n        headerStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)'  \r\n          },\r\n        cellStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)'\r\n        },\r\n        actionsCellStyle: {\r\n            color: 'rgb(60, 141, 188)',\r\n            textAlign: 'center',\r\n        },\r\n\r\n    }\r\n    \r\n    actions = [\r\n        {\r\n            icon: () => <TableIcons.Edit color=\"primary\"/>,\r\n            tooltip: 'Chỉnh sửa thông tin',\r\n            onClick: (event, rowData) => alert(\"You want Edit \" + rowData.name)\r\n        },\r\n        rowData => ({\r\n            icon: () => <TableIcons.Delete color=\"primary\"/>,\r\n            tooltip: 'Xóa',\r\n            onClick: (event, rowData) => alert(\"You want to delete \" + rowData.name),\r\n        })\r\n    ]\r\n\r\n    onChangeDep = (value) => {\r\n        this.DepInput = value;\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    onMouseOverHeader = () => {\r\n        this.setState({\r\n            headerColor: 'red'\r\n        })\r\n    }\r\n\r\n    onMouseLeaveHeader = () => {\r\n        this.setState({\r\n            headerColor: 'black'\r\n        })\r\n    }\r\n\r\n    onClickAdd =() => {\r\n        this.setState({\r\n            modalType: 'addDepartment'\r\n        })\r\n\r\n        let sendData = {\r\n            callback: this.onModalSuccess,\r\n            callbackfail: this.onModalCallFail\r\n        }\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    onModalSuccess = () =>{\r\n        this.setState({\r\n            modalType: 'successAddDepartment',\r\n        })\r\n\r\n        let sendData={\r\n            callback: this.reloadDataTable,\r\n            callbackContinue: this.onClickAdd\r\n        }\r\n\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n\r\n    }\r\n\r\n    onModalCallFail =() => {\r\n        this.setState({\r\n            modalType: 'failAddDepartment',\r\n        })\r\n\r\n        let sendData = {\r\n            callbackContinue: this.onClickAdd\r\n        }\r\n\r\n        this.modalRef.current && this.modalRef.current.onModalShow(sendData);\r\n    }\r\n\r\n    reloadDataTable =() => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            Department.getDepartment(0, this.DepInput, query.page +1)\r\n            .then(value => {\r\n                if(value){\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                     })\r\n                }\r\n                else {\r\n                    resolve({\r\n                        data: [],\r\n                        page: 0,\r\n                        totalCount:0,\r\n                     })\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n    onEditTableRow = (newData, oldData) => {\r\n        console.log(newData);\r\n        console.log(oldData);\r\n        return new Promise((resolve, reject) => {\r\n            Department.editDepartment(oldData.dId, newData.name)\r\n                .then(res => {\r\n                    if (res) {\r\n                        if (res.code && res.code === ResponseCode.modify_dep_success) {\r\n                            resolve();\r\n                        }\r\n                    }\r\n                    resolve();\r\n                })\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let headerStyle = {\r\n            color: this.state.headerColor,\r\n        }\r\n\r\n        return(\r\n            <Fragment>\r\n                <Modal type={this.state.modalType}\r\n                ref={this.modalRef} \r\n                />\r\n                <div style={styles.mainContainer}>\r\n                    <h2 onMouseOver={this.onMouseOverHeader}\r\n                        onMouseLeave={this.onMouseLeaveHeader}\r\n                        style={headerStyle}> Quản lý bộ phận / phòng ban\r\n                    </h2>\r\n\r\n                </div>\r\n                <div className =\"around\">\r\n                    <div className= \"title-style\">\r\n                            <span> \r\n                            Quản lý bộ phận / phòng ban\r\n                            </span>\r\n                    </div>\r\n                    <div  style= {styles.SearchContainer}> \r\n                        <div style={styles.searchInput}>\r\n                            <Input \r\n                                title={' Bộ phận/ Phòng ban'}\r\n                                onChange = {this.onChangeDep} />\r\n                        </div>\r\n                        <div style={styles.searchInput}>\r\n                        <Button \r\n                            title ={'Tìm kiếm'}\r\n                            onClick = {this.onSearchClick}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <MaterialTable\r\n                    tableRef = {this.tableRef}\r\n                    columns = {this.columnsTable}\r\n                    options = {this.optionsTable}\r\n                    icons = {TableIcons}\r\n                    data = {this.getDataFromServer}\r\n                    title ={'Danh sách bộ phận/ Phòng ban '}\r\n                    // actions={this.actions}\r\n                    editable={{\r\n                        onRowUpdate: this.onEditTableRow,\r\n                    }}\r\n                    localization={this.localizations}\r\n                    />\r\n                </div>\r\n                <FButton\r\n                title={'Thêm bộ phận/ phòng ban'}\r\n                icon ={<Add/>}\r\n                onClick={this.onClickAdd}\r\n                position = {['auto', 20, 'auto', 80]}\r\n                />\r\n            </Fragment>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    mainContainer: {\r\n        margin: '30px 10px 40px 20px',\r\n\r\n    },\r\n\r\n    SearchContainer: {\r\n        display: 'flex',\r\n        marginBottom: '10px',\r\n        width: '40%'\r\n    },\r\n\r\n    searchInput: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingRight: 10,\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}