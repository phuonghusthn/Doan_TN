{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\lockermanagement\\\\lockermanagement.js\";\nimport React, { Fragment } from 'react';\nimport TableIcons from '../../common/materialicon';\nimport Locker from '../../../core/locker';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nimport Combobox from '../../common/combobox';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport FButton from '../../common/floatbutton';\nimport Add from '@material-ui/icons/Add';\nexport default class LockerManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.rBuildingIdInput = 0;\n    this.rLevelIdInput = 0;\n    this.rImeiInput = '';\n    this.rLabelInput = '';\n    this.lPage = [];\n    this.bDatas = [];\n    this.lDatas = [];\n    this.cDatas = [];\n    this.array1 = {};\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.DictBLvIName = {};\n    this.DictBLvIId = {};\n    this.Imei = [];\n    this.Test1 = [];\n\n    this.onChangeBLvI = value => {\n      this.setState({\n        BLvIInput: this.DictBLvIId[value]\n      });\n    };\n\n    this.onChangeBLevel = value => {\n      this.setState({\n        LvIdInput: this.DictLvId[value]\n      });\n    };\n\n    this.onChangeBuild = value => {\n      this.setState({\n        BIdInput: this.DictBId[value]\n      });\n    };\n\n    this.onLabelChange = value => {\n      this.setState({\n        LabelInput: value\n      });\n    };\n\n    this.onSearchClick = () => {\n      //     this.tableRef.current && this.tableRef.current.onQueryChange();\n      this.Test1 = [];\n      Locker.getLocker(this.state.BIdInput, this.state.LvIdInput, this.state.BLvIInput, this.state.LabelInput, 0, 0, 1).then(value => {\n        if (value.items !== undefined) {\n          if (value.items.length > 0) {\n            value.items.map((item, index) => {\n              this.Test1[index] = item.lLb;\n              this.array1[item.lRw] = item.lCl;\n            }); //this.array1 = value.items;                \n          }\n\n          this.setState({\n            Lockers: this.Test1\n          });\n        }\n\n        console.log(this.array1);\n      });\n      console.log(this.state.Lockers);\n    };\n\n    this.state = {\n      isShowLock: false,\n      BIdInput: 0,\n      LvIdInput: 0,\n      BLvIInput: '',\n      LabelInput: '',\n      test: true,\n      Lockers: []\n    };\n    this.tableRef = React.createRef();\n  }\n\n  componentDidMount() {\n    //       this.setState({isShowLock: false})\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n          });\n        }\n      }\n    });\n    Controller.getController().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLvImei = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' + item.eLabel;\n            this.DictBLvIName[item.imei] = bLvImei;\n            this.DictBLvIId[bLvImei] = item.imei;\n            this.Imei[index] = bLvImei;\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    // let ManageLocker = null;\n    // if(this.state.Test){\n    //     ManageLocker = this.state.Test.map((item, index)=> {\n    //         return(\n    //         <div className=\"test\">\n    //             {item}\n    //         </div>\n    //         ) \n    //     });\n    // }\n    let cot = 0;\n    let hang = 0;\n    let ManageLocker = [];\n\n    for (cot = 0; cot < 7; cot++) {\n      for (hang = 0; hang < 3; hang++) {\n        this.state.Locker.map((item, index) => {\n          if (item.lCl === cot && item.lRw === hang) {\n            ManageLocker.push( /*#__PURE__*/React.createElement(\"div\", {\n              style: styles.locker,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }\n            }, item));\n            console.log(ManageLocker);\n          } else {\n            ManageLocker.push( /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }\n            }));\n          }\n        });\n      }\n    }\n\n    console.log(ManageLocker); // let lst = [\n    //     <div>\n    //         test\n    //     </div>,\n    //     '2',\n    //     '3',\n    //     '4',\n    //     '5',\n    //     '6'\n    // ]\n    // console.log(lst);\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '30px 10px 40px 20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, \"Qu\\u1EA3n l\\xFD t\\u1EE7\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    }, \"Danh s\\xE1ch c\\xE1c t\\xF2a nh\\xE0 trong h\\u1EC7 th\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"div-control\",\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      data: this.Imei,\n      onChange: this.onChangeBLvI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 25\n      }\n    }, ManageLocker.map(item => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }\n      }, item);\n    })))), /*#__PURE__*/React.createElement(FButton, {\n      title: 'aaaa',\n      icon: /*#__PURE__*/React.createElement(Add, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 27\n        }\n      }),\n      position: ['auto', 20, 'auto', 100],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\nconst styles = {\n  locker: {\n    border: '1px solid white',\n    fontSize: '15px',\n    padding: '10px',\n    textAlign: 'center',\n    minHeight: '120px',\n    background: 'rgb(76, 175, 80)',\n    color: 'white',\n    fontWeight: 600,\n    cursor: 'pointer',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    flexDirection: 'column'\n  },\n  divLock: {\n    gridTemplateColumns: 'repeat(7, 1fr)',\n    gridTemplateRows: 'repeat(3, 1fr)',\n    display: 'grid',\n    marginTop: '30px'\n  }\n};","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/lockermanagement/lockermanagement.js"],"names":["React","Fragment","TableIcons","Locker","Building","Level","Controller","Combobox","Input","Button","FButton","Add","LockerManagement","Component","constructor","props","rBuildingIdInput","rLevelIdInput","rImeiInput","rLabelInput","lPage","bDatas","lDatas","cDatas","array1","DictBName","Build","DictBId","DictLvName","DictLvId","DictBLvIName","DictBLvIId","Imei","Test1","onChangeBLvI","value","setState","BLvIInput","onChangeBLevel","LvIdInput","onChangeBuild","BIdInput","onLabelChange","LabelInput","onSearchClick","getLocker","state","then","items","undefined","length","map","item","index","lLb","lRw","lCl","Lockers","console","log","isShowLock","test","tableRef","createRef","componentDidMount","getBuilding","bId","bName","getLevel","bLv","lLv","lId","getController","bLvImei","sLabel","eLabel","imei","render","cot","hang","ManageLocker","push","styles","locker","margin","display","border","fontSize","padding","textAlign","minHeight","background","color","fontWeight","cursor","justifyContent","alignItems","flexDirection","divLock","gridTemplateColumns","gridTemplateRows","marginTop"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport TableIcons from '../../common/materialicon'\r\nimport Locker from '../../../core/locker'\r\nimport Building from '../../../core/building'\r\nimport Level from '../../../core/level'\r\nimport Controller from '../../../core/controller';\r\nimport Combobox from '../../common/combobox';\r\nimport Input from '../../common/input';\r\nimport Button from '../../common/button';\r\nimport FButton from '../../common/floatbutton'\r\nimport Add from '@material-ui/icons/Add'\r\n\r\nexport default class LockerManagement extends React.Component {\r\n    rBuildingIdInput = 0;\r\n    rLevelIdInput = 0;\r\n    rImeiInput = '';\r\n    rLabelInput = '';\r\n    lPage = [];\r\n    bDatas = [];\r\n    lDatas = [];\r\n    cDatas = [];\r\n\r\n    array1 = {};\r\n\r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    DictLvName = {};\r\n    DictLvId = {};\r\n    Level = [];\r\n    DictBLvIName = {};\r\n    DictBLvIId = {};\r\n    Imei = [];\r\n    Test1 = [];\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShowLock: false,\r\n            BIdInput: 0,\r\n            LvIdInput: 0,\r\n            BLvIInput: '',\r\n            LabelInput: '',\r\n            test: true,\r\n            Lockers: [],\r\n        };\r\n        this.tableRef = React.createRef();\r\n    }\r\n\r\n    onChangeBLvI = (value) => {\r\n        this.setState({\r\n            BLvIInput: this.DictBLvIId[value]\r\n        })\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.setState(\r\n            {\r\n                LvIdInput: this.DictLvId[value]\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    onChangeBuild = (value) => {\r\n        this.setState(\r\n            {\r\n                BIdInput: this.DictBId[value]\r\n\r\n            }\r\n        )\r\n    }\r\n\r\n    onLabelChange = (value) => {\r\n        this.setState(\r\n            {\r\n                LabelInput: value,\r\n            }\r\n        )\r\n    }\r\n\r\n    onSearchClick = () => {\r\n        //     this.tableRef.current && this.tableRef.current.onQueryChange();\r\n        this.Test1 = [];\r\n        Locker.getLocker(this.state.BIdInput, this.state.LvIdInput, this.state.BLvIInput, this.state.LabelInput, 0, 0, 1)\r\n            .then(value => {\r\n                if (value.items !== undefined) {\r\n                    if (value.items.length > 0) {\r\n                        value.items.map((item, index) => {\r\n                            this.Test1[index] = item.lLb;\r\n                            this.array1[item.lRw] = item.lCl;\r\n                        })\r\n                        //this.array1 = value.items;                \r\n                    }\r\n                    this.setState({\r\n                        Lockers: this.Test1,\r\n                    })\r\n                }\r\n                console.log(this.array1);\r\n\r\n            })\r\n        console.log(this.state.Lockers);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //       this.setState({isShowLock: false})\r\n        Building.getBuilding()\r\n            .then(value => {\r\n                if (value) {\r\n                    if (value.items.length > 0) {\r\n                        value.items.map((item, index) => {\r\n                            this.DictBName[item.bId] = item.bName;\r\n                            this.DictBId[item.bName] = item.bId;\r\n                            this.Build[index] = item.bName;\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n\r\n        Level.getLevel()\r\n            .then(value => {\r\n                if (value) {\r\n                    if (value.items.length > 0) {\r\n                        value.items.map((item, index) => {\r\n                            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\r\n                            this.DictLvName[item.lId] = bLv;\r\n                            this.DictLvId[bLv] = item.lId;\r\n                            this.Level[index] = bLv;\r\n                        })\r\n\r\n                    }\r\n                }\r\n            })\r\n\r\n        Controller.getController()\r\n            .then(value => {\r\n                if (value) {\r\n                    if (value.items.length > 0) {\r\n                        value.items.map((item, index) => {\r\n                            let bLvImei = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' + item.eLabel;\r\n                            this.DictBLvIName[item.imei] = bLvImei;\r\n                            this.DictBLvIId[bLvImei] = item.imei;\r\n                            this.Imei[index] = bLvImei;\r\n                        })\r\n                    }\r\n                }\r\n            })\r\n    }\r\n\r\n    render() {\r\n        // let ManageLocker = null;\r\n        // if(this.state.Test){\r\n        //     ManageLocker = this.state.Test.map((item, index)=> {\r\n        //         return(\r\n        //         <div className=\"test\">\r\n        //             {item}\r\n        //         </div>\r\n        //         ) \r\n        //     });\r\n        // }\r\n        let cot = 0;\r\n        let hang = 0;\r\n        let ManageLocker = [];\r\n            for (cot = 0; cot < 7; cot++) {\r\n                for (hang = 0; hang < 3; hang++) {\r\n                    this.state.Locker.map((item, index) => {\r\n                        if (item.lCl === cot && item.lRw === hang) {\r\n                            ManageLocker.push(\r\n                                <div style={styles.locker}>\r\n                                    {item}\r\n                                </div>\r\n                            );\r\n                            console.log(ManageLocker);\r\n                        }\r\n                        else {\r\n                            ManageLocker.push(\r\n                                <div>\r\n\r\n                                </div>\r\n                            )\r\n\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n         \r\n        console.log(ManageLocker);\r\n        // let lst = [\r\n        //     <div>\r\n        //         test\r\n        //     </div>,\r\n        //     '2',\r\n        //     '3',\r\n        //     '4',\r\n        //     '5',\r\n        //     '6'\r\n        // ]\r\n        // console.log(lst);\r\n\r\n        return (\r\n            <Fragment>\r\n                <div style={{ margin: '30px 10px 40px 20px' }}>\r\n                    <h2>\r\n                        Quản lý tủ\r\n                  </h2>\r\n                </div>\r\n                <div className=\"around\">\r\n\r\n                    <div className=\"title-style\">\r\n                        <span>\r\n                            Danh sách các tòa nhà trong hệ thống\r\n                            </span>\r\n                    </div>\r\n                    <div className=\"div-control\" style={{ display: 'flex' }}>\r\n                        <Combobox\r\n                            title={'Tòa nhà'}\r\n                            data={this.Build}\r\n                            onChange={this.onChangeBuild}\r\n                        />\r\n\r\n                        <Combobox\r\n                            title={'Tầng'}\r\n                            data={this.Level}\r\n                            onChange={this.onChangeBLevel}\r\n\r\n                        />\r\n\r\n                        <Combobox\r\n                            title={'Thiết bị quản lý'}\r\n                            data={this.Imei}\r\n                            onChange={this.onChangeBLvI}\r\n                        />\r\n\r\n                        <Input\r\n                            title={'Nhãn tủ'}\r\n                            onChange={this.onLabelChange\r\n                            }\r\n                        />\r\n                        <Button\r\n                            title={'Tìm kiếm'}\r\n                            onClick={this.onSearchClick}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div>\r\n                            {/* {ManageLocker} */}\r\n                            {ManageLocker.map((item) => {\r\n                                return (\r\n                                    <div>{item}</div>\r\n                                )\r\n                            })}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <FButton title={'aaaa'}\r\n                    icon={<Add/>}\r\n                    position={['auto', 20, 'auto', 100]} />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n\r\n    locker: {\r\n        border: '1px solid white',\r\n        fontSize: '15px',\r\n        padding: '10px',\r\n        textAlign: 'center',\r\n        minHeight: '120px',\r\n        background: 'rgb(76, 175, 80)',\r\n        color: 'white',\r\n        fontWeight: 600,\r\n        cursor: 'pointer',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexDirection: 'column',\r\n    },\r\n\r\n\r\n    divLock: {\r\n        gridTemplateColumns: 'repeat(7, 1fr)',\r\n        gridTemplateRows: 'repeat(3, 1fr)',\r\n        display: 'grid',\r\n        marginTop: '30px',\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}