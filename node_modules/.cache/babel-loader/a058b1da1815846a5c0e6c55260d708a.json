{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Departments {\n  constructor() {\n    this.getDepartment = async (dId = 0, name = '', page = 0) => {\n      try {\n        let url = ApiUri.department.getDepartment.uri;\n        url += '?name=' + name;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&dId=' + dId;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.department.getDepartment.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.createDepartment = async (name = '') => {\n      try {\n        let url = ApiUri.department.createDepartment.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'name': name\n        };\n        return await fetch(url, {\n          method: ApiUri.department.createDepartment.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.editDepartment = async (dId = 0, name = '') => {\n      try {\n        let url = ApiUri.department.editDepartment.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'dId': dId,\n          'name': name\n        };\n        return await fetch(url, {\n          method: ApiUri.department.editDepartment.method,\n          mode: 'cors',\n          cache: 'no-cache',\n          headers: {\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.removeDepartment = async (dId = 0) => {\n      try {\n        let url = ApiUri.department.removeDepartment.uri;\n        let form = {\n          'token': localStorage.getItem('crfs'),\n          'dId': dId\n        };\n        return await fetch(url, {\n          method: ApiUri.department.removeDepartment.method,\n          // mode: 'cors',\n          headers: {\n            'Access-Control-Allow-Origin': '*',\n            'Access-Control-Allow-Headers': '*',\n            'Content-Type': 'application/json',\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          },\n          referrerPolicy: 'no-referrer',\n          body: JSON.stringify(form)\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Department = new Departments();\nexport default Department;","map":{"version":3,"sources":["E:/DATN_2020/src/core/department.js"],"names":["ApiUri","server","Departments","getDepartment","dId","name","page","url","department","uri","localStorage","getItem","fetch","method","headers","then","response","json","catch","console","error","createDepartment","form","mode","cache","referrerPolicy","body","JSON","stringify","editDepartment","removeDepartment","Department"],"mappings":"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","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Departments {\r\n\r\n    getDepartment = async (dId = 0, name = '', page = 0) => {\r\n        try {\r\n            let url = ApiUri.department.getDepartment.uri;\r\n            url += '?name=' + name;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&dId=' + dId;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.department.getDepartment.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n    }\r\n\r\n    createDepartment = async (name = '') => {\r\n        try {\r\n            let url = ApiUri.department.createDepartment.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'name': name,\r\n            }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.department.createDepartment.method,\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n\r\n    editDepartment = async (dId = 0, name = '') => {\r\n        try {\r\n            let url = ApiUri.department.editDepartment.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'dId': dId,\r\n                'name': name,\r\n                }\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.department.editDepartment.method,\r\n\r\n                mode: 'cors',\r\n                cache: 'no-cache',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    removeDepartment = async (dId = 0) => {\r\n        try {\r\n            let url = ApiUri.department.removeDepartment.uri;\r\n\r\n            let form = {\r\n                'token': localStorage.getItem('crfs'),\r\n                'dId': dId,\r\n            }\r\n            return await fetch(url, {\r\n                method: ApiUri.department.removeDepartment.method,\r\n                // mode: 'cors',\r\n                headers: {\r\n                    'Access-Control-Allow-Origin': '*',\r\n                    'Access-Control-Allow-Headers': '*',\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                },\r\n                referrerPolicy: 'no-referrer',\r\n                body: JSON.stringify(form)\r\n            }).then(response => response.json())\r\n                .catch(console.error)\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n}\r\n\r\nvar Department = new Departments();\r\nexport default Department;"]},"metadata":{},"sourceType":"module"}