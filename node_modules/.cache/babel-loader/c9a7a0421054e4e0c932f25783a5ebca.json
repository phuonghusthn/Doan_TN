{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\usingmanagement\\\\mapuserlockermanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport UserLoker from '../../../core/user';\nimport ManageLoker from '../../../core/locker';\nimport TableIcons from '../../common/materialicon';\nimport Department from '../../../core/department';\nimport Input from '../../common/input';\nimport Button from '../../common/button';\nimport Combobox from '../../common/combobox';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nimport Controller from '../../../core/controller';\nimport Checkbox from '../../common/checkbox';\nexport default class MapUserLockerManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.dictDev = {};\n    this.Dep = [];\n    this.dictDid = {};\n    this.DidInput = 0;\n    this.DictBName = {};\n    this.Build = [];\n    this.DictBId = {};\n    this.BIdInput = 0;\n    this.DictLvName = {};\n    this.DictLvId = {};\n    this.Level = [];\n    this.LvIdInput = 0;\n    this.DictBLvIName = {};\n    this.DictBLvIId = {};\n    this.Imei = [];\n    this.BLvIInput = '';\n    this.ENameInput = '';\n    this.ECodeInput = '';\n    this.LabelInput = '';\n    this.LabelInputTable2 = '';\n    this.IsGroupInput1 = 0;\n    this.IsGroupInput2 = 0;\n    this.listEmployeeChecked = [];\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20],\n      showTitle: false,\n      selection: true,\n      rowStyle: rowData => ({\n        backgroundColor: rowData.tableData.id % 2 ? 'rgb(247, 247, 247)' : '#FFF'\n      }),\n      toolbar: false,\n      headerStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)',\n        fontWeight: 'bold',\n        textAlign: 'center'\n      },\n      cellStyle: {\n        border: '1px solid rgba(224, 224, 224, 1)'\n      }\n    };\n    this.columnsTable1 = [{\n      title: 'Họ và tên',\n      field: 'name',\n      render: rowData => {\n        if (this.listEmployeeChecked.includes(rowData.eId)) {\n          return /*#__PURE__*/React.createElement(Checkbox, {\n            checked: true,\n            title: rowData.name,\n            data: rowData,\n            onChange: this.onEmployeeChecked,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(Checkbox, {\n            checked: false,\n            title: rowData.name,\n            data: rowData,\n            onChange: this.onEmployeeChecked,\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 25\n            }\n          });\n        }\n      }\n    }, {\n      title: 'ID nhân sụ',\n      field: 'eCode'\n    }, {\n      title: 'Bộ phận làm việc',\n      field: 'dId',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 21\n          }\n        }, this.dictDev[rowData.dId]);\n      }\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gStatus',\n      render: rowData => {\n        if (rowData.gStatus === 1) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 25\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }];\n    this.columnsTable2 = [{\n      title: 'Tòa',\n      field: 'bName'\n    }, {\n      title: 'Tầng',\n      field: 'lLv',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 21\n          }\n        }, \" T\\u1EA7ng \", rowData.lLv, \" \");\n      }\n    }, {\n      title: 'Tủ',\n      field: 'lLb'\n    }, {\n      title: 'Tình trạng phân tủ',\n      field: 'gName',\n      render: rowData => {\n        if (rowData.gName === 'Đã được phân nhóm') {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 21\n            }\n          }, \"\\u0110\\xE3 \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 25\n            }\n          }, \"Ch\\u01B0a \\u0111\\u01B0\\u1EE3c ph\\xE2n t\\u1EE7\");\n        }\n      }\n    }];\n\n    this.onENameChange = value => {\n      this.ENameInput = value;\n    };\n\n    this.onECodeChange = value => {\n      this.ECodeInput = value;\n    };\n\n    this.onLabelChange = value => {\n      this.LabelInput = value;\n    };\n\n    this.onLabelChange2 = value => {\n      this.LabelInputTable2 = value;\n    };\n\n    this.onEmployeeChecked = (data, status) => {\n      if (status) {\n        this.listEmployeeChecked.push(data.eId);\n      } else {\n        let eIndex = this.listEmployeeChecked.findIndex(value => {\n          return value === data.eId;\n        });\n        this.listEmployeeChecked.splice(eIndex, 1);\n        console.log(this.listEmployeeChecked);\n      }\n    };\n\n    this.onChangeGroup1 = value => {\n      if (value === 'Đã được phân tủ') {\n        this.IsGroupInput1 = 2;\n      } else {\n        this.IsGroupInput1 = 1;\n      }\n    };\n\n    this.onChangeDep = value => {\n      this.DidInput = this.dictDid[value];\n    };\n\n    this.onChangeBLvI = value => {\n      this.BLvIInput = this.DictBLvIId[value];\n    };\n\n    this.onChangeBLevel = value => {\n      this.LvIdInput = this.DictLvId[value];\n    };\n\n    this.onChangeBuild = value => {\n      this.BIdInput = this.DictBId[value];\n    };\n\n    this.onChangeGroup2 = value => {\n      if (value === 'Đã được phân tủ') {\n        this.IsGroupInput2 = 2;\n      } else {\n        this.IsGroupInput2 = 1;\n      }\n    };\n\n    this.onSearchClick1 = () => {\n      this.tableRef1.current && this.tableRef1.current.onQueryChange();\n    };\n\n    this.onSearchClick2 = () => {\n      this.tableRef2.current && this.tableRef2.current.onQueryChange(); // if (typeof this.tableRef.current !== 'undefined'){\n      //     this.tableRef.current.onQueryChange();\n      // }\n    };\n\n    this.onMouseOverHeader = () => {\n      this.setState({\n        headerColor: 'red'\n      });\n    };\n\n    this.onMouseLeaveHeader = () => {\n      this.setState({\n        headerColor: 'black'\n      });\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        UserLoker.getUser(this.DidInput, this.ENameInput, this.ECodeInput, '', '', 0, 0, this.IsGroupInput1, query.page + 1).then(value => {\n          if (value) {\n            resolve({\n              data: value.items,\n              page: value.currentPage - 1,\n              totalCount: value.total\n            });\n          } else {\n            resolve({\n              data: [],\n              page: 0,\n              totalCount: 0\n            });\n          }\n        });\n      });\n    };\n\n    this.getLokerDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        ManageLoker.getLocker(this.BIdInput, this.LvIdInput, this.BLvIInput, this.LabelInputTable2, 0, this.IsGroupInput2, query.page + 1).then(value => {\n          if (value) {\n            resolve({\n              data: value.items,\n              page: value.currentPage - 1,\n              totalCount: value.total\n            });\n          } else {\n            resolve({\n              data: [],\n              page: 0,\n              totalCount: 0\n            });\n          }\n        });\n      });\n    };\n\n    this.state = {\n      isUpdateView: false,\n      headerColor: 'black'\n    };\n    this.tableRef1 = React.createRef();\n    this.tableRef2 = React.createRef();\n    this.modalRef = React.createRef();\n  }\n\n  componentDidMount() {\n    Department.getDepartment().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.dictDev[item.dId] = item.dName;\n            }\n            {\n              this.Dep[index] = item.dName;\n            }\n            {\n              this.dictDid[item.dName] = item.dId;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            this.DictBName[item.bId] = item.bName;\n            this.DictBId[item.bName] = item.bId;\n            this.Build[index] = item.bName;\n          });\n        }\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLv = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv;\n            this.DictLvName[item.lId] = bLv;\n            this.DictLvId[bLv] = item.lId;\n            this.Level[index] = bLv;\n          });\n        }\n      }\n    });\n    Controller.getController().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            let bLvImei = ' Tòa ' + item.bName + ' - Tầng ' + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' + item.eLabel;\n            this.DictBLvIName[item.imei] = bLvImei;\n            this.DictBLvIId[bLvImei] = item.imei;\n            this.Imei[index] = bLvImei; //    console.log(index);\n          });\n          console.log(this.imei);\n        }\n      }\n    });\n  }\n\n  render() {\n    let headerStyle = {\n      color: this.state.headerColor\n    };\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.mainContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      onMouseOver: this.onMouseOverHeader,\n      onMouseLeave: this.onMouseLeaveHeader,\n      style: headerStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 21\n      }\n    }, \" \\u0110\\u0103ng k\\xFD s\\u1EED d\\u1EE5ng t\\u1EE7 cho nh\\xE2n vi\\xEAn\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        margin: '0px 5px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 33\n      }\n    }, \"Danh s\\xE1ch ng\\u01B0\\u1EDDi d\\xF9ng hi\\u1EC7n t\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.groupSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Tên nhân viên',\n      onChange: this.onENameChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'ID nhân sự',\n      onChange: this.onECodeChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Bộ phận làm việc',\n      data: this.Dep,\n      onChange: this.onChangeDep,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      data: ['Đã được phân tủ', 'Chưa được phân tủ'],\n      onChange: this.onChangeGroup1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick1,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 37\n      }\n    }))), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef1,\n      options: this.optionsTable,\n      columns: this.columnsTable1,\n      data: this.getDataFromServer,\n      icons: TableIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        flex: '1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"around\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title-style\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 33\n      }\n    }, \"Danh s\\xE1ch t\\u1EE7 hi\\u1EC7n t\\u1EA1i\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.groupSearch,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 458,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      data: this.Build,\n      onChange: this.onChangeBuild,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      data: this.Level,\n      onChange: this.onChangeBLevel,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      data: this.Imei,\n      onChange: this.onChangeBLvI,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 474,\n        columnNumber: 41\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 481,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 482,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 483,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 489,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tình trạng phân tủ',\n      data: ['Đã được phân tủ', 'Chưa được phân tủ'],\n      onChange: this.onChangeGroup2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: styles.searchInput,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 499,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 500,\n        columnNumber: 41\n      }\n    })))), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef2,\n      options: this.optionsTable,\n      columns: this.columnsTable2,\n      data: this.getLokerDataFromServer,\n      icons: TableIcons,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 29\n      }\n    })), \">\")));\n  }\n\n}\nconst styles = {\n  mainContainer: {\n    margin: '30px 10px 40px 20px'\n  },\n  searchContainer: {\n    display: 'flex'\n  },\n  searchInput: {\n    flex: 1,\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    paddingRight: 10\n  },\n  groupSearch: {\n    marginBottom: '30px'\n  }\n};","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/usingmanagement/mapuserlockermanagement.js"],"names":["React","Fragment","MaterialTable","UserLoker","ManageLoker","TableIcons","Department","Input","Button","Combobox","Building","Level","Controller","Checkbox","MapUserLockerManagement","Component","constructor","props","dictDev","Dep","dictDid","DidInput","DictBName","Build","DictBId","BIdInput","DictLvName","DictLvId","LvIdInput","DictBLvIName","DictBLvIId","Imei","BLvIInput","ENameInput","ECodeInput","LabelInput","LabelInputTable2","IsGroupInput1","IsGroupInput2","listEmployeeChecked","optionsTable","search","pageSize","pageSizeOptions","showTitle","selection","rowStyle","rowData","backgroundColor","tableData","id","toolbar","headerStyle","border","fontWeight","textAlign","cellStyle","columnsTable1","title","field","render","includes","eId","name","onEmployeeChecked","dId","gStatus","color","columnsTable2","lLv","gName","onENameChange","value","onECodeChange","onLabelChange","onLabelChange2","data","status","push","eIndex","findIndex","splice","console","log","onChangeGroup1","onChangeDep","onChangeBLvI","onChangeBLevel","onChangeBuild","onChangeGroup2","onSearchClick1","tableRef1","current","onQueryChange","onSearchClick2","tableRef2","onMouseOverHeader","setState","headerColor","onMouseLeaveHeader","getDataFromServer","query","Promise","resolve","reject","getUser","page","then","items","currentPage","totalCount","total","getLokerDataFromServer","getLocker","state","isUpdateView","createRef","modalRef","componentDidMount","getDepartment","length","map","item","index","dName","getBuilding","bId","bName","getLevel","bLv","lId","getController","bLvImei","sLabel","eLabel","imei","styles","mainContainer","display","margin","flex","groupSearch","searchContainer","searchInput","justifyContent","alignItems","paddingRight","marginBottom"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport UserLoker from '../../../core/user';\r\nimport ManageLoker from '../../../core/locker';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Department from '../../../core/department';\r\nimport Input from '../../common/input'\r\nimport Button from '../../common/button'\r\nimport Combobox from '../../common/combobox'\r\nimport Building from '../../../core/building'\r\nimport Level from '../../../core/level'\r\nimport Controller from '../../../core/controller'\r\nimport Checkbox from '../../common/checkbox'\r\n\r\n\r\nexport default class MapUserLockerManagement extends React.Component {\r\n    dictDev ={};\r\n    Dep = [];\r\n    dictDid = {};\r\n    DidInput = 0;\r\n    DictBName = {};\r\n    Build = [];\r\n    DictBId = {};\r\n    BIdInput = 0;\r\n    DictLvName = {};\r\n    DictLvId ={};\r\n    Level =[];\r\n    LvIdInput = 0;\r\n    DictBLvIName = {};\r\n    DictBLvIId = {};\r\n    Imei = [];\r\n    BLvIInput = '';\r\n    ENameInput = '';\r\n    ECodeInput = '';\r\n    LabelInput = '';\r\n    LabelInputTable2 = '';\r\n    IsGroupInput1 = 0;\r\n    IsGroupInput2 = 0;\r\n    listEmployeeChecked = [];\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n            headerColor: 'black',\r\n\r\n        };\r\n        this.tableRef1 = React.createRef();\r\n        this.tableRef2 = React.createRef();\r\n        this.modalRef = React.createRef();\r\n    }\r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n        showTitle: false,\r\n        selection: true,\r\n        rowStyle: rowData =>({\r\n            backgroundColor: (rowData.tableData.id %2)?'rgb(247, 247, 247)': '#FFF',\r\n            \r\n        }),\r\n        toolbar: false,\r\n        headerStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)',\r\n            fontWeight: 'bold',\r\n            textAlign: 'center',     \r\n          },\r\n        cellStyle: {\r\n            border: '1px solid rgba(224, 224, 224, 1)'\r\n        },\r\n        \r\n    }\r\n\r\n    columnsTable1 = [\r\n        {\r\n             title: 'Họ và tên', \r\n             field: 'name',\r\n             render: rowData => {\r\n                if (this.listEmployeeChecked.includes(rowData.eId))\r\n                {\r\n                    return (\r\n                        <Checkbox checked={true}\r\n                           title={rowData.name}\r\n                           data={rowData}\r\n                           onChange={this.onEmployeeChecked}/>\r\n                    )   \r\n                }\r\n                else{\r\n                    return (\r\n                        <Checkbox checked={false}\r\n                           title={rowData.name}\r\n                           data={rowData}\r\n                           onChange={this.onEmployeeChecked}/>\r\n                    )   \r\n                }\r\n             }\r\n        },\r\n        {\r\n             title: 'ID nhân sụ', \r\n             field: 'eCode'\r\n         },\r\n        { \r\n            title: 'Bộ phận làm việc',\r\n            field: 'dId', \r\n            render: rowData => {\r\n                return(\r\n                    <span>\r\n                        {this.dictDev[rowData.dId]}\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ', \r\n            field:'gStatus',\r\n            render: rowData => {\r\n                if(rowData.gStatus === 1) {\r\n                    return(\r\n                        <span style={{color: 'green'}}>\r\n                            Đã được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'red'}}>\r\n                            Chưa được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        },\r\n    \r\n    ]\r\n\r\n    columnsTable2 = [\r\n        {\r\n            title: 'Tòa',\r\n            field: 'bName'\r\n        },\r\n        {\r\n            title: 'Tầng',\r\n            field: 'lLv', render: rowData =>\r\n            {\r\n                return(\r\n                    <span> Tầng {rowData.lLv} </span>\r\n                )\r\n            }\r\n        },\r\n        {\r\n            title: 'Tủ',\r\n            field: 'lLb'\r\n        },\r\n        {\r\n            title: 'Tình trạng phân tủ',\r\n            field: 'gName',\r\n            render: rowData => {\r\n                if(rowData.gName === 'Đã được phân nhóm') {\r\n                    return(\r\n                    <span style={{color: 'green'}}> \r\n                        Đã được phân tủ\r\n                    </span>\r\n                    )\r\n                }\r\n                else {\r\n                    return(\r\n                        <span style={{color: 'red'}}> \r\n                            Chưa được phân tủ\r\n                        </span>\r\n                    )\r\n                }\r\n            }\r\n        }\r\n    ]\r\n    \r\n    onENameChange = (value) => {\r\n        this.ENameInput = value;\r\n    }\r\n\r\n    onECodeChange = (value) => {\r\n        this.ECodeInput = value;\r\n    } \r\n\r\n    onLabelChange = (value) => {\r\n        this.LabelInput = value;\r\n    }\r\n\r\n    onLabelChange2 = (value) => {\r\n        this.LabelInputTable2 = value;\r\n    }\r\n\r\n    onEmployeeChecked = (data, status) => {\r\n        if (status) {\r\n            this.listEmployeeChecked.push(data.eId);\r\n        }\r\n        else{\r\n            let eIndex = this.listEmployeeChecked.findIndex(value => {\r\n                return value === data.eId;\r\n            })\r\n\r\n            this.listEmployeeChecked.splice(eIndex, 1);\r\n\r\n            console.log(this.listEmployeeChecked);\r\n        }\r\n    }\r\n\r\n    onChangeGroup1 = (value) => {\r\n        if( value === 'Đã được phân tủ') {\r\n            this.IsGroupInput1 = 2;\r\n        }\r\n        else {\r\n            this.IsGroupInput1 = 1;\r\n        }\r\n    }\r\n\r\n    onChangeDep = (value) => {\r\n        this.DidInput = this.dictDid[value];\r\n    }\r\n\r\n    onChangeBLvI = (value) => {\r\n        this.BLvIInput = this.DictBLvIId[value];\r\n    }\r\n\r\n    onChangeBLevel = (value) => {\r\n        this.LvIdInput = this.DictLvId[value];\r\n    }\r\n\r\n    onChangeBuild = (value) => {\r\n        this.BIdInput = this.DictBId[value];\r\n    }\r\n\r\n    onChangeGroup2 = (value) => {\r\n        if( value === 'Đã được phân tủ') {\r\n            this.IsGroupInput2 = 2;\r\n        }\r\n        else {\r\n            this.IsGroupInput2 = 1;\r\n        }\r\n    }\r\n\r\n    onSearchClick1 = () => {\r\n        this.tableRef1.current && this.tableRef1.current.onQueryChange();\r\n    }\r\n\r\n    onSearchClick2 = () => {\r\n        this.tableRef2.current && this.tableRef2.current.onQueryChange();\r\n        // if (typeof this.tableRef.current !== 'undefined'){\r\n        //     this.tableRef.current.onQueryChange();\r\n        // }\r\n    }\r\n\r\n    onMouseOverHeader = () => {\r\n        this.setState({\r\n            headerColor: 'red'\r\n        })\r\n    }\r\n\r\n    onMouseLeaveHeader = () => {\r\n        this.setState({\r\n            headerColor: 'black'\r\n        })\r\n    }\r\n\r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            UserLoker.getUser(this.DidInput, this.ENameInput, this.ECodeInput, '', '', 0, 0, this.IsGroupInput1, query.page +1)\r\n                .then(value => {\r\n                    if(value){\r\n                        resolve({\r\n                            data: value.items,\r\n                            page: value.currentPage - 1,\r\n                            totalCount: value.total,\r\n                        })\r\n                    } \r\n                    else {\r\n                        resolve({\r\n                            data: [],\r\n                            page: 0,\r\n                            totalCount: 0,\r\n                        }) \r\n                    }\r\n                })\r\n        })\r\n    }\r\n\r\n    getLokerDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            ManageLoker.getLocker(this.BIdInput, this.LvIdInput, this.BLvIInput, this.LabelInputTable2, 0, this.IsGroupInput2, query.page +1)\r\n                .then(value => {\r\n                    if(value){\r\n                        resolve({\r\n                            data: value.items,\r\n                            page: value.currentPage - 1,\r\n                            totalCount: value.total,\r\n                        }) \r\n                    }\r\n                    else {\r\n                        resolve({\r\n                            data: [],\r\n                            page: 0,\r\n                            totalCount: 0,\r\n                        }) \r\n                    }\r\n                    \r\n                })\r\n        })\r\n    }\r\n\r\n    componentDidMount() {\r\n        Department.getDepartment()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item, index) => {\r\n                            {this.dictDev[item.dId] = item.dName}\r\n                            {this.Dep[index] = item.dName}\r\n                            {this.dictDid[item.dName] = item.dId}\r\n                        })\r\n                    }\r\n                    this.setState({\r\n                        isUpdateView: !this.isUpdateView,\r\n                    });\r\n                }\r\n        })\r\n\r\n        Building.getBuilding()\r\n            .then(value => {\r\n                if(value) {\r\n                    if(value.items.length >0) {\r\n                        value.items.map((item,index) => {\r\n                            this.DictBName[item.bId] = item.bName;\r\n                            this.DictBId[item.bName] = item.bId;\r\n                            this.Build[index] = item.bName; \r\n                        })\r\n                    }\r\n                } \r\n        })\r\n        \r\n        Level.getLevel() \r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item,index) => {\r\n                        let bLv = ' Tòa ' + item.bName + ' - Tầng '  + item.lLv;\r\n                        this.DictLvName[item.lId] = bLv;\r\n                        this.DictLvId[bLv] = item.lId;\r\n                        this.Level[index] = bLv ;\r\n                    })\r\n                    \r\n                }\r\n            }\r\n        })\r\n\r\n        Controller.getController()\r\n        .then(value => {\r\n            if(value) {\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        let bLvImei =' Tòa ' + item.bName + ' - Tầng '  + item.lLv + '- quản lý cụm tủ: ' + item.sLabel + ' đến ' +  item.eLabel;\r\n                        this.DictBLvIName[item.imei] = bLvImei;\r\n                        this.DictBLvIId[bLvImei] = item.imei;\r\n                        this.Imei[index] = bLvImei;\r\n                    //    console.log(index);\r\n                    })\r\n                    console.log(this.imei)\r\n                    \r\n                }\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        let headerStyle = {\r\n            color: this.state.headerColor,\r\n        }\r\n\r\n        return(\r\n            <Fragment>\r\n                <div style={styles.mainContainer}>\r\n                    <h2 onMouseOver={this.onMouseOverHeader}\r\n                        onMouseLeave={this.onMouseLeaveHeader}\r\n                        style={headerStyle}> Đăng ký sử dụng tủ cho nhân viên\r\n                    </h2>\r\n                </div>\r\n                \r\n                <div style={{display:'flex', margin: '0px 5px'}}>\r\n                    <div style={{flex: '1'}}>\r\n                        <div className =\"around\">\r\n                            <div className= \"title-style\">\r\n                                <span> \r\n                                Danh sách người dùng hiện tại\r\n                                </span>\r\n                            </div>\r\n                            <div style={styles.groupSearch}>\r\n                                <div style={styles.searchContainer}>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Input \r\n                                            title={'Tên nhân viên'} \r\n                                            onChange = {this.onENameChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Input \r\n                                            title={'ID nhân sự'} \r\n                                            onChange = {this.onECodeChange}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Combobox\r\n                                            title={'Bộ phận làm việc'} \r\n                                            data = {this.Dep}\r\n                                            onChange = {this.onChangeDep}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.searchContainer}>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Combobox\r\n                                            title={'Tình trạng phân tủ'} \r\n                                            data = {[\r\n                                                'Đã được phân tủ',\r\n                                                'Chưa được phân tủ'\r\n                                            ]}\r\n                                            onChange = {this.onChangeGroup1}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Button \r\n                                            title={'Tìm kiếm'}\r\n                                            onClick={this.onSearchClick1}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            \r\n                            <MaterialTable\r\n                                tableRef={this.tableRef1}\r\n                                options={this.optionsTable}\r\n                                columns={this.columnsTable1}\r\n                                data={this.getDataFromServer}\r\n                                icons= {TableIcons}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div  style={{flex: '1'}}>\r\n                        <div className =\"around\">\r\n                            <div className= \"title-style\">\r\n                                <span> \r\n                                 Danh sách tủ hiện tại\r\n                                </span>\r\n                            </div>\r\n                            <div style={styles.groupSearch}>\r\n                                <div style={styles.searchContainer}>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Combobox\r\n                                            title={'Tòa nhà'} \r\n                                            data = {this.Build}\r\n                                            onChange = {this.onChangeBuild}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Combobox\r\n                                        title={'Tầng'}\r\n                                        data = {this.Level}\r\n                                        onChange = {this.onChangeBLevel}\r\n                                    />\r\n                                    </div> \r\n                                    <div style={styles.searchInput}>\r\n                                        <Combobox\r\n                                        title={'Thiết bị quản lý'} \r\n                                        data = { this.Imei}\r\n                                        onChange = { this.onChangeBLvI }\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                                <div style={styles.searchContainer}>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Input \r\n                                            title={'Nhãn tủ'} \r\n                                            onChange = {this.onLabelChange2\r\n                                        }\r\n                                    />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Combobox\r\n                                            title={'Tình trạng phân tủ'} \r\n                                            data = {[\r\n                                                'Đã được phân tủ',\r\n                                                'Chưa được phân tủ'\r\n                                            ]}\r\n                                            onChange = {this.onChangeGroup2}\r\n                                        />\r\n                                    </div>\r\n                                    <div style={styles.searchInput}>\r\n                                        <Button title={'Tìm kiếm'}\r\n                                            onClick={this.onSearchClick2}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            \r\n                            </div>\r\n                        \r\n                            <MaterialTable\r\n                                tableRef={this.tableRef2}\r\n                                options={this.optionsTable}\r\n                                columns = {this.columnsTable2}\r\n                                data={this.getLokerDataFromServer}\r\n                                icons= {TableIcons}\r\n                            />\r\n                        </div>>\r\n                    </div>\r\n                </div>\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    mainContainer: {\r\n        margin: '30px 10px 40px 20px',\r\n\r\n    },\r\n\r\n    searchContainer: {\r\n        display: 'flex'\r\n    },\r\n\r\n    searchInput: {\r\n        flex: 1,\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        paddingRight: 10,\r\n    },\r\n\r\n    groupSearch: {\r\n        marginBottom: '30px'\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}