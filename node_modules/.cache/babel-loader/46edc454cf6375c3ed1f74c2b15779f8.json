{"ast":null,"code":"var _jsxFileName = \"E:\\\\DATN_2020\\\\src\\\\components\\\\content\\\\warningmanagement\\\\warningmanagement.js\";\nimport React, { Fragment } from 'react';\nimport MaterialTable from 'material-table';\nimport TableIcons from '../../common/materialicon';\nimport Input from '../../common/input';\nimport Combobox from '../../common/combobox';\nimport Button from '../../common/button';\nimport DatePickers from '../../common/datepicker';\nimport Warning from '../../../core/warning';\nimport Building from '../../../core/building';\nimport Level from '../../../core/level';\nexport default class WarningManagement extends React.Component {\n  constructor(props) {\n    super(props);\n    this.DictBuilding = {};\n    this.DictLevel = {};\n    this.LabelInput = '';\n    this.columnsTable = [{\n      title: 'Loại cảnh báo',\n      field: 'tID',\n      render: rowData => {\n        if (rowData.tId === 2) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'red'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 21\n            }\n          }, \"Thi\\u1EBFt b\\u1ECB m\\u1EA5t k\\u1EBFt n\\u1ED1i\");\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 21\n            }\n          }, \"truy c\\u1EADp t\\u1EE7 tr\\xE1i ph\\xE9p\");\n        }\n      }\n    }, {\n      title: 'Hình thức',\n      field: 'method',\n      render: rowData => {\n        if (rowData.tId === 2) {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 21\n            }\n          });\n        } else {\n          return /*#__PURE__*/React.createElement(\"span\", {\n            style: {\n              color: 'green'\n            },\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 21\n            }\n          }, \"Kh\\xF4ng r\\xF5\");\n        }\n      }\n    }, {\n      title: 'Tòa nhà',\n      field: 'bId',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 21\n          }\n        }, this.DictBuilding[rowData.bId]);\n      }\n    }, {\n      title: 'Tầng',\n      field: 'lLv',\n      render: rowData => {\n        return /*#__PURE__*/React.createElement(\"span\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }\n        }, \"T\\u1EA7ng \", this.DictLevel[rowData.lLv]);\n      }\n    }, {\n      title: 'Tủ',\n      field: 'label'\n    }, {\n      title: 'Thiết bị quản lý',\n      field: 'imei'\n    }, {\n      title: 'Thời gian ghi nhận',\n      field: 'wTime'\n    }];\n    this.optionsTable = {\n      search: false,\n      pageSize: 20,\n      pageSizeOptions: [20]\n    };\n\n    this.onLabelChange = value => {\n      this.LabelInput = value;\n    };\n\n    this.onSearchClick = () => {\n      this.tableRef.current && this.tableRef.current.onQueryChange();\n    };\n\n    this.getDataFromServer = query => {\n      return new Promise((resolve, reject) => {\n        Warning.getWarning(0, 0, '', this.LabelInput, '', 0, 0, '', '', query.page + 1).then(value => {\n          resolve({\n            data: value.items,\n            page: value.currentPage - 1,\n            totalCount: value.total\n          });\n        });\n      });\n    };\n\n    this.state = {\n      isUpdateView: false\n    };\n    this.tableRef = React.createRef();\n  }\n\n  componentWillMount() {}\n\n  componentDidMount() {\n    Building.getBuilding().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.DictBuilding[item.bId] = item.bName;\n            }\n          });\n        }\n\n        this.setState({\n          isUpdateView: !this.isUpdateView\n        });\n      }\n    });\n    Level.getLevel().then(value => {\n      if (value) {\n        if (value.items.length > 0) {\n          value.items.map((item, index) => {\n            {\n              this.DictLevel[item.lId] = item.lLv;\n            }\n          });\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        padding: '10px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, \"C\\u1EA3nh b\\xE1o h\\u1EC7 th\\u1ED1ng\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tòa nhà',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tầng',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Thiết bị quản lý',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Input, {\n      title: 'Nhãn tủ',\n      onChange: this.onLabelChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Tác nhân',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 22\n      }\n    }), /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Loại cảnh báo',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex',\n        width: '70%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Combobox, {\n      title: 'Trạng thái đọc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DatePickers, {\n      title: 'Ngày bắt đầu',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(DatePickers, {\n      title: 'Ngày kết thúc',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      title: 'Tìm kiếm',\n      onClick: this.onSearchClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(MaterialTable, {\n      tableRef: this.tableRef,\n      options: this.optionsTable,\n      title: \"Danh s\\xE1ch c\\xE1c c\\u1EA3nh b\\xE1o h\\u1EC7 th\\u1ED1ng\",\n      icons: TableIcons,\n      data: this.getDataFromServer,\n      columns: this.columnsTable,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}","map":{"version":3,"sources":["E:/DATN_2020/src/components/content/warningmanagement/warningmanagement.js"],"names":["React","Fragment","MaterialTable","TableIcons","Input","Combobox","Button","DatePickers","Warning","Building","Level","WarningManagement","Component","constructor","props","DictBuilding","DictLevel","LabelInput","columnsTable","title","field","render","rowData","tId","color","bId","lLv","optionsTable","search","pageSize","pageSizeOptions","onLabelChange","value","onSearchClick","tableRef","current","onQueryChange","getDataFromServer","query","Promise","resolve","reject","getWarning","page","then","data","items","currentPage","totalCount","total","state","isUpdateView","createRef","componentWillMount","componentDidMount","getBuilding","length","map","item","index","bName","setState","getLevel","lId","padding","display","width"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport MaterialTable from 'material-table';\r\nimport TableIcons from '../../common/materialicon';\r\nimport Input from '../../common/input';\r\nimport Combobox from '../../common/combobox';\r\nimport Button from '../../common/button';\r\nimport DatePickers from '../../common/datepicker';\r\nimport Warning from '../../../core/warning';\r\nimport Building from '../../../core/building';\r\nimport Level from '../../../core/level';\r\n\r\nexport default class WarningManagement extends React.Component {\r\n    DictBuilding = {};\r\n    DictLevel ={};\r\n    LabelInput ='';\r\n\r\n    columnsTable = [\r\n        { title: 'Loại cảnh báo', field: 'tID', render: rowData => {\r\n            if (rowData.tId === 2) {\r\n                return(\r\n                    <span style ={{color: 'red'}}>\r\n                        Thiết bị mất kết nối\r\n                    </span>\r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <span style ={{color: 'green'}}>\r\n                        truy cập tủ trái phép\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        } },\r\n        { title: 'Hình thức', field: 'method', render: rowData => {\r\n            if (rowData.tId === 2) {\r\n                return(\r\n                    <span>\r\n                        \r\n                    </span>\r\n                )\r\n            }\r\n            else {\r\n                return(\r\n                    <span style ={{color: 'green'}}>\r\n                        Không rõ\r\n                    </span>\r\n                )\r\n            }\r\n\r\n        } },\r\n        { \r\n            title: 'Tòa nhà', \r\n            field: 'bId',\r\n            render: rowData => {\r\n                return(\r\n                    <span>{this.DictBuilding[rowData.bId]}</span>\r\n                )\r\n            } \r\n        },\r\n        { \r\n            title: 'Tầng', \r\n            field: 'lLv', \r\n            render: rowData => {\r\n                return(\r\n                    <span>\r\n                        Tầng {this.DictLevel[rowData.lLv]}\r\n                    </span>\r\n                )\r\n            }\r\n        },\r\n        { \r\n            title: 'Tủ', \r\n            field: 'label' \r\n        },\r\n        { \r\n            title: 'Thiết bị quản lý',\r\n             field: 'imei' \r\n        },\r\n        { \r\n            title: 'Thời gian ghi nhận',\r\n             field: 'wTime' \r\n        },\r\n    ] \r\n\r\n    optionsTable = {\r\n        search: false,\r\n        pageSize: 20,\r\n        pageSizeOptions: [20],\r\n    }\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isUpdateView: false,\r\n        };\r\n        this.tableRef = React.createRef();\r\n       \r\n    }\r\n\r\n    onLabelChange = (value) => {\r\n        this.LabelInput = value;\r\n    }\r\n    \r\n    onSearchClick = () => {\r\n        this.tableRef.current && this.tableRef.current.onQueryChange();\r\n    }\r\n    \r\n    getDataFromServer = (query) => {\r\n        return new Promise((resolve, reject) => {\r\n            Warning.getWarning(0,0,'', this.LabelInput,'',0,0,'','', query.page +1)\r\n                .then(value => {\r\n                    resolve({\r\n                        data: value.items,\r\n                        page: value.currentPage - 1,\r\n                        totalCount: value.total,\r\n                    })  \r\n                })\r\n        })\r\n    }\r\n\r\n    componentWillMount() {\r\n        \r\n    }\r\n\r\n    componentDidMount() {\r\n        Building.getBuilding()\r\n        .then(value => {\r\n            if(value){\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        {this.DictBuilding[item.bId] = item.bName}\r\n                    }) \r\n                }\r\n                this.setState({\r\n                    isUpdateView: !this.isUpdateView,\r\n                });\r\n            }\r\n        });\r\n\r\n        Level.getLevel()\r\n        .then(value => {\r\n            if(value){\r\n                if(value.items.length >0) {\r\n                    value.items.map((item, index) => {\r\n                        {this.DictLevel[item.lId] = item.lLv}\r\n                    }) \r\n                }\r\n            }\r\n        });\r\n        \r\n    }\r\n\r\n    \r\n    render() {\r\n        return(\r\n            <Fragment>\r\n                <div style={{padding: '10px'}}>\r\n                  <h1>Cảnh báo hệ thống</h1>\r\n                </div>\r\n\r\n                <div style={{display: 'flex' }}>\r\n                    <Combobox \r\n                    title={'Tòa nhà'} \r\n                    /> \r\n                     <Combobox \r\n                    title={'Tầng'} \r\n                    />                  \r\n\r\n                    <Combobox\r\n                     title={'Thiết bị quản lý'} \r\n                     />\r\n                    <Input \r\n                        title={'Nhãn tủ'} \r\n                        onChange = {this.onLabelChange }\r\n                    />\r\n                     <Combobox \r\n                    title={'Tác nhân'} \r\n                    />\r\n                    <Combobox \r\n                    title={'Loại cảnh báo'} \r\n                    />                   \r\n                </div>\r\n                <div  style={{display: 'flex', width: '70%'}}>\r\n                <Combobox \r\n                title={'Trạng thái đọc'}\r\n                />\r\n                <DatePickers \r\n                title={'Ngày bắt đầu'}\r\n                />\r\n                <DatePickers \r\n                title ={'Ngày kết thúc'}\r\n                />\r\n                <Button \r\n                    title={'Tìm kiếm'}\r\n                    onClick={this.onSearchClick} \r\n                />\r\n                </div>\r\n\r\n                <MaterialTable \r\n                tableRef={this.tableRef}\r\n                options = {this.optionsTable}\r\n                title= 'Danh sách các cảnh báo hệ thống'\r\n                icons= {TableIcons}\r\n                data = {this.getDataFromServer}\r\n                columns = {this.columnsTable}\r\n                />\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}