{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Tags {\n  constructor() {\n    this.getFreeTag = async () => {\n      try {\n        let url = ApiUri.tag.getFreeTag.uri;\n        url += '?token=' + localStorage.getItem('crfs');\n        return await fetch(url, {\n          method: ApiUri.tag.getFreeTag.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n\n    this.getFreeAdminTag = async () => {\n      try {\n        let url = ApiUri.tag.getFreeAdminTag.uri;\n        url += '?token=' + localStorage.getItem('crfs');\n        return await fetch(url, {\n          method: ApiUri.tag.getFreeAdminTag.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Tag = new Tags();\nexport default Tag;","map":{"version":3,"sources":["E:/DATN_2020/src/core/tag.js"],"names":["ApiUri","server","Tags","getFreeTag","url","tag","uri","localStorage","getItem","fetch","method","headers","then","response","json","catch","console","error","getFreeAdminTag","Tag"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;;AAEA,MAAMC,IAAN,CAAW;AAAA;AAAA,SAEPC,UAFO,GAEM,YAAY;AACrB,UAAI;AACA,YAAIC,GAAG,GAAGJ,MAAM,CAACK,GAAP,CAAWF,UAAX,CAAsBG,GAAhC;AACAF,QAAAA,GAAG,IAAI,YAAYG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AAEA,eAAO,MAAMC,KAAK,CAACL,GAAD,EAAM;AACpBM,UAAAA,MAAM,EAAEV,MAAM,CAACK,GAAP,CAAWF,UAAX,CAAsBO,MADV;AAEpBC,UAAAA,OAAO,EAAE;AACL,6BAAiB,YAAYJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AADxB;AAFW,SAAN,CAAL,CAMRI,IANQ,CAMHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANT,EAORC,KAPQ,CAOFC,OAAO,CAACC,KAPN,CAAb;AAQH,OAZD,CAaA,MAAK,CAAG;AAEX,KAlBM;;AAAA,SAoBPC,eApBO,GAoBW,YAAY;AAC1B,UAAI;AACA,YAAId,GAAG,GAAGJ,MAAM,CAACK,GAAP,CAAWa,eAAX,CAA2BZ,GAArC;AACAF,QAAAA,GAAG,IAAI,YAAYG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AAEA,eAAO,MAAMC,KAAK,CAACL,GAAD,EAAM;AACpBM,UAAAA,MAAM,EAAEV,MAAM,CAACK,GAAP,CAAWa,eAAX,CAA2BR,MADf;AAEpBC,UAAAA,OAAO,EAAE;AACL,6BAAiB,YAAYJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AADxB;AAFW,SAAN,CAAL,CAMRI,IANQ,CAMHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANT,EAORC,KAPQ,CAOFC,OAAO,CAACC,KAPN,CAAb;AAQH,OAZD,CAaA,MAAK,CAAG;AAEX,KApCM;AAAA;;AAAA;;AAuCX,IAAIE,GAAG,GAAG,IAAIjB,IAAJ,EAAV;AACA,eAAeiB,GAAf","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Tags {\r\n\r\n    getFreeTag = async () => {\r\n        try {\r\n            let url = ApiUri.tag.getFreeTag.uri;\r\n            url += '?token=' + localStorage.getItem('crfs');\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.tag.getFreeTag.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n\r\n    getFreeAdminTag = async () => {\r\n        try {\r\n            let url = ApiUri.tag.getFreeAdminTag.uri;\r\n            url += '?token=' + localStorage.getItem('crfs');\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.tag.getFreeAdminTag.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n\r\n    }\r\n}\r\n\r\nvar Tag = new Tags();\r\nexport default Tag;"]},"metadata":{},"sourceType":"module"}