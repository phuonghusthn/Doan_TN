{"ast":null,"code":"import { ApiUri, server } from '../staticresources/resources';\n\nclass Controllers {\n  constructor() {\n    this.getController = async (bId = 0, lId = 0, imei = '', mac = '', zone = '', page = 0) => {\n      try {\n        let url = ApiUri.controller.getController.uri;\n        url += '?lId=' + lId;\n        url += '&token=' + localStorage.getItem('crfs');\n        url += '&bId=' + bId;\n        url += '&imei=' + imei;\n        url += '&mac=' + mac;\n        url += '&zone=' + zone;\n        url += '&page=' + page;\n        return await fetch(url, {\n          method: ApiUri.controller.getController.method,\n          headers: {\n            'Authorization': 'Bearer ' + localStorage.getItem('token')\n          }\n        }).then(response => response.json()).catch(console.error);\n      } catch {}\n    };\n  }\n\n}\n\nvar Controller = new Controllers();\nexport default Controller;","map":{"version":3,"sources":["E:/DATN_2020/src/core/controller.js"],"names":["ApiUri","server","Controllers","getController","bId","lId","imei","mac","zone","page","url","controller","uri","localStorage","getItem","fetch","method","headers","then","response","json","catch","console","error","Controller"],"mappings":"AAAA,SAASA,MAAT,EAAiBC,MAAjB,QAA+B,8BAA/B;;AAEA,MAAMC,WAAN,CAAkB;AAAA;AAAA,SAEdC,aAFc,GAEE,OAAOC,GAAG,GAAG,CAAb,EAAgBC,GAAG,GAAG,CAAtB,EAAyBC,IAAI,GAAG,EAAhC,EAAoCC,GAAG,GAAG,EAA1C,EAA8CC,IAAI,GAAG,EAArD,EAAyDC,IAAI,GAAG,CAAhE,KAAsE;AAClF,UAAI;AACA,YAAIC,GAAG,GAAGV,MAAM,CAACW,UAAP,CAAkBR,aAAlB,CAAgCS,GAA1C;AACAF,QAAAA,GAAG,IAAI,UAAUL,GAAjB;AACAK,QAAAA,GAAG,IAAI,YAAYG,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAnB;AACAJ,QAAAA,GAAG,IAAI,UAAUN,GAAjB;AACAM,QAAAA,GAAG,IAAI,WAAWJ,IAAlB;AACAI,QAAAA,GAAG,IAAI,UAAUH,GAAjB;AACAG,QAAAA,GAAG,IAAI,WAAWF,IAAlB;AACAE,QAAAA,GAAG,IAAI,WAAWD,IAAlB;AAEA,eAAO,MAAMM,KAAK,CAACL,GAAD,EAAM;AACpBM,UAAAA,MAAM,EAAEhB,MAAM,CAACW,UAAP,CAAkBR,aAAlB,CAAgCa,MADpB;AAEpBC,UAAAA,OAAO,EAAE;AACL,6BAAiB,YAAYJ,YAAY,CAACC,OAAb,CAAqB,OAArB;AADxB;AAFW,SAAN,CAAL,CAMRI,IANQ,CAMHC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANT,EAORC,KAPQ,CAOFC,OAAO,CAACC,KAPN,CAAb;AAQH,OAlBD,CAmBA,MAAK,CAAG;AACX,KAvBa;AAAA;;AAAA;;AA4BlB,IAAIC,UAAU,GAAG,IAAItB,WAAJ,EAAjB;AACA,eAAesB,UAAf","sourcesContent":["import { ApiUri, server } from '../staticresources/resources'\r\n\r\nclass Controllers {\r\n\r\n    getController = async (bId = 0, lId = 0, imei = '', mac = '', zone = '', page = 0) => {\r\n        try {\r\n            let url = ApiUri.controller.getController.uri;\r\n            url += '?lId=' + lId;\r\n            url += '&token=' + localStorage.getItem('crfs');\r\n            url += '&bId=' + bId;\r\n            url += '&imei=' + imei;\r\n            url += '&mac=' + mac;\r\n            url += '&zone=' + zone;\r\n            url += '&page=' + page;\r\n\r\n            return await fetch(url, {\r\n                method: ApiUri.controller.getController.method,\r\n                headers: {\r\n                    'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n                }\r\n            })\r\n                .then(response => response.json())\r\n                .catch(console.error);\r\n        }\r\n        catch{ }\r\n    }\r\n\r\n    edit\r\n}\r\n\r\nvar Controller = new Controllers();\r\nexport default Controller;"]},"metadata":{},"sourceType":"module"}